

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Jun 23 22:54:37 2024

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1  0000                     
     2                           ; Version 1.45
     3                           ; Generated 16/11/2017 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC18F4620 Definitions
    37                           ; 
    38  0000                     fsr0 equ 0FE9h
    39  0000                     fsr0h equ 0FEAh
    40  0000                     fsr0l equ 0FE9h
    41  0000                     fsr1 equ 0FE1h
    42  0000                     fsr1h equ 0FE2h
    43  0000                     fsr1l equ 0FE1h
    44  0000                     fsr2 equ 0FD9h
    45  0000                     fsr2h equ 0FDAh
    46  0000                     fsr2l equ 0FD9h
    47  0000                     indf0 equ 0FEFh
    48  0000                     indf1 equ 0FE7h
    49  0000                     indf2 equ 0FDFh
    50  0000                     intcon equ 0FF2h
    51  0000                     nvmcon equ 00h
    52  0000                     pcl equ 0FF9h
    53  0000                     pclath equ 0FFAh
    54  0000                     pclatu equ 0FFBh
    55  0000                     plusw0 equ 0FEBh
    56  0000                     plusw1 equ 0FE3h
    57  0000                     plusw2 equ 0FDBh
    58  0000                     postdec0 equ 0FEDh
    59  0000                     postdec1 equ 0FE5h
    60  0000                     postdec2 equ 0FDDh
    61  0000                     postinc0 equ 0FEEh
    62  0000                     postinc1 equ 0FE6h
    63  0000                     postinc2 equ 0FDEh
    64  0000                     preinc0 equ 0FECh
    65  0000                     preinc1 equ 0FE4h
    66  0000                     preinc2 equ 0FDCh
    67  0000                     prod equ 0FF3h
    68  0000                     prodh equ 0FF4h
    69  0000                     prodl equ 0FF3h
    70  0000                     status equ 0FD8h
    71  0000                     tablat equ 0FF5h
    72  0000                     tblptr equ 0FF6h
    73  0000                     tblptrh equ 0FF7h
    74  0000                     tblptrl equ 0FF6h
    75  0000                     tblptru equ 0FF8h
    76  0000                     tosl equ 0FFDh
    77  0000                     wreg equ 0FE8h
    78  0000                     
     2                           opt pagewidth 120
     3  0000                     setc   macro
     4                           	bsf	status,0
     5                           endm
     6  0000                     clrz   macro
     7                           	bcf	status,2
     8                           endm
     9  0000                     setz   macro
    10                           	bsf	status,2
    11                           endm
    12  0000                     skipnz macro
    13                           	btfsc	status,2
    14                           endm
    15  0000                     skipz  macro
    16                           	btfss	status,2
    17                           endm
    18  0000                     skipnc macro
    19                           	btfsc	status,0
    20                           endm
    21  0000                     skipc  macro
    22                           	btfss	status,0
    23                           endm
    24  0000                     pushw macro
    25                           	movwf postinc1
    26                           endm
    27  0000                     pushf macro arg1
    28                           	movff arg1, postinc1
    29                           endm
    30  0000                     popw macro
    31                           	movf postdec1,f
    32                           	movf indf1,w
    33                           endm
    34  0000                     popf macro arg1
    35                           	movf postdec1,f
    36                           	movff indf1,arg1
    37                           endm
    38  0000                     popfc macro arg1
    39                           	movff plusw1,arg1
    40                           	decfsz fsr1,f
    41                           endm
    42  0000                     	global	__ramtop
    43                           	global	__accesstop
    44                           # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    45                           PORTA equ 0F80h ;# 
    46  0000                     # 189 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    47                           PORTB equ 0F81h ;# 
    48  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    49                           PORTC equ 0F82h ;# 
    50  0000                     # 535 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    51                           PORTD equ 0F83h ;# 
    52  0000                     # 677 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    53                           PORTE equ 0F84h ;# 
    54  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    55                           LATA equ 0F89h ;# 
    56  0000                     # 992 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    57                           LATB equ 0F8Ah ;# 
    58  0000                     # 1104 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    59                           LATC equ 0F8Bh ;# 
    60  0000                     # 1216 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    61                           LATD equ 0F8Ch ;# 
    62  0000                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    63                           LATE equ 0F8Dh ;# 
    64  0000                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    65                           TRISA equ 0F92h ;# 
    66  0000                     # 1385 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    67                           DDRA equ 0F92h ;# 
    68  0000                     # 1602 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    69                           TRISB equ 0F93h ;# 
    70  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    71                           DDRB equ 0F93h ;# 
    72  0000                     # 1824 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    73                           TRISC equ 0F94h ;# 
    74  0000                     # 1829 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    75                           DDRC equ 0F94h ;# 
    76  0000                     # 2046 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    77                           TRISD equ 0F95h ;# 
    78  0000                     # 2051 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    79                           DDRD equ 0F95h ;# 
    80  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    81                           TRISE equ 0F96h ;# 
    82  0000                     # 2273 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    83                           DDRE equ 0F96h ;# 
    84  0000                     # 2432 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    85                           OSCTUNE equ 0F9Bh ;# 
    86  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    87                           PIE1 equ 0F9Dh ;# 
    88  0000                     # 2574 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    89                           PIR1 equ 0F9Eh ;# 
    90  0000                     # 2651 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    91                           IPR1 equ 0F9Fh ;# 
    92  0000                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    93                           PIE2 equ 0FA0h ;# 
    94  0000                     # 2794 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    95                           PIR2 equ 0FA1h ;# 
    96  0000                     # 2860 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    97                           IPR2 equ 0FA2h ;# 
    98  0000                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
    99                           EECON1 equ 0FA6h ;# 
   100  0000                     # 2992 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   101                           EECON2 equ 0FA7h ;# 
   102  0000                     # 2999 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   103                           EEDATA equ 0FA8h ;# 
   104  0000                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   105                           EEADR equ 0FA9h ;# 
   106  0000                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   107                           EEADRH equ 0FAAh ;# 
   108  0000                     # 3020 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   109                           RCSTA equ 0FABh ;# 
   110  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   111                           RCSTA1 equ 0FABh ;# 
   112  0000                     # 3230 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   113                           TXSTA equ 0FACh ;# 
   114  0000                     # 3235 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   115                           TXSTA1 equ 0FACh ;# 
   116  0000                     # 3486 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   117                           TXREG equ 0FADh ;# 
   118  0000                     # 3491 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   119                           TXREG1 equ 0FADh ;# 
   120  0000                     # 3498 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   121                           RCREG equ 0FAEh ;# 
   122  0000                     # 3503 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   123                           RCREG1 equ 0FAEh ;# 
   124  0000                     # 3510 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   125                           SPBRG equ 0FAFh ;# 
   126  0000                     # 3515 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   127                           SPBRG1 equ 0FAFh ;# 
   128  0000                     # 3522 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   129                           SPBRGH equ 0FB0h ;# 
   130  0000                     # 3529 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   131                           T3CON equ 0FB1h ;# 
   132  0000                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   133                           TMR3 equ 0FB2h ;# 
   134  0000                     # 3648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   135                           TMR3L equ 0FB2h ;# 
   136  0000                     # 3655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   137                           TMR3H equ 0FB3h ;# 
   138  0000                     # 3662 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   139                           CMCON equ 0FB4h ;# 
   140  0000                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   141                           CVRCON equ 0FB5h ;# 
   142  0000                     # 3831 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   143                           ECCP1AS equ 0FB6h ;# 
   144  0000                     # 3913 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   145                           PWM1CON equ 0FB7h ;# 
   146  0000                     # 3983 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   147                           BAUDCON equ 0FB8h ;# 
   148  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   149                           BAUDCTL equ 0FB8h ;# 
   150  0000                     # 4155 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   151                           CCP2CON equ 0FBAh ;# 
   152  0000                     # 4234 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   153                           CCPR2 equ 0FBBh ;# 
   154  0000                     # 4241 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   155                           CCPR2L equ 0FBBh ;# 
   156  0000                     # 4248 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   157                           CCPR2H equ 0FBCh ;# 
   158  0000                     # 4255 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   159                           CCP1CON equ 0FBDh ;# 
   160  0000                     # 4352 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   161                           CCPR1 equ 0FBEh ;# 
   162  0000                     # 4359 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   163                           CCPR1L equ 0FBEh ;# 
   164  0000                     # 4366 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   165                           CCPR1H equ 0FBFh ;# 
   166  0000                     # 4373 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   167                           ADCON2 equ 0FC0h ;# 
   168  0000                     # 4444 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   169                           ADCON1 equ 0FC1h ;# 
   170  0000                     # 4529 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   171                           ADCON0 equ 0FC2h ;# 
   172  0000                     # 4648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   173                           ADRES equ 0FC3h ;# 
   174  0000                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   175                           ADRESL equ 0FC3h ;# 
   176  0000                     # 4662 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   177                           ADRESH equ 0FC4h ;# 
   178  0000                     # 4669 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   179                           SSPCON2 equ 0FC5h ;# 
   180  0000                     # 4731 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   181                           SSPCON1 equ 0FC6h ;# 
   182  0000                     # 4801 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   183                           SSPSTAT equ 0FC7h ;# 
   184  0000                     # 5022 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   185                           SSPADD equ 0FC8h ;# 
   186  0000                     # 5029 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   187                           SSPBUF equ 0FC9h ;# 
   188  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   189                           T2CON equ 0FCAh ;# 
   190  0000                     # 5107 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   191                           PR2 equ 0FCBh ;# 
   192  0000                     # 5112 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   193                           MEMCON equ 0FCBh ;# 
   194  0000                     # 5217 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   195                           TMR2 equ 0FCCh ;# 
   196  0000                     # 5224 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   197                           T1CON equ 0FCDh ;# 
   198  0000                     # 5327 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   199                           TMR1 equ 0FCEh ;# 
   200  0000                     # 5334 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   201                           TMR1L equ 0FCEh ;# 
   202  0000                     # 5341 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   203                           TMR1H equ 0FCFh ;# 
   204  0000                     # 5348 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   205                           RCON equ 0FD0h ;# 
   206  0000                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   207                           WDTCON equ 0FD1h ;# 
   208  0000                     # 5509 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   209                           HLVDCON equ 0FD2h ;# 
   210  0000                     # 5514 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   211                           LVDCON equ 0FD2h ;# 
   212  0000                     # 5779 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   213                           OSCCON equ 0FD3h ;# 
   214  0000                     # 5856 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   215                           T0CON equ 0FD5h ;# 
   216  0000                     # 5933 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   217                           TMR0 equ 0FD6h ;# 
   218  0000                     # 5940 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   219                           TMR0L equ 0FD6h ;# 
   220  0000                     # 5947 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   221                           TMR0H equ 0FD7h ;# 
   222  0000                     # 5954 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   223                           STATUS equ 0FD8h ;# 
   224  0000                     # 6025 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   225                           FSR2 equ 0FD9h ;# 
   226  0000                     # 6032 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   227                           FSR2L equ 0FD9h ;# 
   228  0000                     # 6039 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   229                           FSR2H equ 0FDAh ;# 
   230  0000                     # 6046 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   231                           PLUSW2 equ 0FDBh ;# 
   232  0000                     # 6053 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   233                           PREINC2 equ 0FDCh ;# 
   234  0000                     # 6060 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   235                           POSTDEC2 equ 0FDDh ;# 
   236  0000                     # 6067 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   237                           POSTINC2 equ 0FDEh ;# 
   238  0000                     # 6074 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   239                           INDF2 equ 0FDFh ;# 
   240  0000                     # 6081 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   241                           BSR equ 0FE0h ;# 
   242  0000                     # 6088 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   243                           FSR1 equ 0FE1h ;# 
   244  0000                     # 6095 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   245                           FSR1L equ 0FE1h ;# 
   246  0000                     # 6102 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   247                           FSR1H equ 0FE2h ;# 
   248  0000                     # 6109 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   249                           PLUSW1 equ 0FE3h ;# 
   250  0000                     # 6116 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   251                           PREINC1 equ 0FE4h ;# 
   252  0000                     # 6123 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   253                           POSTDEC1 equ 0FE5h ;# 
   254  0000                     # 6130 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   255                           POSTINC1 equ 0FE6h ;# 
   256  0000                     # 6137 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   257                           INDF1 equ 0FE7h ;# 
   258  0000                     # 6144 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   259                           WREG equ 0FE8h ;# 
   260  0000                     # 6156 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   261                           FSR0 equ 0FE9h ;# 
   262  0000                     # 6163 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   263                           FSR0L equ 0FE9h ;# 
   264  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   265                           FSR0H equ 0FEAh ;# 
   266  0000                     # 6177 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   267                           PLUSW0 equ 0FEBh ;# 
   268  0000                     # 6184 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   269                           PREINC0 equ 0FECh ;# 
   270  0000                     # 6191 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   271                           POSTDEC0 equ 0FEDh ;# 
   272  0000                     # 6198 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   273                           POSTINC0 equ 0FEEh ;# 
   274  0000                     # 6205 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   275                           INDF0 equ 0FEFh ;# 
   276  0000                     # 6212 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   277                           INTCON3 equ 0FF0h ;# 
   278  0000                     # 6304 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   279                           INTCON2 equ 0FF1h ;# 
   280  0000                     # 6374 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   281                           INTCON equ 0FF2h ;# 
   282  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   283                           PROD equ 0FF3h ;# 
   284  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   285                           PRODL equ 0FF3h ;# 
   286  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   287                           PRODH equ 0FF4h ;# 
   288  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   289                           TABLAT equ 0FF5h ;# 
   290  0000                     # 6521 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   291                           TBLPTR equ 0FF6h ;# 
   292  0000                     # 6528 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   293                           TBLPTRL equ 0FF6h ;# 
   294  0000                     # 6535 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   295                           TBLPTRH equ 0FF7h ;# 
   296  0000                     # 6542 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   297                           TBLPTRU equ 0FF8h ;# 
   298  0000                     # 6551 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   299                           PCLAT equ 0FF9h ;# 
   300  0000                     # 6558 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   301                           PC equ 0FF9h ;# 
   302  0000                     # 6565 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   303                           PCL equ 0FF9h ;# 
   304  0000                     # 6572 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   305                           PCLATH equ 0FFAh ;# 
   306  0000                     # 6579 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   307                           PCLATU equ 0FFBh ;# 
   308  0000                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   309                           STKPTR equ 0FFCh ;# 
   310  0000                     # 6692 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   311                           TOS equ 0FFDh ;# 
   312  0000                     # 6699 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   313                           TOSL equ 0FFDh ;# 
   314  0000                     # 6706 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   315                           TOSH equ 0FFEh ;# 
   316  0000                     # 6713 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   317                           TOSU equ 0FFFh ;# 
   318  0000                     # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   319                           PORTA equ 0F80h ;# 
   320  0000                     # 189 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   321                           PORTB equ 0F81h ;# 
   322  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   323                           PORTC equ 0F82h ;# 
   324  0000                     # 535 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   325                           PORTD equ 0F83h ;# 
   326  0000                     # 677 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   327                           PORTE equ 0F84h ;# 
   328  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   329                           LATA equ 0F89h ;# 
   330  0000                     # 992 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   331                           LATB equ 0F8Ah ;# 
   332  0000                     # 1104 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   333                           LATC equ 0F8Bh ;# 
   334  0000                     # 1216 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   335                           LATD equ 0F8Ch ;# 
   336  0000                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   337                           LATE equ 0F8Dh ;# 
   338  0000                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   339                           TRISA equ 0F92h ;# 
   340  0000                     # 1385 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   341                           DDRA equ 0F92h ;# 
   342  0000                     # 1602 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   343                           TRISB equ 0F93h ;# 
   344  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   345                           DDRB equ 0F93h ;# 
   346  0000                     # 1824 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   347                           TRISC equ 0F94h ;# 
   348  0000                     # 1829 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   349                           DDRC equ 0F94h ;# 
   350  0000                     # 2046 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   351                           TRISD equ 0F95h ;# 
   352  0000                     # 2051 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   353                           DDRD equ 0F95h ;# 
   354  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   355                           TRISE equ 0F96h ;# 
   356  0000                     # 2273 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   357                           DDRE equ 0F96h ;# 
   358  0000                     # 2432 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   359                           OSCTUNE equ 0F9Bh ;# 
   360  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   361                           PIE1 equ 0F9Dh ;# 
   362  0000                     # 2574 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   363                           PIR1 equ 0F9Eh ;# 
   364  0000                     # 2651 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   365                           IPR1 equ 0F9Fh ;# 
   366  0000                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   367                           PIE2 equ 0FA0h ;# 
   368  0000                     # 2794 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   369                           PIR2 equ 0FA1h ;# 
   370  0000                     # 2860 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   371                           IPR2 equ 0FA2h ;# 
   372  0000                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   373                           EECON1 equ 0FA6h ;# 
   374  0000                     # 2992 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   375                           EECON2 equ 0FA7h ;# 
   376  0000                     # 2999 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   377                           EEDATA equ 0FA8h ;# 
   378  0000                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   379                           EEADR equ 0FA9h ;# 
   380  0000                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   381                           EEADRH equ 0FAAh ;# 
   382  0000                     # 3020 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   383                           RCSTA equ 0FABh ;# 
   384  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   385                           RCSTA1 equ 0FABh ;# 
   386  0000                     # 3230 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   387                           TXSTA equ 0FACh ;# 
   388  0000                     # 3235 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   389                           TXSTA1 equ 0FACh ;# 
   390  0000                     # 3486 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   391                           TXREG equ 0FADh ;# 
   392  0000                     # 3491 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   393                           TXREG1 equ 0FADh ;# 
   394  0000                     # 3498 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   395                           RCREG equ 0FAEh ;# 
   396  0000                     # 3503 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   397                           RCREG1 equ 0FAEh ;# 
   398  0000                     # 3510 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   399                           SPBRG equ 0FAFh ;# 
   400  0000                     # 3515 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   401                           SPBRG1 equ 0FAFh ;# 
   402  0000                     # 3522 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   403                           SPBRGH equ 0FB0h ;# 
   404  0000                     # 3529 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   405                           T3CON equ 0FB1h ;# 
   406  0000                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   407                           TMR3 equ 0FB2h ;# 
   408  0000                     # 3648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   409                           TMR3L equ 0FB2h ;# 
   410  0000                     # 3655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   411                           TMR3H equ 0FB3h ;# 
   412  0000                     # 3662 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   413                           CMCON equ 0FB4h ;# 
   414  0000                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   415                           CVRCON equ 0FB5h ;# 
   416  0000                     # 3831 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   417                           ECCP1AS equ 0FB6h ;# 
   418  0000                     # 3913 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   419                           PWM1CON equ 0FB7h ;# 
   420  0000                     # 3983 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   421                           BAUDCON equ 0FB8h ;# 
   422  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   423                           BAUDCTL equ 0FB8h ;# 
   424  0000                     # 4155 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   425                           CCP2CON equ 0FBAh ;# 
   426  0000                     # 4234 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   427                           CCPR2 equ 0FBBh ;# 
   428  0000                     # 4241 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   429                           CCPR2L equ 0FBBh ;# 
   430  0000                     # 4248 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   431                           CCPR2H equ 0FBCh ;# 
   432  0000                     # 4255 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   433                           CCP1CON equ 0FBDh ;# 
   434  0000                     # 4352 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   435                           CCPR1 equ 0FBEh ;# 
   436  0000                     # 4359 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   437                           CCPR1L equ 0FBEh ;# 
   438  0000                     # 4366 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   439                           CCPR1H equ 0FBFh ;# 
   440  0000                     # 4373 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   441                           ADCON2 equ 0FC0h ;# 
   442  0000                     # 4444 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   443                           ADCON1 equ 0FC1h ;# 
   444  0000                     # 4529 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   445                           ADCON0 equ 0FC2h ;# 
   446  0000                     # 4648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   447                           ADRES equ 0FC3h ;# 
   448  0000                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   449                           ADRESL equ 0FC3h ;# 
   450  0000                     # 4662 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   451                           ADRESH equ 0FC4h ;# 
   452  0000                     # 4669 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   453                           SSPCON2 equ 0FC5h ;# 
   454  0000                     # 4731 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   455                           SSPCON1 equ 0FC6h ;# 
   456  0000                     # 4801 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   457                           SSPSTAT equ 0FC7h ;# 
   458  0000                     # 5022 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   459                           SSPADD equ 0FC8h ;# 
   460  0000                     # 5029 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   461                           SSPBUF equ 0FC9h ;# 
   462  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   463                           T2CON equ 0FCAh ;# 
   464  0000                     # 5107 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   465                           PR2 equ 0FCBh ;# 
   466  0000                     # 5112 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   467                           MEMCON equ 0FCBh ;# 
   468  0000                     # 5217 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   469                           TMR2 equ 0FCCh ;# 
   470  0000                     # 5224 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   471                           T1CON equ 0FCDh ;# 
   472  0000                     # 5327 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   473                           TMR1 equ 0FCEh ;# 
   474  0000                     # 5334 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   475                           TMR1L equ 0FCEh ;# 
   476  0000                     # 5341 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   477                           TMR1H equ 0FCFh ;# 
   478  0000                     # 5348 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   479                           RCON equ 0FD0h ;# 
   480  0000                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   481                           WDTCON equ 0FD1h ;# 
   482  0000                     # 5509 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   483                           HLVDCON equ 0FD2h ;# 
   484  0000                     # 5514 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   485                           LVDCON equ 0FD2h ;# 
   486  0000                     # 5779 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   487                           OSCCON equ 0FD3h ;# 
   488  0000                     # 5856 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   489                           T0CON equ 0FD5h ;# 
   490  0000                     # 5933 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   491                           TMR0 equ 0FD6h ;# 
   492  0000                     # 5940 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   493                           TMR0L equ 0FD6h ;# 
   494  0000                     # 5947 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   495                           TMR0H equ 0FD7h ;# 
   496  0000                     # 5954 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   497                           STATUS equ 0FD8h ;# 
   498  0000                     # 6025 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   499                           FSR2 equ 0FD9h ;# 
   500  0000                     # 6032 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   501                           FSR2L equ 0FD9h ;# 
   502  0000                     # 6039 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   503                           FSR2H equ 0FDAh ;# 
   504  0000                     # 6046 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   505                           PLUSW2 equ 0FDBh ;# 
   506  0000                     # 6053 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   507                           PREINC2 equ 0FDCh ;# 
   508  0000                     # 6060 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   509                           POSTDEC2 equ 0FDDh ;# 
   510  0000                     # 6067 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   511                           POSTINC2 equ 0FDEh ;# 
   512  0000                     # 6074 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   513                           INDF2 equ 0FDFh ;# 
   514  0000                     # 6081 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   515                           BSR equ 0FE0h ;# 
   516  0000                     # 6088 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   517                           FSR1 equ 0FE1h ;# 
   518  0000                     # 6095 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   519                           FSR1L equ 0FE1h ;# 
   520  0000                     # 6102 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   521                           FSR1H equ 0FE2h ;# 
   522  0000                     # 6109 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   523                           PLUSW1 equ 0FE3h ;# 
   524  0000                     # 6116 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   525                           PREINC1 equ 0FE4h ;# 
   526  0000                     # 6123 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   527                           POSTDEC1 equ 0FE5h ;# 
   528  0000                     # 6130 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   529                           POSTINC1 equ 0FE6h ;# 
   530  0000                     # 6137 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   531                           INDF1 equ 0FE7h ;# 
   532  0000                     # 6144 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   533                           WREG equ 0FE8h ;# 
   534  0000                     # 6156 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   535                           FSR0 equ 0FE9h ;# 
   536  0000                     # 6163 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   537                           FSR0L equ 0FE9h ;# 
   538  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   539                           FSR0H equ 0FEAh ;# 
   540  0000                     # 6177 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   541                           PLUSW0 equ 0FEBh ;# 
   542  0000                     # 6184 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   543                           PREINC0 equ 0FECh ;# 
   544  0000                     # 6191 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   545                           POSTDEC0 equ 0FEDh ;# 
   546  0000                     # 6198 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   547                           POSTINC0 equ 0FEEh ;# 
   548  0000                     # 6205 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   549                           INDF0 equ 0FEFh ;# 
   550  0000                     # 6212 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   551                           INTCON3 equ 0FF0h ;# 
   552  0000                     # 6304 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   553                           INTCON2 equ 0FF1h ;# 
   554  0000                     # 6374 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   555                           INTCON equ 0FF2h ;# 
   556  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   557                           PROD equ 0FF3h ;# 
   558  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   559                           PRODL equ 0FF3h ;# 
   560  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   561                           PRODH equ 0FF4h ;# 
   562  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   563                           TABLAT equ 0FF5h ;# 
   564  0000                     # 6521 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   565                           TBLPTR equ 0FF6h ;# 
   566  0000                     # 6528 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   567                           TBLPTRL equ 0FF6h ;# 
   568  0000                     # 6535 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   569                           TBLPTRH equ 0FF7h ;# 
   570  0000                     # 6542 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   571                           TBLPTRU equ 0FF8h ;# 
   572  0000                     # 6551 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   573                           PCLAT equ 0FF9h ;# 
   574  0000                     # 6558 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   575                           PC equ 0FF9h ;# 
   576  0000                     # 6565 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   577                           PCL equ 0FF9h ;# 
   578  0000                     # 6572 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   579                           PCLATH equ 0FFAh ;# 
   580  0000                     # 6579 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   581                           PCLATU equ 0FFBh ;# 
   582  0000                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   583                           STKPTR equ 0FFCh ;# 
   584  0000                     # 6692 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   585                           TOS equ 0FFDh ;# 
   586  0000                     # 6699 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   587                           TOSL equ 0FFDh ;# 
   588  0000                     # 6706 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   589                           TOSH equ 0FFEh ;# 
   590  0000                     # 6713 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   591                           TOSU equ 0FFFh ;# 
   592  0000                     # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   593                           PORTA equ 0F80h ;# 
   594  0000                     # 189 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   595                           PORTB equ 0F81h ;# 
   596  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   597                           PORTC equ 0F82h ;# 
   598  0000                     # 535 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   599                           PORTD equ 0F83h ;# 
   600  0000                     # 677 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   601                           PORTE equ 0F84h ;# 
   602  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   603                           LATA equ 0F89h ;# 
   604  0000                     # 992 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   605                           LATB equ 0F8Ah ;# 
   606  0000                     # 1104 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   607                           LATC equ 0F8Bh ;# 
   608  0000                     # 1216 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   609                           LATD equ 0F8Ch ;# 
   610  0000                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   611                           LATE equ 0F8Dh ;# 
   612  0000                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   613                           TRISA equ 0F92h ;# 
   614  0000                     # 1385 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   615                           DDRA equ 0F92h ;# 
   616  0000                     # 1602 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   617                           TRISB equ 0F93h ;# 
   618  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   619                           DDRB equ 0F93h ;# 
   620  0000                     # 1824 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   621                           TRISC equ 0F94h ;# 
   622  0000                     # 1829 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   623                           DDRC equ 0F94h ;# 
   624  0000                     # 2046 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   625                           TRISD equ 0F95h ;# 
   626  0000                     # 2051 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   627                           DDRD equ 0F95h ;# 
   628  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   629                           TRISE equ 0F96h ;# 
   630  0000                     # 2273 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   631                           DDRE equ 0F96h ;# 
   632  0000                     # 2432 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   633                           OSCTUNE equ 0F9Bh ;# 
   634  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   635                           PIE1 equ 0F9Dh ;# 
   636  0000                     # 2574 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   637                           PIR1 equ 0F9Eh ;# 
   638  0000                     # 2651 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   639                           IPR1 equ 0F9Fh ;# 
   640  0000                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   641                           PIE2 equ 0FA0h ;# 
   642  0000                     # 2794 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   643                           PIR2 equ 0FA1h ;# 
   644  0000                     # 2860 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   645                           IPR2 equ 0FA2h ;# 
   646  0000                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   647                           EECON1 equ 0FA6h ;# 
   648  0000                     # 2992 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   649                           EECON2 equ 0FA7h ;# 
   650  0000                     # 2999 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   651                           EEDATA equ 0FA8h ;# 
   652  0000                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   653                           EEADR equ 0FA9h ;# 
   654  0000                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   655                           EEADRH equ 0FAAh ;# 
   656  0000                     # 3020 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   657                           RCSTA equ 0FABh ;# 
   658  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   659                           RCSTA1 equ 0FABh ;# 
   660  0000                     # 3230 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   661                           TXSTA equ 0FACh ;# 
   662  0000                     # 3235 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   663                           TXSTA1 equ 0FACh ;# 
   664  0000                     # 3486 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   665                           TXREG equ 0FADh ;# 
   666  0000                     # 3491 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   667                           TXREG1 equ 0FADh ;# 
   668  0000                     # 3498 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   669                           RCREG equ 0FAEh ;# 
   670  0000                     # 3503 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   671                           RCREG1 equ 0FAEh ;# 
   672  0000                     # 3510 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   673                           SPBRG equ 0FAFh ;# 
   674  0000                     # 3515 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   675                           SPBRG1 equ 0FAFh ;# 
   676  0000                     # 3522 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   677                           SPBRGH equ 0FB0h ;# 
   678  0000                     # 3529 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   679                           T3CON equ 0FB1h ;# 
   680  0000                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   681                           TMR3 equ 0FB2h ;# 
   682  0000                     # 3648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   683                           TMR3L equ 0FB2h ;# 
   684  0000                     # 3655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   685                           TMR3H equ 0FB3h ;# 
   686  0000                     # 3662 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   687                           CMCON equ 0FB4h ;# 
   688  0000                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   689                           CVRCON equ 0FB5h ;# 
   690  0000                     # 3831 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   691                           ECCP1AS equ 0FB6h ;# 
   692  0000                     # 3913 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   693                           PWM1CON equ 0FB7h ;# 
   694  0000                     # 3983 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   695                           BAUDCON equ 0FB8h ;# 
   696  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   697                           BAUDCTL equ 0FB8h ;# 
   698  0000                     # 4155 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   699                           CCP2CON equ 0FBAh ;# 
   700  0000                     # 4234 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   701                           CCPR2 equ 0FBBh ;# 
   702  0000                     # 4241 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   703                           CCPR2L equ 0FBBh ;# 
   704  0000                     # 4248 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   705                           CCPR2H equ 0FBCh ;# 
   706  0000                     # 4255 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   707                           CCP1CON equ 0FBDh ;# 
   708  0000                     # 4352 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   709                           CCPR1 equ 0FBEh ;# 
   710  0000                     # 4359 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   711                           CCPR1L equ 0FBEh ;# 
   712  0000                     # 4366 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   713                           CCPR1H equ 0FBFh ;# 
   714  0000                     # 4373 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   715                           ADCON2 equ 0FC0h ;# 
   716  0000                     # 4444 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   717                           ADCON1 equ 0FC1h ;# 
   718  0000                     # 4529 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   719                           ADCON0 equ 0FC2h ;# 
   720  0000                     # 4648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   721                           ADRES equ 0FC3h ;# 
   722  0000                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   723                           ADRESL equ 0FC3h ;# 
   724  0000                     # 4662 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   725                           ADRESH equ 0FC4h ;# 
   726  0000                     # 4669 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   727                           SSPCON2 equ 0FC5h ;# 
   728  0000                     # 4731 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   729                           SSPCON1 equ 0FC6h ;# 
   730  0000                     # 4801 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   731                           SSPSTAT equ 0FC7h ;# 
   732  0000                     # 5022 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   733                           SSPADD equ 0FC8h ;# 
   734  0000                     # 5029 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   735                           SSPBUF equ 0FC9h ;# 
   736  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   737                           T2CON equ 0FCAh ;# 
   738  0000                     # 5107 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   739                           PR2 equ 0FCBh ;# 
   740  0000                     # 5112 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   741                           MEMCON equ 0FCBh ;# 
   742  0000                     # 5217 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   743                           TMR2 equ 0FCCh ;# 
   744  0000                     # 5224 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   745                           T1CON equ 0FCDh ;# 
   746  0000                     # 5327 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   747                           TMR1 equ 0FCEh ;# 
   748  0000                     # 5334 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   749                           TMR1L equ 0FCEh ;# 
   750  0000                     # 5341 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   751                           TMR1H equ 0FCFh ;# 
   752  0000                     # 5348 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   753                           RCON equ 0FD0h ;# 
   754  0000                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   755                           WDTCON equ 0FD1h ;# 
   756  0000                     # 5509 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   757                           HLVDCON equ 0FD2h ;# 
   758  0000                     # 5514 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   759                           LVDCON equ 0FD2h ;# 
   760  0000                     # 5779 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   761                           OSCCON equ 0FD3h ;# 
   762  0000                     # 5856 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   763                           T0CON equ 0FD5h ;# 
   764  0000                     # 5933 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   765                           TMR0 equ 0FD6h ;# 
   766  0000                     # 5940 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   767                           TMR0L equ 0FD6h ;# 
   768  0000                     # 5947 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   769                           TMR0H equ 0FD7h ;# 
   770  0000                     # 5954 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   771                           STATUS equ 0FD8h ;# 
   772  0000                     # 6025 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   773                           FSR2 equ 0FD9h ;# 
   774  0000                     # 6032 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   775                           FSR2L equ 0FD9h ;# 
   776  0000                     # 6039 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   777                           FSR2H equ 0FDAh ;# 
   778  0000                     # 6046 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   779                           PLUSW2 equ 0FDBh ;# 
   780  0000                     # 6053 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   781                           PREINC2 equ 0FDCh ;# 
   782  0000                     # 6060 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   783                           POSTDEC2 equ 0FDDh ;# 
   784  0000                     # 6067 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   785                           POSTINC2 equ 0FDEh ;# 
   786  0000                     # 6074 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   787                           INDF2 equ 0FDFh ;# 
   788  0000                     # 6081 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   789                           BSR equ 0FE0h ;# 
   790  0000                     # 6088 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   791                           FSR1 equ 0FE1h ;# 
   792  0000                     # 6095 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   793                           FSR1L equ 0FE1h ;# 
   794  0000                     # 6102 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   795                           FSR1H equ 0FE2h ;# 
   796  0000                     # 6109 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   797                           PLUSW1 equ 0FE3h ;# 
   798  0000                     # 6116 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   799                           PREINC1 equ 0FE4h ;# 
   800  0000                     # 6123 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   801                           POSTDEC1 equ 0FE5h ;# 
   802  0000                     # 6130 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   803                           POSTINC1 equ 0FE6h ;# 
   804  0000                     # 6137 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   805                           INDF1 equ 0FE7h ;# 
   806  0000                     # 6144 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   807                           WREG equ 0FE8h ;# 
   808  0000                     # 6156 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   809                           FSR0 equ 0FE9h ;# 
   810  0000                     # 6163 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   811                           FSR0L equ 0FE9h ;# 
   812  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   813                           FSR0H equ 0FEAh ;# 
   814  0000                     # 6177 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   815                           PLUSW0 equ 0FEBh ;# 
   816  0000                     # 6184 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   817                           PREINC0 equ 0FECh ;# 
   818  0000                     # 6191 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   819                           POSTDEC0 equ 0FEDh ;# 
   820  0000                     # 6198 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   821                           POSTINC0 equ 0FEEh ;# 
   822  0000                     # 6205 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   823                           INDF0 equ 0FEFh ;# 
   824  0000                     # 6212 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   825                           INTCON3 equ 0FF0h ;# 
   826  0000                     # 6304 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   827                           INTCON2 equ 0FF1h ;# 
   828  0000                     # 6374 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   829                           INTCON equ 0FF2h ;# 
   830  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   831                           PROD equ 0FF3h ;# 
   832  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   833                           PRODL equ 0FF3h ;# 
   834  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   835                           PRODH equ 0FF4h ;# 
   836  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   837                           TABLAT equ 0FF5h ;# 
   838  0000                     # 6521 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   839                           TBLPTR equ 0FF6h ;# 
   840  0000                     # 6528 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   841                           TBLPTRL equ 0FF6h ;# 
   842  0000                     # 6535 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   843                           TBLPTRH equ 0FF7h ;# 
   844  0000                     # 6542 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   845                           TBLPTRU equ 0FF8h ;# 
   846  0000                     # 6551 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   847                           PCLAT equ 0FF9h ;# 
   848  0000                     # 6558 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   849                           PC equ 0FF9h ;# 
   850  0000                     # 6565 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   851                           PCL equ 0FF9h ;# 
   852  0000                     # 6572 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   853                           PCLATH equ 0FFAh ;# 
   854  0000                     # 6579 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   855                           PCLATU equ 0FFBh ;# 
   856  0000                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   857                           STKPTR equ 0FFCh ;# 
   858  0000                     # 6692 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   859                           TOS equ 0FFDh ;# 
   860  0000                     # 6699 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   861                           TOSL equ 0FFDh ;# 
   862  0000                     # 6706 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   863                           TOSH equ 0FFEh ;# 
   864  0000                     # 6713 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   865                           TOSU equ 0FFFh ;# 
   866  0000                     # 52 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   867                           PORTA equ 0F80h ;# 
   868  0000                     # 189 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   869                           PORTB equ 0F81h ;# 
   870  0000                     # 360 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   871                           PORTC equ 0F82h ;# 
   872  0000                     # 535 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   873                           PORTD equ 0F83h ;# 
   874  0000                     # 677 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   875                           PORTE equ 0F84h ;# 
   876  0000                     # 880 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   877                           LATA equ 0F89h ;# 
   878  0000                     # 992 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   879                           LATB equ 0F8Ah ;# 
   880  0000                     # 1104 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   881                           LATC equ 0F8Bh ;# 
   882  0000                     # 1216 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   883                           LATD equ 0F8Ch ;# 
   884  0000                     # 1328 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   885                           LATE equ 0F8Dh ;# 
   886  0000                     # 1380 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   887                           TRISA equ 0F92h ;# 
   888  0000                     # 1385 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   889                           DDRA equ 0F92h ;# 
   890  0000                     # 1602 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   891                           TRISB equ 0F93h ;# 
   892  0000                     # 1607 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   893                           DDRB equ 0F93h ;# 
   894  0000                     # 1824 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   895                           TRISC equ 0F94h ;# 
   896  0000                     # 1829 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   897                           DDRC equ 0F94h ;# 
   898  0000                     # 2046 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   899                           TRISD equ 0F95h ;# 
   900  0000                     # 2051 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   901                           DDRD equ 0F95h ;# 
   902  0000                     # 2268 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   903                           TRISE equ 0F96h ;# 
   904  0000                     # 2273 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   905                           DDRE equ 0F96h ;# 
   906  0000                     # 2432 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   907                           OSCTUNE equ 0F9Bh ;# 
   908  0000                     # 2497 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   909                           PIE1 equ 0F9Dh ;# 
   910  0000                     # 2574 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   911                           PIR1 equ 0F9Eh ;# 
   912  0000                     # 2651 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   913                           IPR1 equ 0F9Fh ;# 
   914  0000                     # 2728 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   915                           PIE2 equ 0FA0h ;# 
   916  0000                     # 2794 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   917                           PIR2 equ 0FA1h ;# 
   918  0000                     # 2860 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   919                           IPR2 equ 0FA2h ;# 
   920  0000                     # 2926 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   921                           EECON1 equ 0FA6h ;# 
   922  0000                     # 2992 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   923                           EECON2 equ 0FA7h ;# 
   924  0000                     # 2999 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   925                           EEDATA equ 0FA8h ;# 
   926  0000                     # 3006 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   927                           EEADR equ 0FA9h ;# 
   928  0000                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   929                           EEADRH equ 0FAAh ;# 
   930  0000                     # 3020 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   931                           RCSTA equ 0FABh ;# 
   932  0000                     # 3025 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   933                           RCSTA1 equ 0FABh ;# 
   934  0000                     # 3230 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   935                           TXSTA equ 0FACh ;# 
   936  0000                     # 3235 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   937                           TXSTA1 equ 0FACh ;# 
   938  0000                     # 3486 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   939                           TXREG equ 0FADh ;# 
   940  0000                     # 3491 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   941                           TXREG1 equ 0FADh ;# 
   942  0000                     # 3498 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   943                           RCREG equ 0FAEh ;# 
   944  0000                     # 3503 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   945                           RCREG1 equ 0FAEh ;# 
   946  0000                     # 3510 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   947                           SPBRG equ 0FAFh ;# 
   948  0000                     # 3515 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   949                           SPBRG1 equ 0FAFh ;# 
   950  0000                     # 3522 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   951                           SPBRGH equ 0FB0h ;# 
   952  0000                     # 3529 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   953                           T3CON equ 0FB1h ;# 
   954  0000                     # 3641 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   955                           TMR3 equ 0FB2h ;# 
   956  0000                     # 3648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   957                           TMR3L equ 0FB2h ;# 
   958  0000                     # 3655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   959                           TMR3H equ 0FB3h ;# 
   960  0000                     # 3662 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   961                           CMCON equ 0FB4h ;# 
   962  0000                     # 3752 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   963                           CVRCON equ 0FB5h ;# 
   964  0000                     # 3831 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   965                           ECCP1AS equ 0FB6h ;# 
   966  0000                     # 3913 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   967                           PWM1CON equ 0FB7h ;# 
   968  0000                     # 3983 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   969                           BAUDCON equ 0FB8h ;# 
   970  0000                     # 3988 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   971                           BAUDCTL equ 0FB8h ;# 
   972  0000                     # 4155 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   973                           CCP2CON equ 0FBAh ;# 
   974  0000                     # 4234 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   975                           CCPR2 equ 0FBBh ;# 
   976  0000                     # 4241 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   977                           CCPR2L equ 0FBBh ;# 
   978  0000                     # 4248 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   979                           CCPR2H equ 0FBCh ;# 
   980  0000                     # 4255 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   981                           CCP1CON equ 0FBDh ;# 
   982  0000                     # 4352 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   983                           CCPR1 equ 0FBEh ;# 
   984  0000                     # 4359 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   985                           CCPR1L equ 0FBEh ;# 
   986  0000                     # 4366 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   987                           CCPR1H equ 0FBFh ;# 
   988  0000                     # 4373 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   989                           ADCON2 equ 0FC0h ;# 
   990  0000                     # 4444 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   991                           ADCON1 equ 0FC1h ;# 
   992  0000                     # 4529 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   993                           ADCON0 equ 0FC2h ;# 
   994  0000                     # 4648 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   995                           ADRES equ 0FC3h ;# 
   996  0000                     # 4655 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   997                           ADRESL equ 0FC3h ;# 
   998  0000                     # 4662 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
   999                           ADRESH equ 0FC4h ;# 
  1000  0000                     # 4669 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1001                           SSPCON2 equ 0FC5h ;# 
  1002  0000                     # 4731 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1003                           SSPCON1 equ 0FC6h ;# 
  1004  0000                     # 4801 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1005                           SSPSTAT equ 0FC7h ;# 
  1006  0000                     # 5022 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1007                           SSPADD equ 0FC8h ;# 
  1008  0000                     # 5029 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1009                           SSPBUF equ 0FC9h ;# 
  1010  0000                     # 5036 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1011                           T2CON equ 0FCAh ;# 
  1012  0000                     # 5107 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1013                           PR2 equ 0FCBh ;# 
  1014  0000                     # 5112 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1015                           MEMCON equ 0FCBh ;# 
  1016  0000                     # 5217 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1017                           TMR2 equ 0FCCh ;# 
  1018  0000                     # 5224 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1019                           T1CON equ 0FCDh ;# 
  1020  0000                     # 5327 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1021                           TMR1 equ 0FCEh ;# 
  1022  0000                     # 5334 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1023                           TMR1L equ 0FCEh ;# 
  1024  0000                     # 5341 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1025                           TMR1H equ 0FCFh ;# 
  1026  0000                     # 5348 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1027                           RCON equ 0FD0h ;# 
  1028  0000                     # 5481 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1029                           WDTCON equ 0FD1h ;# 
  1030  0000                     # 5509 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1031                           HLVDCON equ 0FD2h ;# 
  1032  0000                     # 5514 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1033                           LVDCON equ 0FD2h ;# 
  1034  0000                     # 5779 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1035                           OSCCON equ 0FD3h ;# 
  1036  0000                     # 5856 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1037                           T0CON equ 0FD5h ;# 
  1038  0000                     # 5933 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1039                           TMR0 equ 0FD6h ;# 
  1040  0000                     # 5940 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1041                           TMR0L equ 0FD6h ;# 
  1042  0000                     # 5947 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1043                           TMR0H equ 0FD7h ;# 
  1044  0000                     # 5954 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1045                           STATUS equ 0FD8h ;# 
  1046  0000                     # 6025 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1047                           FSR2 equ 0FD9h ;# 
  1048  0000                     # 6032 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1049                           FSR2L equ 0FD9h ;# 
  1050  0000                     # 6039 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1051                           FSR2H equ 0FDAh ;# 
  1052  0000                     # 6046 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1053                           PLUSW2 equ 0FDBh ;# 
  1054  0000                     # 6053 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1055                           PREINC2 equ 0FDCh ;# 
  1056  0000                     # 6060 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1057                           POSTDEC2 equ 0FDDh ;# 
  1058  0000                     # 6067 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1059                           POSTINC2 equ 0FDEh ;# 
  1060  0000                     # 6074 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1061                           INDF2 equ 0FDFh ;# 
  1062  0000                     # 6081 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1063                           BSR equ 0FE0h ;# 
  1064  0000                     # 6088 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1065                           FSR1 equ 0FE1h ;# 
  1066  0000                     # 6095 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1067                           FSR1L equ 0FE1h ;# 
  1068  0000                     # 6102 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1069                           FSR1H equ 0FE2h ;# 
  1070  0000                     # 6109 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1071                           PLUSW1 equ 0FE3h ;# 
  1072  0000                     # 6116 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1073                           PREINC1 equ 0FE4h ;# 
  1074  0000                     # 6123 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1075                           POSTDEC1 equ 0FE5h ;# 
  1076  0000                     # 6130 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1077                           POSTINC1 equ 0FE6h ;# 
  1078  0000                     # 6137 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1079                           INDF1 equ 0FE7h ;# 
  1080  0000                     # 6144 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1081                           WREG equ 0FE8h ;# 
  1082  0000                     # 6156 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1083                           FSR0 equ 0FE9h ;# 
  1084  0000                     # 6163 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1085                           FSR0L equ 0FE9h ;# 
  1086  0000                     # 6170 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1087                           FSR0H equ 0FEAh ;# 
  1088  0000                     # 6177 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1089                           PLUSW0 equ 0FEBh ;# 
  1090  0000                     # 6184 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1091                           PREINC0 equ 0FECh ;# 
  1092  0000                     # 6191 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1093                           POSTDEC0 equ 0FEDh ;# 
  1094  0000                     # 6198 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1095                           POSTINC0 equ 0FEEh ;# 
  1096  0000                     # 6205 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1097                           INDF0 equ 0FEFh ;# 
  1098  0000                     # 6212 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1099                           INTCON3 equ 0FF0h ;# 
  1100  0000                     # 6304 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1101                           INTCON2 equ 0FF1h ;# 
  1102  0000                     # 6374 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1103                           INTCON equ 0FF2h ;# 
  1104  0000                     # 6491 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1105                           PROD equ 0FF3h ;# 
  1106  0000                     # 6498 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1107                           PRODL equ 0FF3h ;# 
  1108  0000                     # 6505 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1109                           PRODH equ 0FF4h ;# 
  1110  0000                     # 6512 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1111                           TABLAT equ 0FF5h ;# 
  1112  0000                     # 6521 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1113                           TBLPTR equ 0FF6h ;# 
  1114  0000                     # 6528 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1115                           TBLPTRL equ 0FF6h ;# 
  1116  0000                     # 6535 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1117                           TBLPTRH equ 0FF7h ;# 
  1118  0000                     # 6542 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1119                           TBLPTRU equ 0FF8h ;# 
  1120  0000                     # 6551 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1121                           PCLAT equ 0FF9h ;# 
  1122  0000                     # 6558 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1123                           PC equ 0FF9h ;# 
  1124  0000                     # 6565 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1125                           PCL equ 0FF9h ;# 
  1126  0000                     # 6572 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1127                           PCLATH equ 0FFAh ;# 
  1128  0000                     # 6579 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1129                           PCLATU equ 0FFBh ;# 
  1130  0000                     # 6586 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1131                           STKPTR equ 0FFCh ;# 
  1132  0000                     # 6692 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1133                           TOS equ 0FFDh ;# 
  1134  0000                     # 6699 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1135                           TOSL equ 0FFDh ;# 
  1136  0000                     # 6706 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1137                           TOSH equ 0FFEh ;# 
  1138  0000                     # 6713 "C:\Program Files (x86)\Microchip\xc8\v1.45\include\pic18f4620.h"
  1139                           TOSU equ 0FFFh ;# 
  1140  0000                     	FNCALL	_main,___awdiv
  1141                           	FNCALL	_main,___fladd
  1142                           	FNCALL	_main,___fldiv
  1143                           	FNCALL	_main,___flge
  1144                           	FNCALL	_main,___flmul
  1145                           	FNCALL	_main,___flneg
  1146                           	FNCALL	_main,___fltol
  1147                           	FNCALL	_main,___wmul
  1148                           	FNCALL	_main,___xxtofl
  1149                           	FNCALL	_main,_initTimers01
  1150                           	FNCALL	_main,_init_adc_no_lib
  1151                           	FNCALL	_main,_init_pwm1
  1152                           	FNCALL	_main,_initialization
  1153                           	FNCALL	_main,_lcd_gotoxy
  1154                           	FNCALL	_main,_lcd_init
  1155                           	FNCALL	_main,_lcd_putc
  1156                           	FNCALL	_main,_lcd_puts
  1157                           	FNCALL	_main,_pwd_Timer3
  1158                           	FNCALL	_main,_read_adc_voltage
  1159                           	FNCALL	_main,_reloadTimer3
  1160                           	FNCALL	_main,_set_pwm1_percent
  1161                           	FNCALL	_main,_set_pwm1_raw
  1162                           	FNCALL	_main,_setupPorts
  1163                           	FNCALL	_main,_sprintf
  1164                           	FNCALL	_sprintf,___awdiv
  1165                           	FNCALL	_sprintf,___fladd
  1166                           	FNCALL	_sprintf,___flge
  1167                           	FNCALL	_sprintf,___flmul
  1168                           	FNCALL	_sprintf,___flneg
  1169                           	FNCALL	_sprintf,___flsub
  1170                           	FNCALL	_sprintf,___fltol
  1171                           	FNCALL	_sprintf,___lldiv
  1172                           	FNCALL	_sprintf,___llmod
  1173                           	FNCALL	_sprintf,___wmul
  1174                           	FNCALL	_sprintf,___xxtofl
  1175                           	FNCALL	_sprintf,__div_to_l_
  1176                           	FNCALL	_sprintf,__tdiv_to_l_
  1177                           	FNCALL	_sprintf,_fround
  1178                           	FNCALL	_sprintf,_isdigit
  1179                           	FNCALL	_sprintf,_scale
  1180                           	FNCALL	_scale,___awdiv
  1181                           	FNCALL	_scale,___awmod
  1182                           	FNCALL	_scale,___flmul
  1183                           	FNCALL	_fround,___awdiv
  1184                           	FNCALL	_fround,___awmod
  1185                           	FNCALL	_fround,___flmul
  1186                           	FNCALL	___flsub,___fladd
  1187                           	FNCALL	_set_pwm1_percent,___fladd
  1188                           	FNCALL	_set_pwm1_percent,___fldiv
  1189                           	FNCALL	_set_pwm1_percent,___flmul
  1190                           	FNCALL	_set_pwm1_percent,___fltol
  1191                           	FNCALL	_set_pwm1_percent,_set_pwm1_raw
  1192                           	FNCALL	_read_adc_voltage,___fldiv
  1193                           	FNCALL	_read_adc_voltage,___wmul
  1194                           	FNCALL	_read_adc_voltage,___xxtofl
  1195                           	FNCALL	_read_adc_voltage,_read_adc_raw_no_lib
  1196                           	FNCALL	_pwd_Timer3,___awmod
  1197                           	FNCALL	_lcd_puts,_lcd_putc
  1198                           	FNCALL	_lcd_putc,_delay_ms
  1199                           	FNCALL	_lcd_putc,_lcd_gotoxy
  1200                           	FNCALL	_lcd_putc,_lcd_send_byte
  1201                           	FNCALL	_lcd_gotoxy,_lcd_send_byte
  1202                           	FNCALL	_lcd_init,_delay_ms
  1203                           	FNCALL	_lcd_init,_lcd_send_byte
  1204                           	FNCALL	_lcd_init,_lcd_send_nibble
  1205                           	FNCALL	_lcd_send_byte,_delay_cycles
  1206                           	FNCALL	_lcd_send_byte,_delay_ms
  1207                           	FNCALL	_lcd_send_byte,_lcd_send_nibble
  1208                           	FNCALL	_lcd_send_nibble,_delay_cycles
  1209                           	FNROOT	_main
  1210                           	FNCALL	_highIsr,i2___awmod
  1211                           	FNCALL	_highIsr,i2_pwd_Timer3
  1212                           	FNCALL	_highIsr,i2_reloadTimer3
  1213                           	FNCALL	i2_pwd_Timer3,i2___awmod
  1214                           	FNCALL	intlevel2,_highIsr
  1215                           	global	intlevel2
  1216                           	FNROOT	intlevel2
  1217                           	global	_LCD_INIT_STRING
  1218                           	global	_heaterON
  1219                           psect	idataCOMRAM,class=CODE,space=0,delta=1,noexec
  1220                           global __pidataCOMRAM
  1221                           __pidataCOMRAM:
  1222  00488C                     	file	"lcd_x8.c"
  1223                           	line	6
  1224                           
  1225                           ;initializer for _LCD_INIT_STRING
  1226                           	db	low(028h)
  1227  00488C  28                 	db	low(0Ch)
  1228  00488D  0C                 	db	low(01h)
  1229  00488E  01                 	db	low(06h)
  1230  00488F  06                 psect	idataBANK1,class=CODE,space=0,delta=1,noexec
  1231                           global __pidataBANK1
  1232                           __pidataBANK1:
  1233  004890                     	file	"main.c"
  1234                           	line	94
  1235                           
  1236                           ;initializer for _heaterON
  1237                           	db	low(01h)
  1238  004890  01                 	global	__powers_
  1239                           psect	mediumconst,class=MEDIUMCONST,space=0,reloc=2,noexec
  1240                           global __pmediumconst
  1241                           __pmediumconst:
  1242  00FEDA                     	db	0
  1243  00FEDA  00                 	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\powers.c"
  1244                           	line	7
  1245                           __powers_:
  1246  00FEDB                     	dw	(normalize32(1.0000000000000000) & 0ffffh)
  1247  00FEDB  0000               	dw	highword (normalize32(1.0000000000000000))
  1248  00FEDD  3F80               	dw	(normalize32(10.000000000000000) & 0ffffh)
  1249  00FEDF  0000               	dw	highword (normalize32(10.000000000000000))
  1250  00FEE1  4120               	dw	(normalize32(100.00000000000000) & 0ffffh)
  1251  00FEE3  0000               	dw	highword (normalize32(100.00000000000000))
  1252  00FEE5  42C8               	dw	(normalize32(1000.0000000000000) & 0ffffh)
  1253  00FEE7  0000               	dw	highword (normalize32(1000.0000000000000))
  1254  00FEE9  447A               	dw	(normalize32(10000.000000000000) & 0ffffh)
  1255  00FEEB  4000               	dw	highword (normalize32(10000.000000000000))
  1256  00FEED  461C               	dw	(normalize32(100000.00000000000) & 0ffffh)
  1257  00FEEF  5000               	dw	highword (normalize32(100000.00000000000))
  1258  00FEF1  47C3               	dw	(normalize32(1000000.0000000000) & 0ffffh)
  1259  00FEF3  2400               	dw	highword (normalize32(1000000.0000000000))
  1260  00FEF5  4974               	dw	(normalize32(10000000.000000000) & 0ffffh)
  1261  00FEF7  9680               	dw	highword (normalize32(10000000.000000000))
  1262  00FEF9  4B18               	dw	(normalize32(100000000.00000000) & 0ffffh)
  1263  00FEFB  BC20               	dw	highword (normalize32(100000000.00000000))
  1264  00FEFD  4CBE               	dw	(normalize32(1000000000.0000000) & 0ffffh)
  1265  00FEFF  6B28               	dw	highword (normalize32(1000000000.0000000))
  1266  00FF01  4E6E               	dw	(normalize32(10000000000.000000) & 0ffffh)
  1267  00FF03  02F9               	dw	highword (normalize32(10000000000.000000))
  1268  00FF05  5015               	dw	(normalize32(1.0000000000000000e+020) & 0ffffh)
  1269  00FF07  78EC               	dw	highword (normalize32(1.0000000000000000e+020))
  1270  00FF09  60AD               	dw	(normalize32(1.0000000000000000e+030) & 0ffffh)
  1271  00FF0B  F2CA               	dw	highword (normalize32(1.0000000000000000e+030))
  1272  00FF0D  7149               	global __end_of__powers_
  1273                           __end_of__powers_:
  1274  00FF0F                     	global	__npowers_
  1275                           psect	mediumconst
  1276                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\powers.c"
  1277                           	line	39
  1278                           __npowers_:
  1279  00FF0F                     	dw	(normalize32(1.0000000000000000) & 0ffffh)
  1280  00FF0F  0000               	dw	highword (normalize32(1.0000000000000000))
  1281  00FF11  3F80               	dw	(normalize32(0.10000000000000001) & 0ffffh)
  1282  00FF13  CCCD               	dw	highword (normalize32(0.10000000000000001))
  1283  00FF15  3DCC               	dw	(normalize32(0.010000000000000000) & 0ffffh)
  1284  00FF17  D70A               	dw	highword (normalize32(0.010000000000000000))
  1285  00FF19  3C23               	dw	(normalize32(0.0010000000000000000) & 0ffffh)
  1286  00FF1B  126F               	dw	highword (normalize32(0.0010000000000000000))
  1287  00FF1D  3A83               	dw	(normalize32(0.00010000000000000000) & 0ffffh)
  1288  00FF1F  B717               	dw	highword (normalize32(0.00010000000000000000))
  1289  00FF21  38D1               	dw	(normalize32(1.0000000000000001e-005) & 0ffffh)
  1290  00FF23  C5AC               	dw	highword (normalize32(1.0000000000000001e-005))
  1291  00FF25  3727               	dw	(normalize32(9.9999999999999995e-007) & 0ffffh)
  1292  00FF27  37BD               	dw	highword (normalize32(9.9999999999999995e-007))
  1293  00FF29  3586               	dw	(normalize32(9.9999999999999995e-008) & 0ffffh)
  1294  00FF2B  BF95               	dw	highword (normalize32(9.9999999999999995e-008))
  1295  00FF2D  33D6               	dw	(normalize32(1.0000000000000000e-008) & 0ffffh)
  1296  00FF2F  CC77               	dw	highword (normalize32(1.0000000000000000e-008))
  1297  00FF31  322B               	dw	(normalize32(1.0000000000000001e-009) & 0ffffh)
  1298  00FF33  705F               	dw	highword (normalize32(1.0000000000000001e-009))
  1299  00FF35  3089               	dw	(normalize32(1.0000000000000000e-010) & 0ffffh)
  1300  00FF37  E6FF               	dw	highword (normalize32(1.0000000000000000e-010))
  1301  00FF39  2EDB               	dw	(normalize32(9.9999999999999995e-021) & 0ffffh)
  1302  00FF3B  E508               	dw	highword (normalize32(9.9999999999999995e-021))
  1303  00FF3D  1E3C               	dw	(normalize32(1.0000000000000001e-030) & 0ffffh)
  1304  00FF3F  4260               	dw	highword (normalize32(1.0000000000000001e-030))
  1305  00FF41  0DA2               	global __end_of__npowers_
  1306                           __end_of__npowers_:
  1307  00FF43                     	global	_dpowers
  1308                           psect	mediumconst
  1309                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1310                           	line	354
  1311                           _dpowers:
  1312  00FF43                     	dw	(01h) & 0xffff
  1313  00FF43  0001               	dw	highword(01h)
  1314  00FF45  0000               	dw	(0Ah) & 0xffff
  1315  00FF47  000A               	dw	highword(0Ah)
  1316  00FF49  0000               	dw	(064h) & 0xffff
  1317  00FF4B  0064               	dw	highword(064h)
  1318  00FF4D  0000               	dw	(03E8h) & 0xffff
  1319  00FF4F  03E8               	dw	highword(03E8h)
  1320  00FF51  0000               	dw	(02710h) & 0xffff
  1321  00FF53  2710               	dw	highword(02710h)
  1322  00FF55  0000               	dw	(0186A0h) & 0xffff
  1323  00FF57  86A0               	dw	highword(0186A0h)
  1324  00FF59  0001               	dw	(0F4240h) & 0xffff
  1325  00FF5B  4240               	dw	highword(0F4240h)
  1326  00FF5D  000F               	dw	(0989680h) & 0xffff
  1327  00FF5F  9680               	dw	highword(0989680h)
  1328  00FF61  0098               	dw	(05F5E100h) & 0xffff
  1329  00FF63  E100               	dw	highword(05F5E100h)
  1330  00FF65  05F5               	dw	(03B9ACA00h) & 0xffff
  1331  00FF67  CA00               	dw	highword(03B9ACA00h)
  1332  00FF69  3B9A               	global __end_of_dpowers
  1333                           __end_of_dpowers:
  1334  00FF6B                     	global	__powers_
  1335                           	global	__npowers_
  1336                           	global	_dpowers
  1337                           	global	_HS
  1338                           	global	_timer3Counter
  1339                           	global	_operationModes
  1340                           	global	_percentCoolCounter
  1341                           	global	_percentHeatCounter
  1342                           	global	_temp
  1343                           	global	_ot
  1344                           	global	_sp
  1345                           	global	_RPS_count
  1346                           	global	_coolerON
  1347                           	global	_PORTCbits
  1348                           _PORTCbits	set	0xF82
  1349  0000                     	global	_TRISE
  1350                           _TRISE	set	0xF96
  1351  0000                     	global	_TRISD
  1352                           _TRISD	set	0xF95
  1353  0000                     	global	_TRISA
  1354                           _TRISA	set	0xF92
  1355  0000                     	global	_TRISC
  1356                           _TRISC	set	0xF94
  1357  0000                     	global	_TRISB
  1358                           _TRISB	set	0xF93
  1359  0000                     	global	_ADCON1
  1360                           _ADCON1	set	0xFC1
  1361  0000                     	global	_INTCON
  1362                           _INTCON	set	0xFF2
  1363  0000                     	global	_INTCON2
  1364                           _INTCON2	set	0xFF1
  1365  0000                     	global	_INTCON3bits
  1366                           _INTCON3bits	set	0xFF0
  1367  0000                     	global	_INTCON3
  1368                           _INTCON3	set	0xFF0
  1369  0000                     	global	_RCONbits
  1370                           _RCONbits	set	0xFD0
  1371  0000                     	global	_T3CONbits
  1372                           _T3CONbits	set	0xFB1
  1373  0000                     	global	_PIE2
  1374                           _PIE2	set	0xFA0
  1375  0000                     	global	_T3CON
  1376                           _T3CON	set	0xFB1
  1377  0000                     	global	_PIE2bits
  1378                           _PIE2bits	set	0xFA0
  1379  0000                     	global	_PIR2
  1380                           _PIR2	set	0xFA1
  1381  0000                     	global	_PIR1
  1382                           _PIR1	set	0xF9E
  1383  0000                     	global	_PIR2bits
  1384                           _PIR2bits	set	0xFA1
  1385  0000                     	global	_TMR3L
  1386                           _TMR3L	set	0xFB2
  1387  0000                     	global	_TMR3H
  1388                           _TMR3H	set	0xFB3
  1389  0000                     	global	_TMR1L
  1390                           _TMR1L	set	0xFCE
  1391  0000                     	global	_TMR1H
  1392                           _TMR1H	set	0xFCF
  1393  0000                     	global	_T1CONbits
  1394                           _T1CONbits	set	0xFCD
  1395  0000                     	global	_TMR0L
  1396                           _TMR0L	set	0xFD6
  1397  0000                     	global	_TMR0H
  1398                           _TMR0H	set	0xFD7
  1399  0000                     	global	_T0CONbits
  1400                           _T0CONbits	set	0xFD5
  1401  0000                     	global	_INTCONbits
  1402                           _INTCONbits	set	0xFF2
  1403  0000                     	global	_T0CON
  1404                           _T0CON	set	0xFD5
  1405  0000                     	global	_lcd
  1406                           	global	_lcd
  1407                           _lcd  equ     3971
  1408  0000                     	global	_PORTEbits
  1409                           _PORTEbits	set	0xF84
  1410  0000                     	global	_CCP1CONbits
  1411                           _CCP1CONbits	set	0xFBD
  1412  0000                     	global	_CCPR1L
  1413                           _CCPR1L	set	0xFBE
  1414  0000                     	global	_TRISCbits
  1415                           _TRISCbits	set	0xF94
  1416  0000                     	global	_T2CONbits
  1417                           _T2CONbits	set	0xFCA
  1418  0000                     	global	_CCP1CON
  1419                           _CCP1CON	set	0xFBD
  1420  0000                     	global	_T2CON
  1421                           _T2CON	set	0xFCA
  1422  0000                     	global	_PR2
  1423                           _PR2	set	0xFCB
  1424  0000                     	global	_ADRESL
  1425                           _ADRESL	set	0xFC3
  1426  0000                     	global	_ADRESH
  1427                           _ADRESH	set	0xFC4
  1428  0000                     	global	_ADCON2
  1429                           _ADCON2	set	0xFC0
  1430  0000                     	global	_ADCON0bits
  1431                           _ADCON0bits	set	0xFC2
  1432  0000                     	global	_ADCON0
  1433                           _ADCON0	set	0xFC2
  1434  0000                     	global	_RC2
  1435                           _RC2	set	0x7C12
  1436  0000                     	
  1437                           STR_1:
  1438  00FF6B                     	db	82	;'R'
  1439  00FF6B  52                 	db	84	;'T'
  1440  00FF6C  54                 	db	58	;':'
  1441  00FF6D  3A                 	db	37
  1442  00FF6E  25                 	db	48	;'0'
  1443  00FF6F  30                 	db	51	;'3'
  1444  00FF70  33                 	db	46
  1445  00FF71  2E                 	db	48	;'0'
  1446  00FF72  30                 	db	50	;'2'
  1447  00FF73  32                 	db	102	;'f'
  1448  00FF74  66                 	db	67	;'C'
  1449  00FF75  43                 	db	32
  1450  00FF76  20                 	db	32
  1451  00FF77  20                 	db	32
  1452  00FF78  20                 	db	32
  1453  00FF79  20                 	db	72	;'H'
  1454  00FF7A  48                 	db	32
  1455  00FF7B  20                 	db	67	;'C'
  1456  00FF7C  43                 	db	0
  1457  00FF7D  00                 	
  1458                           STR_5:
  1459  00FF7E                     	db	77	;'M'
  1460  00FF7E  4D                 	db	68	;'D'
  1461  00FF7F  44                 	db	58	;':'
  1462  00FF80  3A                 	db	32
  1463  00FF81  20                 	db	79	;'O'
  1464  00FF82  4F                 	db	70	;'F'
  1465  00FF83  46                 	db	70	;'F'
  1466  00FF84  46                 	db	32
  1467  00FF85  20                 	db	32
  1468  00FF86  20                 	db	32
  1469  00FF87  20                 	db	32
  1470  00FF88  20                 	db	32
  1471  00FF89  20                 	db	32
  1472  00FF8A  20                 	db	32
  1473  00FF8B  20                 	db	32
  1474  00FF8C  20                 	db	0
  1475  00FF8D  00                 	
  1476                           STR_7:
  1477  00FF8E                     	db	77	;'M'
  1478  00FF8E  4D                 	db	68	;'D'
  1479  00FF8F  44                 	db	58	;':'
  1480  00FF90  3A                 	db	32
  1481  00FF91  20                 	db	67	;'C'
  1482  00FF92  43                 	db	111	;'o'
  1483  00FF93  6F                 	db	111	;'o'
  1484  00FF94  6F                 	db	108	;'l'
  1485  00FF95  6C                 	db	32
  1486  00FF96  20                 	db	32
  1487  00FF97  20                 	db	32
  1488  00FF98  20                 	db	32
  1489  00FF99  20                 	db	32
  1490  00FF9A  20                 	db	32
  1491  00FF9B  20                 	db	32
  1492  00FF9C  20                 	db	0
  1493  00FF9D  00                 	
  1494                           STR_2:
  1495  00FF9E                     	db	83	;'S'
  1496  00FF9E  53                 	db	80	;'P'
  1497  00FF9F  50                 	db	58	;':'
  1498  00FFA0  3A                 	db	37
  1499  00FFA1  25                 	db	48	;'0'
  1500  00FFA2  30                 	db	51	;'3'
  1501  00FFA3  33                 	db	46
  1502  00FFA4  2E                 	db	48	;'0'
  1503  00FFA5  30                 	db	50	;'2'
  1504  00FFA6  32                 	db	102	;'f'
  1505  00FFA7  66                 	db	67	;'C'
  1506  00FFA8  43                 	db	32
  1507  00FFA9  20                 	db	32
  1508  00FFAA  20                 	db	32
  1509  00FFAB  20                 	db	32
  1510  00FFAC  20                 	db	0
  1511  00FFAD  00                 	
  1512                           STR_3:
  1513  00FFAE                     	db	72	;'H'
  1514  00FFAE  48                 	db	83	;'S'
  1515  00FFAF  53                 	db	58	;':'
  1516  00FFB0  3A                 	db	37
  1517  00FFB1  25                 	db	48	;'0'
  1518  00FFB2  30                 	db	51	;'3'
  1519  00FFB3  33                 	db	46
  1520  00FFB4  2E                 	db	48	;'0'
  1521  00FFB5  30                 	db	50	;'2'
  1522  00FFB6  32                 	db	102	;'f'
  1523  00FFB7  66                 	db	67	;'C'
  1524  00FFB8  43                 	db	32
  1525  00FFB9  20                 	db	0
  1526  00FFBA  00                 	
  1527                           STR_10:
  1528  00FFBB                     	db	32
  1529  00FFBB  20                 	db	82	;'R'
  1530  00FFBC  52                 	db	61	;'='
  1531  00FFBD  3D                 	db	37
  1532  00FFBE  25                 	db	48	;'0'
  1533  00FFBF  30                 	db	53	;'5'
  1534  00FFC0  35                 	db	46
  1535  00FFC1  2E                 	db	48	;'0'
  1536  00FFC2  30                 	db	50	;'2'
  1537  00FFC3  32                 	db	102	;'f'
  1538  00FFC4  66                 	db	10
  1539  00FFC5  0A                 	db	0
  1540  00FFC6  00                 	
  1541                           STR_13:
  1542  00FFC7                     	db	77	;'M'
  1543  00FFC7  4D                 	db	68	;'D'
  1544  00FFC8  44                 	db	58	;':'
  1545  00FFC9  3A                 	db	65	;'A'
  1546  00FFCA  41                 	db	117	;'u'
  1547  00FFCB  75                 	db	116	;'t'
  1548  00FFCC  74                 	db	111	;'o'
  1549  00FFCD  6F                 	db	32
  1550  00FFCE  20                 	db	72	;'H'
  1551  00FFCF  48                 	db	67	;'C'
  1552  00FFD0  43                 	db	0
  1553  00FFD1  00                 	
  1554                           STR_9:
  1555  00FFD2                     	db	77	;'M'
  1556  00FFD2  4D                 	db	68	;'D'
  1557  00FFD3  44                 	db	58	;':'
  1558  00FFD4  3A                 	db	65	;'A'
  1559  00FFD5  41                 	db	117	;'u'
  1560  00FFD6  75                 	db	116	;'t'
  1561  00FFD7  74                 	db	111	;'o'
  1562  00FFD8  6F                 	db	32
  1563  00FFD9  20                 	db	67	;'C'
  1564  00FFDA  43                 	db	76	;'L'
  1565  00FFDB  4C                 	db	0
  1566  00FFDC  00                 	
  1567                           STR_11:
  1568  00FFDD                     	db	77	;'M'
  1569  00FFDD  4D                 	db	68	;'D'
  1570  00FFDE  44                 	db	58	;':'
  1571  00FFDF  3A                 	db	65	;'A'
  1572  00FFE0  41                 	db	117	;'u'
  1573  00FFE1  75                 	db	116	;'t'
  1574  00FFE2  74                 	db	111	;'o'
  1575  00FFE3  6F                 	db	32
  1576  00FFE4  20                 	db	72	;'H'
  1577  00FFE5  48                 	db	84	;'T'
  1578  00FFE6  54                 	db	0
  1579  00FFE7  00                 	
  1580                           STR_8:
  1581  00FFE8                     	db	32
  1582  00FFE8  20                 	db	32
  1583  00FFE9  20                 	db	72	;'H'
  1584  00FFEA  48                 	db	83	;'S'
  1585  00FFEB  53                 	db	61	;'='
  1586  00FFEC  3D                 	db	37
  1587  00FFED  25                 	db	100	;'d'
  1588  00FFEE  64                 	db	0
  1589  00FFEF  00                 	
  1590                           STR_6:
  1591  00FFF0                     	db	32
  1592  00FFF0  20                 	db	67	;'C'
  1593  00FFF1  43                 	db	58	;':'
  1594  00FFF2  3A                 	db	37
  1595  00FFF3  25                 	db	51	;'3'
  1596  00FFF4  33                 	db	100	;'d'
  1597  00FFF5  64                 	db	0
  1598  00FFF6  00                 	
  1599                           STR_4:
  1600  00FFF7                     	db	32
  1601  00FFF7  20                 	db	72	;'H'
  1602  00FFF8  48                 	db	58	;':'
  1603  00FFF9  3A                 	db	37
  1604  00FFFA  25                 	db	51	;'3'
  1605  00FFFB  33                 	db	100	;'d'
  1606  00FFFC  64                 	db	0
  1607  00FFFD  00                 STR_12	equ	STR_4+0
  1608  0000                     STR_14	equ	STR_10+0
  1609  0000                     ; #config settings
  1610                           global __CFG_OSC$XT
  1611                           __CFG_OSC$XT equ 0x0
  1612  0000                     global __CFG_FCMEN$OFF
  1613                           __CFG_FCMEN$OFF equ 0x0
  1614  0000                     global __CFG_IESO$OFF
  1615                           __CFG_IESO$OFF equ 0x0
  1616  0000                     global __CFG_PWRT$OFF
  1617                           __CFG_PWRT$OFF equ 0x0
  1618  0000                     global __CFG_BOREN$SBORDIS
  1619                           __CFG_BOREN$SBORDIS equ 0x0
  1620  0000                     global __CFG_BORV$3
  1621                           __CFG_BORV$3 equ 0x0
  1622  0000                     global __CFG_WDT$ON
  1623                           __CFG_WDT$ON equ 0x0
  1624  0000                     global __CFG_WDTPS$32768
  1625                           __CFG_WDTPS$32768 equ 0x0
  1626  0000                     global __CFG_CCP2MX$PORTC
  1627                           __CFG_CCP2MX$PORTC equ 0x0
  1628  0000                     global __CFG_PBADEN$ON
  1629                           __CFG_PBADEN$ON equ 0x0
  1630  0000                     global __CFG_LPT1OSC$OFF
  1631                           __CFG_LPT1OSC$OFF equ 0x0
  1632  0000                     global __CFG_MCLRE$ON
  1633                           __CFG_MCLRE$ON equ 0x0
  1634  0000                     global __CFG_STVREN$ON
  1635                           __CFG_STVREN$ON equ 0x0
  1636  0000                     global __CFG_LVP$ON
  1637                           __CFG_LVP$ON equ 0x0
  1638  0000                     global __CFG_XINST$OFF
  1639                           __CFG_XINST$OFF equ 0x0
  1640  0000                     global __CFG_CP0$OFF
  1641                           __CFG_CP0$OFF equ 0x0
  1642  0000                     global __CFG_CP1$OFF
  1643                           __CFG_CP1$OFF equ 0x0
  1644  0000                     global __CFG_CP2$OFF
  1645                           __CFG_CP2$OFF equ 0x0
  1646  0000                     global __CFG_CP3$OFF
  1647                           __CFG_CP3$OFF equ 0x0
  1648  0000                     global __CFG_CPB$OFF
  1649                           __CFG_CPB$OFF equ 0x0
  1650  0000                     global __CFG_CPD$OFF
  1651                           __CFG_CPD$OFF equ 0x0
  1652  0000                     global __CFG_WRT0$OFF
  1653                           __CFG_WRT0$OFF equ 0x0
  1654  0000                     global __CFG_WRT1$OFF
  1655                           __CFG_WRT1$OFF equ 0x0
  1656  0000                     global __CFG_WRT2$OFF
  1657                           __CFG_WRT2$OFF equ 0x0
  1658  0000                     global __CFG_WRT3$OFF
  1659                           __CFG_WRT3$OFF equ 0x0
  1660  0000                     global __CFG_WRTC$OFF
  1661                           __CFG_WRTC$OFF equ 0x0
  1662  0000                     global __CFG_WRTB$OFF
  1663                           __CFG_WRTB$OFF equ 0x0
  1664  0000                     global __CFG_WRTD$OFF
  1665                           __CFG_WRTD$OFF equ 0x0
  1666  0000                     global __CFG_EBTR0$OFF
  1667                           __CFG_EBTR0$OFF equ 0x0
  1668  0000                     global __CFG_EBTR1$OFF
  1669                           __CFG_EBTR1$OFF equ 0x0
  1670  0000                     global __CFG_EBTR2$OFF
  1671                           __CFG_EBTR2$OFF equ 0x0
  1672  0000                     global __CFG_EBTR3$OFF
  1673                           __CFG_EBTR3$OFF equ 0x0
  1674  0000                     global __CFG_EBTRB$OFF
  1675                           __CFG_EBTRB$OFF equ 0x0
  1676  0000                     	file	"C:\Users\HP\AppData\Local\Temp\s6ds."
  1677                           	line	#
  1678                           psect	cinit,class=CODE,delta=1,reloc=2
  1679                           global __pcinit
  1680                           __pcinit:
  1681  0044EE                     global start_initialization
  1682                           start_initialization:
  1683  0044EE                     
  1684                           global __initialization
  1685                           __initialization:
  1686  0044EE                     psect	bssCOMRAM,class=COMRAM,space=1,noexec
  1687                           global __pbssCOMRAM
  1688                           __pbssCOMRAM:
  1689  000054                     	global	_HS
  1690                           _HS:
  1691  000054                            ds      2
  1692  000054                     	global	_timer3Counter
  1693                           _timer3Counter:
  1694  000056                            ds      2
  1695  000056                     	global	_operationModes
  1696                           _operationModes:
  1697  000058                            ds      2
  1698  000058                     	global	_percentCoolCounter
  1699                           _percentCoolCounter:
  1700  00005A                            ds      2
  1701  00005A                     	global	_percentHeatCounter
  1702                           _percentHeatCounter:
  1703  00005C                            ds      2
  1704  00005C                     psect	dataCOMRAM,class=COMRAM,space=1,noexec
  1705                           global __pdataCOMRAM
  1706                           __pdataCOMRAM:
  1707  00005E                     	file	"lcd_x8.c"
  1708                           	line	6
  1709                           	global	_LCD_INIT_STRING
  1710                           _LCD_INIT_STRING:
  1711  00005E                            ds      4
  1712  00005E                     psect	bssBANK1,class=BANK1,space=1,noexec,lowdata
  1713                           global __pbssBANK1
  1714                           __pbssBANK1:
  1715  00014F                     	global	_temp
  1716                           _temp:
  1717  00014F                            ds      4
  1718  00014F                     	global	_ot
  1719                           _ot:
  1720  000153                            ds      4
  1721  000153                     	global	_sp
  1722                           _sp:
  1723  000157                            ds      4
  1724  000157                     	global	_RPS_count
  1725                           _RPS_count:
  1726  00015B                            ds      2
  1727  00015B                     	global	_coolerON
  1728                           _coolerON:
  1729  00015D                            ds      1
  1730  00015D                     psect	dataBANK1,class=BANK1,space=1,noexec,lowdata
  1731                           global __pdataBANK1
  1732                           __pdataBANK1:
  1733  00015E                     	file	"main.c"
  1734                           	line	94
  1735                           	global	_heaterON
  1736                           _heaterON:
  1737  00015E                            ds      1
  1738  00015E                     	file	"C:\Users\HP\AppData\Local\Temp\s6ds."
  1739                           	line	#
  1740                           psect	cinit
  1741                           ; Initialize objects allocated to BANK1 (1 bytes)
  1742                           	global __pidataBANK1
  1743                           	; load TBLPTR registers with __pidataBANK1
  1744                           	movlw	low (__pidataBANK1)
  1745  0044EE  0E90               	movwf	tblptrl
  1746  0044F0  6EF6               	movlw	high(__pidataBANK1)
  1747  0044F2  0E48               	movwf	tblptrh
  1748  0044F4  6EF7               	movlw	low highword(__pidataBANK1)
  1749  0044F6  0E00               	movwf	tblptru
  1750  0044F8  6EF8               	tblrd*+ ;fetch initializer
  1751  0044FA  0009               	movff	tablat, __pdataBANK1+0		
  1752  0044FC  CFF5 F15E          ; Initialize objects allocated to COMRAM (4 bytes)
  1753                           	global __pidataCOMRAM
  1754                           	; load TBLPTR registers with __pidataCOMRAM
  1755                           	movlw	low (__pidataCOMRAM)
  1756  004500  0E8C               	movwf	tblptrl
  1757  004502  6EF6               	movlw	high(__pidataCOMRAM)
  1758  004504  0E48               	movwf	tblptrh
  1759  004506  6EF7               	movlw	low highword(__pidataCOMRAM)
  1760  004508  0E00               	movwf	tblptru
  1761  00450A  6EF8               	lfsr	0,__pdataCOMRAM
  1762  00450C  EE00  F05E         	lfsr	1,4
  1763  004510  EE10 F004          	copy_data0:
  1764  004514                     	tblrd	*+
  1765  004514  0009               	movff	tablat, postinc0
  1766  004516  CFF5 FFEE          	movf	postdec1,w
  1767  00451A  50E5               	movf	fsr1l,w
  1768  00451C  50E1               	bnz	copy_data0
  1769  00451E  E1FA               	line	#
  1770                           ; Clear objects allocated to BANK1 (15 bytes)
  1771                           	global __pbssBANK1
  1772                           lfsr	0,__pbssBANK1
  1773  004520  EE01  F04F         movlw	15
  1774  004524  0E0F               clear_0:
  1775  004526                     clrf	postinc0,c
  1776  004526  6AEE               decf	wreg
  1777  004528  06E8               bnz	clear_0
  1778  00452A  E1FD               ; Clear objects allocated to COMRAM (10 bytes)
  1779                           	global __pbssCOMRAM
  1780                           lfsr	0,__pbssCOMRAM
  1781  00452C  EE00  F054         movlw	10
  1782  004530  0E0A               clear_1:
  1783  004532                     clrf	postinc0,c
  1784  004532  6AEE               decf	wreg
  1785  004534  06E8               bnz	clear_1
  1786  004536  E1FD               psect cinit,class=CODE,delta=1
  1787                           global end_of_initialization,__end_of__initialization
  1788                           
  1789                           ;End of C runtime variable initialization code
  1790                           
  1791                           end_of_initialization:
  1792  004538                     __end_of__initialization:
  1793  004538                     	bcf int$flags,0,c ;clear compiler interrupt flag (level 1)
  1794  004538  9062               	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
  1795  00453A  9262               	GLOBAL	__Lmediumconst
  1796                           	movlw	low highword(__Lmediumconst)
  1797  00453C  0E00               	movwf	tblptru
  1798  00453E  6EF8               movlb 0
  1799  004540  0100               goto _main	;jump to C main() function
  1800  004542  EF72  F007         psect	cstackBANK1,class=BANK1,space=1,noexec
  1801                           global __pcstackBANK1
  1802                           __pcstackBANK1:
  1803  000100                     	global	main@Buffer
  1804                           main@Buffer:	; 32 bytes @ 0x0
  1805  000100                     	ds   32
  1806  000100                     	global	main@voltage
  1807                           main@voltage:	; 4 bytes @ 0x20
  1808  000120                     	ds   4
  1809  000120                     	global	_main$1709
  1810                           _main$1709:	; 4 bytes @ 0x24
  1811  000124                     	ds   4
  1812  000124                     	global	main@RPS
  1813                           main@RPS:	; 2 bytes @ 0x28
  1814  000128                     	ds   2
  1815  000128                     	global	main@CoolError1
  1816                           main@CoolError1:	; 2 bytes @ 0x2A
  1817  00012A                     	ds   2
  1818  00012A                     	global	main@RPS_1049
  1819                           main@RPS_1049:	; 2 bytes @ 0x2C
  1820  00012C                     	ds   2
  1821  00012C                     	global	_main$1711
  1822                           _main$1711:	; 2 bytes @ 0x2E
  1823  00012E                     	ds   2
  1824  00012E                     	global	main@analogs
  1825                           main@analogs:	; 12 bytes @ 0x30
  1826  000130                     	ds   12
  1827  000130                     	global	main@AI1_Percentage
  1828                           main@AI1_Percentage:	; 2 bytes @ 0x3C
  1829  00013C                     	ds   2
  1830  00013C                     	global	main@CoolError
  1831                           main@CoolError:	; 2 bytes @ 0x3E
  1832  00013E                     	ds   2
  1833  00013E                     	global	main@HeatError
  1834                           main@HeatError:	; 2 bytes @ 0x40
  1835  000140                     	ds   2
  1836  000140                     	global	main@HeatError1
  1837                           main@HeatError1:	; 2 bytes @ 0x42
  1838  000142                     	ds   2
  1839  000142                     	global	_main$1712
  1840                           _main$1712:	; 4 bytes @ 0x44
  1841  000144                     	ds   4
  1842  000144                     	global	_main$1710
  1843                           _main$1710:	; 2 bytes @ 0x48
  1844  000148                     	ds   2
  1845  000148                     	global	main@PWMPersent
  1846                           main@PWMPersent:	; 2 bytes @ 0x4A
  1847  00014A                     	ds   2
  1848  00014A                     	global	main@PWMPersent1
  1849                           main@PWMPersent1:	; 2 bytes @ 0x4C
  1850  00014C                     	ds   2
  1851  00014C                     	global	main@channel
  1852                           main@channel:	; 1 bytes @ 0x4E
  1853  00014E                     	ds   1
  1854  00014E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1855                           global __pcstackBANK0
  1856                           __pcstackBANK0:
  1857  000080                     	global	?___fladd
  1858                           ?___fladd:	; 4 bytes @ 0x0
  1859  000080                     	global	___fldiv@sign
  1860                           ___fldiv@sign:	; 1 bytes @ 0x0
  1861  000080                     	global	___fladd@b
  1862                           ___fladd@b:	; 4 bytes @ 0x0
  1863  000080                     	ds   1
  1864  000080                     	global	___fldiv@rem
  1865                           ___fldiv@rem:	; 4 bytes @ 0x1
  1866  000081                     	ds   3
  1867  000081                     	global	___fladd@a
  1868                           ___fladd@a:	; 4 bytes @ 0x4
  1869  000084                     	ds   1
  1870  000084                     	global	___fldiv@new_exp
  1871                           ___fldiv@new_exp:	; 2 bytes @ 0x5
  1872  000085                     	ds   2
  1873  000085                     	global	___fldiv@grs
  1874                           ___fldiv@grs:	; 4 bytes @ 0x7
  1875  000087                     	ds   1
  1876  000087                     ??___fladd:	; 1 bytes @ 0x8
  1877  000088                     	ds   3
  1878  000088                     	global	___fldiv@bexp
  1879                           ___fldiv@bexp:	; 1 bytes @ 0xB
  1880  00008B                     	ds   1
  1881  00008B                     	global	___fldiv@aexp
  1882                           ___fldiv@aexp:	; 1 bytes @ 0xC
  1883  00008C                     	ds   1
  1884  00008C                     	global	?_read_adc_voltage
  1885                           ?_read_adc_voltage:	; 4 bytes @ 0xD
  1886  00008D                     	ds   3
  1887  00008D                     	global	___fladd@signs
  1888                           ___fladd@signs:	; 1 bytes @ 0x10
  1889  000090                     	ds   1
  1890  000090                     	global	___fladd@aexp
  1891                           ___fladd@aexp:	; 1 bytes @ 0x11
  1892  000091                     	global	read_adc_voltage@voltage
  1893                           read_adc_voltage@voltage:	; 4 bytes @ 0x11
  1894  000091                     	ds   1
  1895  000091                     	global	___fladd@bexp
  1896                           ___fladd@bexp:	; 1 bytes @ 0x12
  1897  000092                     	ds   1
  1898  000092                     	global	___fladd@grs
  1899                           ___fladd@grs:	; 1 bytes @ 0x13
  1900  000093                     	ds   1
  1901  000093                     ?___flge:	; 1 bit 
  1902  000094                     	global	?___flsub
  1903                           ?___flsub:	; 4 bytes @ 0x14
  1904  000094                     	global	?___fltol
  1905                           ?___fltol:	; 4 bytes @ 0x14
  1906  000094                     	global	___flge@ff1
  1907                           ___flge@ff1:	; 4 bytes @ 0x14
  1908  000094                     	global	___fltol@f1
  1909                           ___fltol@f1:	; 4 bytes @ 0x14
  1910  000094                     	global	___flsub@b
  1911                           ___flsub@b:	; 4 bytes @ 0x14
  1912  000094                     	ds   1
  1913  000094                     	global	read_adc_voltage@channel
  1914                           read_adc_voltage@channel:	; 1 bytes @ 0x15
  1915  000095                     	ds   1
  1916  000095                     	global	read_adc_voltage@raw_value
  1917                           read_adc_voltage@raw_value:	; 2 bytes @ 0x16
  1918  000096                     	ds   2
  1919  000096                     ??___fltol:	; 1 bytes @ 0x18
  1920  000098                     	global	___flge@ff2
  1921                           ___flge@ff2:	; 4 bytes @ 0x18
  1922  000098                     	global	___flsub@a
  1923                           ___flsub@a:	; 4 bytes @ 0x18
  1924  000098                     	ds   4
  1925  000098                     ?_set_pwm1_percent:	; 1 bytes @ 0x1C
  1926  00009C                     ??___flge:	; 1 bytes @ 0x1C
  1927  00009C                     	global	set_pwm1_percent@value
  1928                           set_pwm1_percent@value:	; 4 bytes @ 0x1C
  1929  00009C                     	ds   4
  1930  00009C                     	global	?_sprintf
  1931                           ?_sprintf:	; 2 bytes @ 0x20
  1932  0000A0                     	global	sprintf@sp
  1933                           sprintf@sp:	; 2 bytes @ 0x20
  1934  0000A0                     	global	set_pwm1_percent@tmp
  1935                           set_pwm1_percent@tmp:	; 4 bytes @ 0x20
  1936  0000A0                     	ds   2
  1937  0000A0                     	global	sprintf@f
  1938                           sprintf@f:	; 2 bytes @ 0x22
  1939  0000A2                     	ds   2
  1940  0000A2                     	global	set_pwm1_percent@raw_val
  1941                           set_pwm1_percent@raw_val:	; 2 bytes @ 0x24
  1942  0000A4                     	ds   4
  1943  0000A4                     ??_sprintf:	; 1 bytes @ 0x28
  1944  0000A8                     	ds   4
  1945  0000A8                     	global	_sprintf$1716
  1946                           _sprintf$1716:	; 4 bytes @ 0x2C
  1947  0000AC                     	ds   4
  1948  0000AC                     	global	sprintf@ap
  1949                           sprintf@ap:	; 2 bytes @ 0x30
  1950  0000B0                     	ds   2
  1951  0000B0                     	global	sprintf@tmpval
  1952                           sprintf@tmpval:	; 4 bytes @ 0x32
  1953  0000B2                     	ds   4
  1954  0000B2                     	global	sprintf@val
  1955                           sprintf@val:	; 4 bytes @ 0x36
  1956  0000B6                     	ds   4
  1957  0000B6                     	global	sprintf@exp
  1958                           sprintf@exp:	; 2 bytes @ 0x3A
  1959  0000BA                     	ds   2
  1960  0000BA                     	global	sprintf@flag
  1961                           sprintf@flag:	; 2 bytes @ 0x3C
  1962  0000BC                     	ds   2
  1963  0000BC                     	global	sprintf@width
  1964                           sprintf@width:	; 2 bytes @ 0x3E
  1965  0000BE                     	ds   2
  1966  0000BE                     	global	sprintf@fval
  1967                           sprintf@fval:	; 4 bytes @ 0x40
  1968  0000C0                     	ds   4
  1969  0000C0                     	global	sprintf@prec
  1970                           sprintf@prec:	; 2 bytes @ 0x44
  1971  0000C4                     	ds   2
  1972  0000C4                     	global	sprintf@c
  1973                           sprintf@c:	; 1 bytes @ 0x46
  1974  0000C6                     	ds   1
  1975  0000C6                     ??_main:	; 1 bytes @ 0x47
  1976  0000C7                     	ds   2
  1977  0000C7                     psect	cstackCOMRAM,class=COMRAM,space=1,noexec
  1978                           global __pcstackCOMRAM
  1979                           __pcstackCOMRAM:
  1980  000001                     ?_isdigit:	; 1 bit 
  1981  000001                     ?_init_adc_no_lib:	; 1 bytes @ 0x0
  1982  000001                     ?_init_pwm1:	; 1 bytes @ 0x0
  1983  000001                     ?_delay_cycles:	; 1 bytes @ 0x0
  1984  000001                     ?_lcd_send_nibble:	; 1 bytes @ 0x0
  1985  000001                     ?_lcd_init:	; 1 bytes @ 0x0
  1986  000001                     ?_lcd_putc:	; 1 bytes @ 0x0
  1987  000001                     ?_initTimers01:	; 1 bytes @ 0x0
  1988  000001                     ?_reloadTimer3:	; 1 bytes @ 0x0
  1989  000001                     ?_initialization:	; 1 bytes @ 0x0
  1990  000001                     ?_setupPorts:	; 1 bytes @ 0x0
  1991  000001                     ?_highIsr:	; 1 bytes @ 0x0
  1992  000001                     ?_main:	; 1 bytes @ 0x0
  1993  000001                     ?i2_reloadTimer3:	; 1 bytes @ 0x0
  1994  000001                     ??i2_reloadTimer3:	; 1 bytes @ 0x0
  1995  000001                     	global	?i2___awmod
  1996                           ?i2___awmod:	; 2 bytes @ 0x0
  1997  000001                     	global	i2___awmod@dividend
  1998                           i2___awmod@dividend:	; 2 bytes @ 0x0
  1999  000001                     	ds   2
  2000  000001                     	global	i2___awmod@divisor
  2001                           i2___awmod@divisor:	; 2 bytes @ 0x2
  2002  000003                     	ds   2
  2003  000003                     ??i2___awmod:	; 1 bytes @ 0x4
  2004  000005                     	global	i2___awmod@counter
  2005                           i2___awmod@counter:	; 1 bytes @ 0x4
  2006  000005                     	ds   1
  2007  000005                     	global	i2___awmod@sign
  2008                           i2___awmod@sign:	; 1 bytes @ 0x5
  2009  000006                     	ds   1
  2010  000006                     ?i2_pwd_Timer3:	; 1 bytes @ 0x6
  2011  000007                     	global	i2pwd_Timer3@limit
  2012                           i2pwd_Timer3@limit:	; 2 bytes @ 0x6
  2013  000007                     	ds   2
  2014  000007                     ??i2_pwd_Timer3:	; 1 bytes @ 0x8
  2015  000009                     	ds   1
  2016  000009                     ??_highIsr:	; 1 bytes @ 0x9
  2017  00000A                     	ds   20
  2018  00000A                     ??_isdigit:	; 1 bytes @ 0x1D
  2019  00001E                     ??_init_adc_no_lib:	; 1 bytes @ 0x1D
  2020  00001E                     ??_init_pwm1:	; 1 bytes @ 0x1D
  2021  00001E                     ?_delay_ms:	; 1 bytes @ 0x1D
  2022  00001E                     ??_delay_cycles:	; 1 bytes @ 0x1D
  2023  00001E                     ??_initTimers01:	; 1 bytes @ 0x1D
  2024  00001E                     ??_reloadTimer3:	; 1 bytes @ 0x1D
  2025  00001E                     ??_initialization:	; 1 bytes @ 0x1D
  2026  00001E                     ??_setupPorts:	; 1 bytes @ 0x1D
  2027  00001E                     	global	?_read_adc_raw_no_lib
  2028                           ?_read_adc_raw_no_lib:	; 2 bytes @ 0x1D
  2029  00001E                     	global	?___wmul
  2030                           ?___wmul:	; 2 bytes @ 0x1D
  2031  00001E                     	global	?___awmod
  2032                           ?___awmod:	; 2 bytes @ 0x1D
  2033  00001E                     	global	?__tdiv_to_l_
  2034                           ?__tdiv_to_l_:	; 4 bytes @ 0x1D
  2035  00001E                     	global	?__div_to_l_
  2036                           ?__div_to_l_:	; 4 bytes @ 0x1D
  2037  00001E                     	global	?___lldiv
  2038                           ?___lldiv:	; 4 bytes @ 0x1D
  2039  00001E                     	global	delay_ms@n
  2040                           delay_ms@n:	; 2 bytes @ 0x1D
  2041  00001E                     	global	___wmul@multiplier
  2042                           ___wmul@multiplier:	; 2 bytes @ 0x1D
  2043  00001E                     	global	___awmod@dividend
  2044                           ___awmod@dividend:	; 2 bytes @ 0x1D
  2045  00001E                     	global	__div_to_l_@f1
  2046                           __div_to_l_@f1:	; 4 bytes @ 0x1D
  2047  00001E                     	global	__tdiv_to_l_@f1
  2048                           __tdiv_to_l_@f1:	; 4 bytes @ 0x1D
  2049  00001E                     	global	___lldiv@dividend
  2050                           ___lldiv@dividend:	; 4 bytes @ 0x1D
  2051  00001E                     	ds   1
  2052  00001E                     	global	_isdigit$1331
  2053                           _isdigit$1331:	; 1 bytes @ 0x1E
  2054  00001F                     	ds   1
  2055  00001F                     ??_read_adc_raw_no_lib:	; 1 bytes @ 0x1F
  2056  000020                     ??_delay_ms:	; 1 bytes @ 0x1F
  2057  000020                     	global	isdigit@c
  2058                           isdigit@c:	; 1 bytes @ 0x1F
  2059  000020                     	global	delay_ms@x
  2060                           delay_ms@x:	; 2 bytes @ 0x1F
  2061  000020                     	global	___wmul@multiplicand
  2062                           ___wmul@multiplicand:	; 2 bytes @ 0x1F
  2063  000020                     	global	___awmod@divisor
  2064                           ___awmod@divisor:	; 2 bytes @ 0x1F
  2065  000020                     	ds   1
  2066  000020                     	global	delay_cycles@n
  2067                           delay_cycles@n:	; 1 bytes @ 0x20
  2068  000021                     	ds   1
  2069  000021                     ??___wmul:	; 1 bytes @ 0x21
  2070  000022                     ??___awmod:	; 1 bytes @ 0x21
  2071  000022                     	global	___awmod@counter
  2072                           ___awmod@counter:	; 1 bytes @ 0x21
  2073  000022                     	global	read_adc_raw_no_lib@raw_value
  2074                           read_adc_raw_no_lib@raw_value:	; 2 bytes @ 0x21
  2075  000022                     	global	delay_cycles@x
  2076                           delay_cycles@x:	; 2 bytes @ 0x21
  2077  000022                     	global	___wmul@product
  2078                           ___wmul@product:	; 2 bytes @ 0x21
  2079  000022                     	global	__div_to_l_@f2
  2080                           __div_to_l_@f2:	; 4 bytes @ 0x21
  2081  000022                     	global	__tdiv_to_l_@f2
  2082                           __tdiv_to_l_@f2:	; 4 bytes @ 0x21
  2083  000022                     	global	___lldiv@divisor
  2084                           ___lldiv@divisor:	; 4 bytes @ 0x21
  2085  000022                     	ds   1
  2086  000022                     	global	___awmod@sign
  2087                           ___awmod@sign:	; 1 bytes @ 0x22
  2088  000023                     	ds   1
  2089  000023                     ?_pwd_Timer3:	; 1 bytes @ 0x23
  2090  000024                     ??_lcd_send_nibble:	; 1 bytes @ 0x23
  2091  000024                     	global	?___awdiv
  2092                           ?___awdiv:	; 2 bytes @ 0x23
  2093  000024                     	global	?___xxtofl
  2094                           ?___xxtofl:	; 4 bytes @ 0x23
  2095  000024                     	global	read_adc_raw_no_lib@channel
  2096                           read_adc_raw_no_lib@channel:	; 1 bytes @ 0x23
  2097  000024                     	global	pwd_Timer3@limit
  2098                           pwd_Timer3@limit:	; 2 bytes @ 0x23
  2099  000024                     	global	___awdiv@dividend
  2100                           ___awdiv@dividend:	; 2 bytes @ 0x23
  2101  000024                     	global	___xxtofl@val
  2102                           ___xxtofl@val:	; 4 bytes @ 0x23
  2103  000024                     	ds   1
  2104  000024                     	global	lcd_send_nibble@n
  2105                           lcd_send_nibble@n:	; 1 bytes @ 0x24
  2106  000025                     	ds   1
  2107  000025                     ??_pwd_Timer3:	; 1 bytes @ 0x25
  2108  000026                     ??__tdiv_to_l_:	; 1 bytes @ 0x25
  2109  000026                     ??__div_to_l_:	; 1 bytes @ 0x25
  2110  000026                     ?_lcd_send_byte:	; 1 bytes @ 0x25
  2111  000026                     ??___lldiv:	; 1 bytes @ 0x25
  2112  000026                     	global	lcd_send_byte@n
  2113                           lcd_send_byte@n:	; 1 bytes @ 0x25
  2114  000026                     	global	___awdiv@divisor
  2115                           ___awdiv@divisor:	; 2 bytes @ 0x25
  2116  000026                     	global	__div_to_l_@quot
  2117                           __div_to_l_@quot:	; 4 bytes @ 0x25
  2118  000026                     	global	___lldiv@quotient
  2119                           ___lldiv@quotient:	; 4 bytes @ 0x25
  2120  000026                     	ds   1
  2121  000026                     ??_lcd_send_byte:	; 1 bytes @ 0x26
  2122  000027                     	global	lcd_send_byte@cm_data
  2123                           lcd_send_byte@cm_data:	; 1 bytes @ 0x26
  2124  000027                     	ds   1
  2125  000027                     ??_lcd_init:	; 1 bytes @ 0x27
  2126  000028                     ?_lcd_gotoxy:	; 1 bytes @ 0x27
  2127  000028                     ??___awdiv:	; 1 bytes @ 0x27
  2128  000028                     ??___xxtofl:	; 1 bytes @ 0x27
  2129  000028                     	global	lcd_init@i
  2130                           lcd_init@i:	; 1 bytes @ 0x27
  2131  000028                     	global	lcd_gotoxy@y
  2132                           lcd_gotoxy@y:	; 1 bytes @ 0x27
  2133  000028                     	global	___awdiv@counter
  2134                           ___awdiv@counter:	; 1 bytes @ 0x27
  2135  000028                     	ds   1
  2136  000028                     ??_lcd_gotoxy:	; 1 bytes @ 0x28
  2137  000029                     	global	lcd_gotoxy@x
  2138                           lcd_gotoxy@x:	; 1 bytes @ 0x28
  2139  000029                     	global	___awdiv@sign
  2140                           ___awdiv@sign:	; 1 bytes @ 0x28
  2141  000029                     	global	__tdiv_to_l_@quot
  2142                           __tdiv_to_l_@quot:	; 4 bytes @ 0x28
  2143  000029                     	ds   1
  2144  000029                     	global	lcd_gotoxy@address
  2145                           lcd_gotoxy@address:	; 1 bytes @ 0x29
  2146  00002A                     	global	__div_to_l_@cntr
  2147                           __div_to_l_@cntr:	; 1 bytes @ 0x29
  2148  00002A                     	global	___lldiv@counter
  2149                           ___lldiv@counter:	; 1 bytes @ 0x29
  2150  00002A                     	global	___awdiv@quotient
  2151                           ___awdiv@quotient:	; 2 bytes @ 0x29
  2152  00002A                     	ds   1
  2153  00002A                     ??_lcd_putc:	; 1 bytes @ 0x2A
  2154  00002B                     	global	?___llmod
  2155                           ?___llmod:	; 4 bytes @ 0x2A
  2156  00002B                     	global	lcd_putc@c
  2157                           lcd_putc@c:	; 1 bytes @ 0x2A
  2158  00002B                     	global	__div_to_l_@exp1
  2159                           __div_to_l_@exp1:	; 1 bytes @ 0x2A
  2160  00002B                     	global	___llmod@dividend
  2161                           ___llmod@dividend:	; 4 bytes @ 0x2A
  2162  00002B                     	ds   1
  2163  00002B                     ?_set_pwm1_raw:	; 1 bytes @ 0x2B
  2164  00002C                     ?_lcd_puts:	; 1 bytes @ 0x2B
  2165  00002C                     	global	?___flmul
  2166                           ?___flmul:	; 4 bytes @ 0x2B
  2167  00002C                     	global	___xxtofl@sign
  2168                           ___xxtofl@sign:	; 1 bytes @ 0x2B
  2169  00002C                     	global	set_pwm1_raw@raw_value
  2170                           set_pwm1_raw@raw_value:	; 2 bytes @ 0x2B
  2171  00002C                     	global	lcd_puts@s
  2172                           lcd_puts@s:	; 2 bytes @ 0x2B
  2173  00002C                     	global	___flmul@b
  2174                           ___flmul@b:	; 4 bytes @ 0x2B
  2175  00002C                     	ds   1
  2176  00002C                     	global	__tdiv_to_l_@cntr
  2177                           __tdiv_to_l_@cntr:	; 1 bytes @ 0x2C
  2178  00002D                     	global	___xxtofl@exp
  2179                           ___xxtofl@exp:	; 1 bytes @ 0x2C
  2180  00002D                     	ds   1
  2181  00002D                     ??_set_pwm1_raw:	; 1 bytes @ 0x2D
  2182  00002E                     ??_lcd_puts:	; 1 bytes @ 0x2D
  2183  00002E                     	global	__tdiv_to_l_@exp1
  2184                           __tdiv_to_l_@exp1:	; 1 bytes @ 0x2D
  2185  00002E                     	global	___xxtofl@arg
  2186                           ___xxtofl@arg:	; 4 bytes @ 0x2D
  2187  00002E                     	ds   1
  2188  00002E                     	global	___llmod@divisor
  2189                           ___llmod@divisor:	; 4 bytes @ 0x2E
  2190  00002F                     	ds   1
  2191  00002F                     	global	___flmul@a
  2192                           ___flmul@a:	; 4 bytes @ 0x2F
  2193  000030                     	ds   2
  2194  000030                     	global	?___flneg
  2195                           ?___flneg:	; 4 bytes @ 0x31
  2196  000032                     	global	___flneg@f1
  2197                           ___flneg@f1:	; 4 bytes @ 0x31
  2198  000032                     	ds   1
  2199  000032                     ??___llmod:	; 1 bytes @ 0x32
  2200  000033                     	global	___llmod@counter
  2201                           ___llmod@counter:	; 1 bytes @ 0x32
  2202  000033                     	ds   1
  2203  000033                     ??___flmul:	; 1 bytes @ 0x33
  2204  000034                     	ds   2
  2205  000034                     ??___flneg:	; 1 bytes @ 0x35
  2206  000036                     	ds   2
  2207  000036                     	global	___flmul@sign
  2208                           ___flmul@sign:	; 1 bytes @ 0x37
  2209  000038                     	ds   1
  2210  000038                     	global	___flmul@grs
  2211                           ___flmul@grs:	; 4 bytes @ 0x38
  2212  000039                     	ds   4
  2213  000039                     	global	___flmul@aexp
  2214                           ___flmul@aexp:	; 1 bytes @ 0x3C
  2215  00003D                     	ds   1
  2216  00003D                     	global	___flmul@bexp
  2217                           ___flmul@bexp:	; 1 bytes @ 0x3D
  2218  00003E                     	ds   1
  2219  00003E                     	global	___flmul@prod
  2220                           ___flmul@prod:	; 4 bytes @ 0x3E
  2221  00003F                     	ds   4
  2222  00003F                     	global	___flmul@temp
  2223                           ___flmul@temp:	; 2 bytes @ 0x42
  2224  000043                     	ds   2
  2225  000043                     	global	?___fldiv
  2226                           ?___fldiv:	; 4 bytes @ 0x44
  2227  000045                     	global	?_fround
  2228                           ?_fround:	; 4 bytes @ 0x44
  2229  000045                     	global	?_scale
  2230                           ?_scale:	; 4 bytes @ 0x44
  2231  000045                     	global	___fldiv@b
  2232                           ___fldiv@b:	; 4 bytes @ 0x44
  2233  000045                     	ds   4
  2234  000045                     ??_fround:	; 1 bytes @ 0x48
  2235  000049                     ??_scale:	; 1 bytes @ 0x48
  2236  000049                     	global	___fldiv@a
  2237                           ___fldiv@a:	; 4 bytes @ 0x48
  2238  000049                     	global	_fround$1714
  2239                           _fround$1714:	; 4 bytes @ 0x48
  2240  000049                     	global	_scale$1715
  2241                           _scale$1715:	; 4 bytes @ 0x48
  2242  000049                     	ds   4
  2243  000049                     ??___fldiv:	; 1 bytes @ 0x4C
  2244  00004D                     	global	scale@scl
  2245                           scale@scl:	; 1 bytes @ 0x4C
  2246  00004D                     	global	_fround$1713
  2247                           _fround$1713:	; 4 bytes @ 0x4C
  2248  00004D                     	ds   4
  2249  00004D                     ??_read_adc_voltage:	; 1 bytes @ 0x50
  2250  000051                     	global	fround@prec
  2251                           fround@prec:	; 1 bytes @ 0x50
  2252  000051                     	ds   1
  2253  000051                     ??___flsub:	; 1 bytes @ 0x51
  2254  000052                     	global	___fltol@sign1
  2255                           ___fltol@sign1:	; 1 bytes @ 0x51
  2256  000052                     	ds   1
  2257  000052                     	global	___fltol@exp1
  2258                           ___fltol@exp1:	; 1 bytes @ 0x52
  2259  000053                     	ds   1
  2260  000053                     ??_set_pwm1_percent:	; 1 bytes @ 0x53
  2261  000054                     ;!
  2262                           ;!Data Sizes:
  2263                           ;!    Strings     147
  2264                           ;!    Constant    144
  2265                           ;!    Data        5
  2266                           ;!    BSS         25
  2267                           ;!    Persistent  0
  2268                           ;!    Stack       0
  2269                           ;!
  2270                           ;!Auto Spaces:
  2271                           ;!    Space          Size  Autos    Used
  2272                           ;!    COMRAM          126     83      97
  2273                           ;!    BANK0           128     73      73
  2274                           ;!    BANK1           256     79      95
  2275                           ;!    BANK2           256      0       0
  2276                           ;!    BANK3           256      0       0
  2277                           ;!    BANK4           256      0       0
  2278                           ;!    BANK5           256      0       0
  2279                           ;!    BANK6           256      0       0
  2280                           ;!    BANK7           256      0       0
  2281                           ;!    BANK8           256      0       0
  2282                           ;!    BANK9           256      0       0
  2283                           ;!    BANK10          256      0       0
  2284                           ;!    BANK11          256      0       0
  2285                           ;!    BANK12          256      0       0
  2286                           ;!    BANK13          256      0       0
  2287                           ;!    BANK14          256      0       0
  2288                           ;!    BANK15          128      0       0
  2289                           
  2290                           ;!
  2291                           ;!Pointer List with Targets:
  2292                           ;!
  2293                           ;!    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
  2294                           ;!		 -> STR_14(CODE[12]), STR_13(CODE[11]), STR_12(CODE[7]), STR_11(CODE[11]), 
  2295                           ;!		 -> STR_10(CODE[12]), STR_9(CODE[11]), STR_8(CODE[8]), STR_7(CODE[16]), 
  2296                           ;!		 -> STR_6(CODE[7]), STR_5(CODE[16]), STR_4(CODE[7]), STR_3(CODE[13]), 
  2297                           ;!		 -> STR_2(CODE[16]), STR_1(CODE[19]), 
  2298                           ;!
  2299                           ;!    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
  2300                           ;!		 -> main@Buffer(BANK1[32]), 
  2301                           ;!
  2302                           ;!    sprintf@ap	PTR void [1] size(2) Largest target is 2
  2303                           ;!		 -> ?_sprintf(BANK0[2]), 
  2304                           ;!
  2305                           ;!    lcd_puts@s	PTR unsigned char  size(2) Largest target is 32
  2306                           ;!		 -> main@Buffer(BANK1[32]), 
  2307                           ;!
  2308                           
  2309                           
  2310                           ;!
  2311                           ;!Critical Paths under _main in COMRAM
  2312                           ;!
  2313                           ;!    _main->___fltol
  2314                           ;!    _sprintf->___fltol
  2315                           ;!    _scale->___flmul
  2316                           ;!    _fround->___flmul
  2317                           ;!    ___awdiv->___awmod
  2318                           ;!    ___awdiv->___wmul
  2319                           ;!    ___llmod->___lldiv
  2320                           ;!    ___flneg->___xxtofl
  2321                           ;!    _set_pwm1_percent->___fltol
  2322                           ;!    _set_pwm1_raw->___awdiv
  2323                           ;!    ___flmul->___awdiv
  2324                           ;!    ___fladd->_fround
  2325                           ;!    _read_adc_voltage->___fldiv
  2326                           ;!    ___xxtofl->___wmul
  2327                           ;!    ___fldiv->___flmul
  2328                           ;!    _pwd_Timer3->___awmod
  2329                           ;!    _lcd_puts->_lcd_putc
  2330                           ;!    _lcd_putc->_lcd_gotoxy
  2331                           ;!    _lcd_gotoxy->_lcd_send_byte
  2332                           ;!    _lcd_init->_lcd_send_byte
  2333                           ;!    _lcd_send_byte->_lcd_send_nibble
  2334                           ;!    _lcd_send_nibble->_delay_cycles
  2335                           ;!
  2336                           ;!Critical Paths under _highIsr in COMRAM
  2337                           ;!
  2338                           ;!    _highIsr->i2_pwd_Timer3
  2339                           ;!    i2_pwd_Timer3->i2___awmod
  2340                           ;!
  2341                           ;!Critical Paths under _main in BANK0
  2342                           ;!
  2343                           ;!    _main->_sprintf
  2344                           ;!    _sprintf->___flge
  2345                           ;!    ___flsub->___fladd
  2346                           ;!    ___flge->___fladd
  2347                           ;!    _set_pwm1_percent->___fltol
  2348                           ;!    ___fltol->___fladd
  2349                           ;!    _read_adc_voltage->___fldiv
  2350                           ;!
  2351                           ;!Critical Paths under _highIsr in BANK0
  2352                           ;!
  2353                           ;!    None.
  2354                           ;!
  2355                           ;!Critical Paths under _main in BANK1
  2356                           ;!
  2357                           ;!    None.
  2358                           ;!
  2359                           ;!Critical Paths under _highIsr in BANK1
  2360                           ;!
  2361                           ;!    None.
  2362                           ;!
  2363                           ;!Critical Paths under _main in BANK2
  2364                           ;!
  2365                           ;!    None.
  2366                           ;!
  2367                           ;!Critical Paths under _highIsr in BANK2
  2368                           ;!
  2369                           ;!    None.
  2370                           ;!
  2371                           ;!Critical Paths under _main in BANK3
  2372                           ;!
  2373                           ;!    None.
  2374                           ;!
  2375                           ;!Critical Paths under _highIsr in BANK3
  2376                           ;!
  2377                           ;!    None.
  2378                           ;!
  2379                           ;!Critical Paths under _main in BANK4
  2380                           ;!
  2381                           ;!    None.
  2382                           ;!
  2383                           ;!Critical Paths under _highIsr in BANK4
  2384                           ;!
  2385                           ;!    None.
  2386                           ;!
  2387                           ;!Critical Paths under _main in BANK5
  2388                           ;!
  2389                           ;!    None.
  2390                           ;!
  2391                           ;!Critical Paths under _highIsr in BANK5
  2392                           ;!
  2393                           ;!    None.
  2394                           ;!
  2395                           ;!Critical Paths under _main in BANK6
  2396                           ;!
  2397                           ;!    None.
  2398                           ;!
  2399                           ;!Critical Paths under _highIsr in BANK6
  2400                           ;!
  2401                           ;!    None.
  2402                           ;!
  2403                           ;!Critical Paths under _main in BANK7
  2404                           ;!
  2405                           ;!    None.
  2406                           ;!
  2407                           ;!Critical Paths under _highIsr in BANK7
  2408                           ;!
  2409                           ;!    None.
  2410                           ;!
  2411                           ;!Critical Paths under _main in BANK8
  2412                           ;!
  2413                           ;!    None.
  2414                           ;!
  2415                           ;!Critical Paths under _highIsr in BANK8
  2416                           ;!
  2417                           ;!    None.
  2418                           ;!
  2419                           ;!Critical Paths under _main in BANK9
  2420                           ;!
  2421                           ;!    None.
  2422                           ;!
  2423                           ;!Critical Paths under _highIsr in BANK9
  2424                           ;!
  2425                           ;!    None.
  2426                           ;!
  2427                           ;!Critical Paths under _main in BANK10
  2428                           ;!
  2429                           ;!    None.
  2430                           ;!
  2431                           ;!Critical Paths under _highIsr in BANK10
  2432                           ;!
  2433                           ;!    None.
  2434                           ;!
  2435                           ;!Critical Paths under _main in BANK11
  2436                           ;!
  2437                           ;!    None.
  2438                           ;!
  2439                           ;!Critical Paths under _highIsr in BANK11
  2440                           ;!
  2441                           ;!    None.
  2442                           ;!
  2443                           ;!Critical Paths under _main in BANK12
  2444                           ;!
  2445                           ;!    None.
  2446                           ;!
  2447                           ;!Critical Paths under _highIsr in BANK12
  2448                           ;!
  2449                           ;!    None.
  2450                           ;!
  2451                           ;!Critical Paths under _main in BANK13
  2452                           ;!
  2453                           ;!    None.
  2454                           ;!
  2455                           ;!Critical Paths under _highIsr in BANK13
  2456                           ;!
  2457                           ;!    None.
  2458                           ;!
  2459                           ;!Critical Paths under _main in BANK14
  2460                           ;!
  2461                           ;!    None.
  2462                           ;!
  2463                           ;!Critical Paths under _highIsr in BANK14
  2464                           ;!
  2465                           ;!    None.
  2466                           ;!
  2467                           ;!Critical Paths under _main in BANK15
  2468                           ;!
  2469                           ;!    None.
  2470                           ;!
  2471                           ;!Critical Paths under _highIsr in BANK15
  2472                           ;!
  2473                           ;!    None.
  2474                           
  2475 ;;
  2476 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  2477 ;;
  2478                           
  2479                           ;!
  2480                           ;!Call Graph Tables:
  2481                           ;!
  2482                           ;! ---------------------------------------------------------------------------------
  2483                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2484                           ;! ---------------------------------------------------------------------------------
  2485                           ;! (0) _main                                                81    81      0  114817
  2486                           ;!                                             71 BANK0      2     2      0
  2487                           ;!                                              0 BANK1     79    79      0
  2488                           ;!                            ___awdiv
  2489                           ;!                            ___fladd
  2490                           ;!                            ___fldiv
  2491                           ;!                             ___flge
  2492                           ;!                            ___flmul
  2493                           ;!                            ___flneg
  2494                           ;!                            ___fltol
  2495                           ;!                             ___wmul
  2496                           ;!                           ___xxtofl
  2497                           ;!                       _initTimers01
  2498                           ;!                    _init_adc_no_lib
  2499                           ;!                          _init_pwm1
  2500                           ;!                     _initialization
  2501                           ;!                         _lcd_gotoxy
  2502                           ;!                           _lcd_init
  2503                           ;!                           _lcd_putc
  2504                           ;!                           _lcd_puts
  2505                           ;!                         _pwd_Timer3
  2506                           ;!                   _read_adc_voltage
  2507                           ;!                       _reloadTimer3
  2508                           ;!                   _set_pwm1_percent
  2509                           ;!                       _set_pwm1_raw
  2510                           ;!                         _setupPorts
  2511                           ;!                            _sprintf
  2512                           ;! ---------------------------------------------------------------------------------
  2513                           ;! (1) _sprintf                                             45    37      8   52852
  2514                           ;!                                             32 BANK0     39    31      8
  2515                           ;!                            ___awdiv
  2516                           ;!                            ___fladd
  2517                           ;!                            ___fldiv (ARG)
  2518                           ;!                             ___flge
  2519                           ;!                            ___flmul
  2520                           ;!                            ___flneg
  2521                           ;!                            ___flsub
  2522                           ;!                            ___fltol
  2523                           ;!                            ___lldiv
  2524                           ;!                            ___llmod
  2525                           ;!                             ___wmul
  2526                           ;!                           ___xxtofl
  2527                           ;!                         __div_to_l_
  2528                           ;!                        __tdiv_to_l_
  2529                           ;!                             _fround
  2530                           ;!                            _isdigit
  2531                           ;!                              _scale
  2532                           ;! ---------------------------------------------------------------------------------
  2533                           ;! (2) _scale                                                9     5      4    9867
  2534                           ;!                                             68 COMRAM     9     5      4
  2535                           ;!                            ___awdiv
  2536                           ;!                            ___awmod
  2537                           ;!                            ___flmul
  2538                           ;! ---------------------------------------------------------------------------------
  2539                           ;! (2) _isdigit                                              3     3      0      68
  2540                           ;!                                             29 COMRAM     3     3      0
  2541                           ;! ---------------------------------------------------------------------------------
  2542                           ;! (2) _fround                                              13     9      4    9669
  2543                           ;!                                             68 COMRAM    13     9      4
  2544                           ;!                            ___awdiv
  2545                           ;!                            ___awmod
  2546                           ;!                            ___flmul
  2547                           ;! ---------------------------------------------------------------------------------
  2548                           ;! (3) ___awdiv                                              8     4      4    2124
  2549                           ;!                                             35 COMRAM     8     4      4
  2550                           ;!                            ___awmod (ARG)
  2551                           ;!                             ___wmul (ARG)
  2552                           ;! ---------------------------------------------------------------------------------
  2553                           ;! (2) __tdiv_to_l_                                         17     9      8     455
  2554                           ;!                                             29 COMRAM    17     9      8
  2555                           ;! ---------------------------------------------------------------------------------
  2556                           ;! (2) __div_to_l_                                          14     6      8     455
  2557                           ;!                                             29 COMRAM    14     6      8
  2558                           ;! ---------------------------------------------------------------------------------
  2559                           ;! (2) ___llmod                                              9     1      8     767
  2560                           ;!                                             42 COMRAM     9     1      8
  2561                           ;!                            ___lldiv (ARG)
  2562                           ;! ---------------------------------------------------------------------------------
  2563                           ;! (2) ___lldiv                                             13     5      8     618
  2564                           ;!                                             29 COMRAM    13     5      8
  2565                           ;! ---------------------------------------------------------------------------------
  2566                           ;! (2) ___flsub                                              8     0      8    5807
  2567                           ;!                                             20 BANK0      8     0      8
  2568                           ;!                            ___fladd
  2569                           ;!                           ___xxtofl (ARG)
  2570                           ;! ---------------------------------------------------------------------------------
  2571                           ;! (2) ___flneg                                              4     0      4     653
  2572                           ;!                                             49 COMRAM     4     0      4
  2573                           ;!                           ___xxtofl (ARG)
  2574                           ;! ---------------------------------------------------------------------------------
  2575                           ;! (2) ___flge                                              12     4      8    1550
  2576                           ;!                                             20 BANK0     12     4      8
  2577                           ;!                            ___fladd (ARG)
  2578                           ;!                            ___flneg (ARG)
  2579                           ;!                           ___xxtofl (ARG)
  2580                           ;! ---------------------------------------------------------------------------------
  2581                           ;! (1) _setupPorts                                           0     0      0       0
  2582                           ;! ---------------------------------------------------------------------------------
  2583                           ;! (1) _set_pwm1_percent                                    10     6      4   16095
  2584                           ;!                                             28 BANK0     10     6      4
  2585                           ;!                            ___fladd
  2586                           ;!                            ___fldiv
  2587                           ;!                            ___flmul
  2588                           ;!                            ___fltol
  2589                           ;!                           ___xxtofl (ARG)
  2590                           ;!                       _set_pwm1_raw
  2591                           ;! ---------------------------------------------------------------------------------
  2592                           ;! (1) _set_pwm1_raw                                         4     2      2     424
  2593                           ;!                                             43 COMRAM     4     2      2
  2594                           ;!                            ___awdiv (ARG)
  2595                           ;!                             ___wmul (ARG)
  2596                           ;! ---------------------------------------------------------------------------------
  2597                           ;! (2) ___fltol                                             10     6      4    1327
  2598                           ;!                                             81 COMRAM     2     2      0
  2599                           ;!                                             20 BANK0      8     4      4
  2600                           ;!                            ___fladd (ARG)
  2601                           ;!                            ___fldiv (ARG)
  2602                           ;!                            ___flmul (ARG)
  2603                           ;!                            ___flneg (ARG)
  2604                           ;!                              _scale (ARG)
  2605                           ;! ---------------------------------------------------------------------------------
  2606                           ;! (3) ___flmul                                             25    17      8    4784
  2607                           ;!                                             43 COMRAM    25    17      8
  2608                           ;!                            ___awdiv (ARG)
  2609                           ;!                            ___awmod (ARG)
  2610                           ;! ---------------------------------------------------------------------------------
  2611                           ;! (3) ___fladd                                             20    12      8    5422
  2612                           ;!                                              0 BANK0     20    12      8
  2613                           ;!                            ___flneg (ARG)
  2614                           ;!                           ___xxtofl (ARG)
  2615                           ;!                             _fround (ARG)
  2616                           ;! ---------------------------------------------------------------------------------
  2617                           ;! (1) _reloadTimer3                                         0     0      0       0
  2618                           ;! ---------------------------------------------------------------------------------
  2619                           ;! (1) _read_adc_voltage                                    11     7      4    5796
  2620                           ;!                                             13 BANK0     11     7      4
  2621                           ;!                            ___fldiv
  2622                           ;!                             ___wmul
  2623                           ;!                           ___xxtofl
  2624                           ;!                _read_adc_raw_no_lib
  2625                           ;! ---------------------------------------------------------------------------------
  2626                           ;! (2) _read_adc_raw_no_lib                                  7     5      2      45
  2627                           ;!                                             29 COMRAM     7     5      2
  2628                           ;! ---------------------------------------------------------------------------------
  2629                           ;! (2) ___xxtofl                                            14    10      4     930
  2630                           ;!                                             35 COMRAM    14    10      4
  2631                           ;!                             ___wmul (ARG)
  2632                           ;! ---------------------------------------------------------------------------------
  2633                           ;! (2) ___wmul                                               6     2      4    1527
  2634                           ;!                                             29 COMRAM     6     2      4
  2635                           ;! ---------------------------------------------------------------------------------
  2636                           ;! (2) ___fldiv                                             25    17      8    3195
  2637                           ;!                                             68 COMRAM    12     4      8
  2638                           ;!                                              0 BANK0     13    13      0
  2639                           ;!                            ___flmul (ARG)
  2640                           ;!                             ___wmul (ARG)
  2641                           ;!                           ___xxtofl (ARG)
  2642                           ;! ---------------------------------------------------------------------------------
  2643                           ;! (1) _pwd_Timer3                                           3     1      2    3088
  2644                           ;!                                             35 COMRAM     3     1      2
  2645                           ;!                            ___awmod
  2646                           ;! ---------------------------------------------------------------------------------
  2647                           ;! (3) ___awmod                                              6     2      4    2516
  2648                           ;!                                             29 COMRAM     6     2      4
  2649                           ;! ---------------------------------------------------------------------------------
  2650                           ;! (1) _lcd_puts                                             2     0      2    5034
  2651                           ;!                                             43 COMRAM     2     0      2
  2652                           ;!                           _lcd_putc
  2653                           ;! ---------------------------------------------------------------------------------
  2654                           ;! (2) _lcd_putc                                             1     1      0    3925
  2655                           ;!                                             42 COMRAM     1     1      0
  2656                           ;!                           _delay_ms
  2657                           ;!                         _lcd_gotoxy
  2658                           ;!                      _lcd_send_byte
  2659                           ;! ---------------------------------------------------------------------------------
  2660                           ;! (3) _lcd_gotoxy                                           3     2      1    2447
  2661                           ;!                                             39 COMRAM     3     2      1
  2662                           ;!                      _lcd_send_byte
  2663                           ;! ---------------------------------------------------------------------------------
  2664                           ;! (1) _lcd_init                                             1     1      0    1616
  2665                           ;!                                             39 COMRAM     1     1      0
  2666                           ;!                           _delay_ms
  2667                           ;!                      _lcd_send_byte
  2668                           ;!                    _lcd_send_nibble
  2669                           ;! ---------------------------------------------------------------------------------
  2670                           ;! (3) _lcd_send_byte                                        2     1      1    1084
  2671                           ;!                                             37 COMRAM     2     1      1
  2672                           ;!                       _delay_cycles
  2673                           ;!                           _delay_ms
  2674                           ;!                    _lcd_send_nibble
  2675                           ;! ---------------------------------------------------------------------------------
  2676                           ;! (4) _lcd_send_nibble                                      2     2      0      68
  2677                           ;!                                             35 COMRAM     2     2      0
  2678                           ;!                       _delay_cycles
  2679                           ;! ---------------------------------------------------------------------------------
  2680                           ;! (5) _delay_cycles                                         6     6      0      46
  2681                           ;!                                             29 COMRAM     6     6      0
  2682                           ;! ---------------------------------------------------------------------------------
  2683                           ;! (4) _delay_ms                                             4     2      2     350
  2684                           ;!                                             29 COMRAM     4     2      2
  2685                           ;! ---------------------------------------------------------------------------------
  2686                           ;! (1) _initialization                                       0     0      0       0
  2687                           ;! ---------------------------------------------------------------------------------
  2688                           ;! (1) _init_pwm1                                            0     0      0       0
  2689                           ;! ---------------------------------------------------------------------------------
  2690                           ;! (1) _init_adc_no_lib                                      0     0      0       0
  2691                           ;! ---------------------------------------------------------------------------------
  2692                           ;! (1) _initTimers01                                         0     0      0       0
  2693                           ;! ---------------------------------------------------------------------------------
  2694                           ;! Estimated maximum stack depth 5
  2695                           ;! ---------------------------------------------------------------------------------
  2696                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2697                           ;! ---------------------------------------------------------------------------------
  2698                           ;! (7) _highIsr                                             20    20      0    1516
  2699                           ;!                                              9 COMRAM    20    20      0
  2700                           ;!                          i2___awmod
  2701                           ;!                       i2_pwd_Timer3
  2702                           ;!                     i2_reloadTimer3
  2703                           ;! ---------------------------------------------------------------------------------
  2704                           ;! (8) i2_reloadTimer3                                       0     0      0       0
  2705                           ;! ---------------------------------------------------------------------------------
  2706                           ;! (8) i2_pwd_Timer3                                         3     1      2     804
  2707                           ;!                                              6 COMRAM     3     1      2
  2708                           ;!                          i2___awmod
  2709                           ;! ---------------------------------------------------------------------------------
  2710                           ;! (9) i2___awmod                                            6     2      4     712
  2711                           ;!                                              0 COMRAM     6     2      4
  2712                           ;! ---------------------------------------------------------------------------------
  2713                           ;! Estimated maximum stack depth 9
  2714                           ;! ---------------------------------------------------------------------------------
  2715                           ;!
  2716                           ;! Call Graph Graphs:
  2717                           ;!
  2718                           ;! _main (ROOT)
  2719                           ;!   ___awdiv
  2720                           ;!     ___awmod (ARG)
  2721                           ;!     ___wmul (ARG)
  2722                           ;!   ___fladd
  2723                           ;!     ___flneg (ARG)
  2724                           ;!       ___xxtofl (ARG)
  2725                           ;!         ___wmul (ARG)
  2726                           ;!     ___xxtofl (ARG)
  2727                           ;!       ___wmul (ARG)
  2728                           ;!     _fround (ARG)
  2729                           ;!       ___awdiv
  2730                           ;!         ___awmod (ARG)
  2731                           ;!         ___wmul (ARG)
  2732                           ;!       ___awmod
  2733                           ;!       ___flmul
  2734                           ;!         ___awdiv (ARG)
  2735                           ;!           ___awmod (ARG)
  2736                           ;!           ___wmul (ARG)
  2737                           ;!         ___awmod (ARG)
  2738                           ;!   ___fldiv
  2739                           ;!     ___flmul (ARG)
  2740                           ;!       ___awdiv (ARG)
  2741                           ;!         ___awmod (ARG)
  2742                           ;!         ___wmul (ARG)
  2743                           ;!       ___awmod (ARG)
  2744                           ;!     ___wmul (ARG)
  2745                           ;!     ___xxtofl (ARG)
  2746                           ;!       ___wmul (ARG)
  2747                           ;!   ___flge
  2748                           ;!     ___fladd (ARG)
  2749                           ;!       ___flneg (ARG)
  2750                           ;!         ___xxtofl (ARG)
  2751                           ;!           ___wmul (ARG)
  2752                           ;!       ___xxtofl (ARG)
  2753                           ;!         ___wmul (ARG)
  2754                           ;!       _fround (ARG)
  2755                           ;!         ___awdiv
  2756                           ;!           ___awmod (ARG)
  2757                           ;!           ___wmul (ARG)
  2758                           ;!         ___awmod
  2759                           ;!         ___flmul
  2760                           ;!           ___awdiv (ARG)
  2761                           ;!             ___awmod (ARG)
  2762                           ;!             ___wmul (ARG)
  2763                           ;!           ___awmod (ARG)
  2764                           ;!     ___flneg (ARG)
  2765                           ;!       ___xxtofl (ARG)
  2766                           ;!         ___wmul (ARG)
  2767                           ;!     ___xxtofl (ARG)
  2768                           ;!       ___wmul (ARG)
  2769                           ;!   ___flmul
  2770                           ;!     ___awdiv (ARG)
  2771                           ;!       ___awmod (ARG)
  2772                           ;!       ___wmul (ARG)
  2773                           ;!     ___awmod (ARG)
  2774                           ;!   ___flneg
  2775                           ;!     ___xxtofl (ARG)
  2776                           ;!       ___wmul (ARG)
  2777                           ;!   ___fltol
  2778                           ;!     ___fladd (ARG)
  2779                           ;!       ___flneg (ARG)
  2780                           ;!         ___xxtofl (ARG)
  2781                           ;!           ___wmul (ARG)
  2782                           ;!       ___xxtofl (ARG)
  2783                           ;!         ___wmul (ARG)
  2784                           ;!       _fround (ARG)
  2785                           ;!         ___awdiv
  2786                           ;!           ___awmod (ARG)
  2787                           ;!           ___wmul (ARG)
  2788                           ;!         ___awmod
  2789                           ;!         ___flmul
  2790                           ;!           ___awdiv (ARG)
  2791                           ;!             ___awmod (ARG)
  2792                           ;!             ___wmul (ARG)
  2793                           ;!           ___awmod (ARG)
  2794                           ;!     ___fldiv (ARG)
  2795                           ;!       ___flmul (ARG)
  2796                           ;!         ___awdiv (ARG)
  2797                           ;!           ___awmod (ARG)
  2798                           ;!           ___wmul (ARG)
  2799                           ;!         ___awmod (ARG)
  2800                           ;!       ___wmul (ARG)
  2801                           ;!       ___xxtofl (ARG)
  2802                           ;!         ___wmul (ARG)
  2803                           ;!     ___flmul (ARG)
  2804                           ;!       ___awdiv (ARG)
  2805                           ;!         ___awmod (ARG)
  2806                           ;!         ___wmul (ARG)
  2807                           ;!       ___awmod (ARG)
  2808                           ;!     ___flneg (ARG)
  2809                           ;!       ___xxtofl (ARG)
  2810                           ;!         ___wmul (ARG)
  2811                           ;!     _scale (ARG)
  2812                           ;!       ___awdiv
  2813                           ;!         ___awmod (ARG)
  2814                           ;!         ___wmul (ARG)
  2815                           ;!       ___awmod
  2816                           ;!       ___flmul
  2817                           ;!         ___awdiv (ARG)
  2818                           ;!           ___awmod (ARG)
  2819                           ;!           ___wmul (ARG)
  2820                           ;!         ___awmod (ARG)
  2821                           ;!   ___wmul
  2822                           ;!   ___xxtofl
  2823                           ;!     ___wmul (ARG)
  2824                           ;!   _initTimers01
  2825                           ;!   _init_adc_no_lib
  2826                           ;!   _init_pwm1
  2827                           ;!   _initialization
  2828                           ;!   _lcd_gotoxy
  2829                           ;!     _lcd_send_byte
  2830                           ;!       _delay_cycles
  2831                           ;!       _delay_ms
  2832                           ;!       _lcd_send_nibble
  2833                           ;!         _delay_cycles
  2834                           ;!   _lcd_init
  2835                           ;!     _delay_ms
  2836                           ;!     _lcd_send_byte
  2837                           ;!       _delay_cycles
  2838                           ;!       _delay_ms
  2839                           ;!       _lcd_send_nibble
  2840                           ;!         _delay_cycles
  2841                           ;!     _lcd_send_nibble
  2842                           ;!       _delay_cycles
  2843                           ;!   _lcd_putc
  2844                           ;!     _delay_ms
  2845                           ;!     _lcd_gotoxy
  2846                           ;!       _lcd_send_byte
  2847                           ;!         _delay_cycles
  2848                           ;!         _delay_ms
  2849                           ;!         _lcd_send_nibble
  2850                           ;!           _delay_cycles
  2851                           ;!     _lcd_send_byte
  2852                           ;!       _delay_cycles
  2853                           ;!       _delay_ms
  2854                           ;!       _lcd_send_nibble
  2855                           ;!         _delay_cycles
  2856                           ;!   _lcd_puts
  2857                           ;!     _lcd_putc
  2858                           ;!       _delay_ms
  2859                           ;!       _lcd_gotoxy
  2860                           ;!         _lcd_send_byte
  2861                           ;!           _delay_cycles
  2862                           ;!           _delay_ms
  2863                           ;!           _lcd_send_nibble
  2864                           ;!             _delay_cycles
  2865                           ;!       _lcd_send_byte
  2866                           ;!         _delay_cycles
  2867                           ;!         _delay_ms
  2868                           ;!         _lcd_send_nibble
  2869                           ;!           _delay_cycles
  2870                           ;!   _pwd_Timer3
  2871                           ;!     ___awmod
  2872                           ;!   _read_adc_voltage
  2873                           ;!     ___fldiv
  2874                           ;!       ___flmul (ARG)
  2875                           ;!         ___awdiv (ARG)
  2876                           ;!           ___awmod (ARG)
  2877                           ;!           ___wmul (ARG)
  2878                           ;!         ___awmod (ARG)
  2879                           ;!       ___wmul (ARG)
  2880                           ;!       ___xxtofl (ARG)
  2881                           ;!         ___wmul (ARG)
  2882                           ;!     ___wmul
  2883                           ;!     ___xxtofl
  2884                           ;!       ___wmul (ARG)
  2885                           ;!     _read_adc_raw_no_lib
  2886                           ;!   _reloadTimer3
  2887                           ;!   _set_pwm1_percent
  2888                           ;!     ___fladd
  2889                           ;!       ___flneg (ARG)
  2890                           ;!         ___xxtofl (ARG)
  2891                           ;!           ___wmul (ARG)
  2892                           ;!       ___xxtofl (ARG)
  2893                           ;!         ___wmul (ARG)
  2894                           ;!       _fround (ARG)
  2895                           ;!         ___awdiv
  2896                           ;!           ___awmod (ARG)
  2897                           ;!           ___wmul (ARG)
  2898                           ;!         ___awmod
  2899                           ;!         ___flmul
  2900                           ;!           ___awdiv (ARG)
  2901                           ;!             ___awmod (ARG)
  2902                           ;!             ___wmul (ARG)
  2903                           ;!           ___awmod (ARG)
  2904                           ;!     ___fldiv
  2905                           ;!       ___flmul (ARG)
  2906                           ;!         ___awdiv (ARG)
  2907                           ;!           ___awmod (ARG)
  2908                           ;!           ___wmul (ARG)
  2909                           ;!         ___awmod (ARG)
  2910                           ;!       ___wmul (ARG)
  2911                           ;!       ___xxtofl (ARG)
  2912                           ;!         ___wmul (ARG)
  2913                           ;!     ___flmul
  2914                           ;!       ___awdiv (ARG)
  2915                           ;!         ___awmod (ARG)
  2916                           ;!         ___wmul (ARG)
  2917                           ;!       ___awmod (ARG)
  2918                           ;!     ___fltol
  2919                           ;!       ___fladd (ARG)
  2920                           ;!         ___flneg (ARG)
  2921                           ;!           ___xxtofl (ARG)
  2922                           ;!             ___wmul (ARG)
  2923                           ;!         ___xxtofl (ARG)
  2924                           ;!           ___wmul (ARG)
  2925                           ;!         _fround (ARG)
  2926                           ;!           ___awdiv
  2927                           ;!             ___awmod (ARG)
  2928                           ;!             ___wmul (ARG)
  2929                           ;!           ___awmod
  2930                           ;!           ___flmul
  2931                           ;!             ___awdiv (ARG)
  2932                           ;!               ___awmod (ARG)
  2933                           ;!               ___wmul (ARG)
  2934                           ;!             ___awmod (ARG)
  2935                           ;!       ___fldiv (ARG)
  2936                           ;!         ___flmul (ARG)
  2937                           ;!           ___awdiv (ARG)
  2938                           ;!             ___awmod (ARG)
  2939                           ;!             ___wmul (ARG)
  2940                           ;!           ___awmod (ARG)
  2941                           ;!         ___wmul (ARG)
  2942                           ;!         ___xxtofl (ARG)
  2943                           ;!           ___wmul (ARG)
  2944                           ;!       ___flmul (ARG)
  2945                           ;!         ___awdiv (ARG)
  2946                           ;!           ___awmod (ARG)
  2947                           ;!           ___wmul (ARG)
  2948                           ;!         ___awmod (ARG)
  2949                           ;!       ___flneg (ARG)
  2950                           ;!         ___xxtofl (ARG)
  2951                           ;!           ___wmul (ARG)
  2952                           ;!       _scale (ARG)
  2953                           ;!         ___awdiv
  2954                           ;!           ___awmod (ARG)
  2955                           ;!           ___wmul (ARG)
  2956                           ;!         ___awmod
  2957                           ;!         ___flmul
  2958                           ;!           ___awdiv (ARG)
  2959                           ;!             ___awmod (ARG)
  2960                           ;!             ___wmul (ARG)
  2961                           ;!           ___awmod (ARG)
  2962                           ;!     ___xxtofl (ARG)
  2963                           ;!       ___wmul (ARG)
  2964                           ;!     _set_pwm1_raw (ARG)
  2965                           ;!       ___awdiv (ARG)
  2966                           ;!         ___awmod (ARG)
  2967                           ;!         ___wmul (ARG)
  2968                           ;!       ___wmul (ARG)
  2969                           ;!   _set_pwm1_raw
  2970                           ;!     ___awdiv (ARG)
  2971                           ;!       ___awmod (ARG)
  2972                           ;!       ___wmul (ARG)
  2973                           ;!     ___wmul (ARG)
  2974                           ;!   _setupPorts
  2975                           ;!   _sprintf
  2976                           ;!     ___awdiv
  2977                           ;!       ___awmod (ARG)
  2978                           ;!       ___wmul (ARG)
  2979                           ;!     ___fladd
  2980                           ;!       ___flneg (ARG)
  2981                           ;!         ___xxtofl (ARG)
  2982                           ;!           ___wmul (ARG)
  2983                           ;!       ___xxtofl (ARG)
  2984                           ;!         ___wmul (ARG)
  2985                           ;!       _fround (ARG)
  2986                           ;!         ___awdiv
  2987                           ;!           ___awmod (ARG)
  2988                           ;!           ___wmul (ARG)
  2989                           ;!         ___awmod
  2990                           ;!         ___flmul
  2991                           ;!           ___awdiv (ARG)
  2992                           ;!             ___awmod (ARG)
  2993                           ;!             ___wmul (ARG)
  2994                           ;!           ___awmod (ARG)
  2995                           ;!     ___fldiv (ARG)
  2996                           ;!       ___flmul (ARG)
  2997                           ;!         ___awdiv (ARG)
  2998                           ;!           ___awmod (ARG)
  2999                           ;!           ___wmul (ARG)
  3000                           ;!         ___awmod (ARG)
  3001                           ;!       ___wmul (ARG)
  3002                           ;!       ___xxtofl (ARG)
  3003                           ;!         ___wmul (ARG)
  3004                           ;!     ___flge (ARG)
  3005                           ;!       ___fladd (ARG)
  3006                           ;!         ___flneg (ARG)
  3007                           ;!           ___xxtofl (ARG)
  3008                           ;!             ___wmul (ARG)
  3009                           ;!         ___xxtofl (ARG)
  3010                           ;!           ___wmul (ARG)
  3011                           ;!         _fround (ARG)
  3012                           ;!           ___awdiv
  3013                           ;!             ___awmod (ARG)
  3014                           ;!             ___wmul (ARG)
  3015                           ;!           ___awmod
  3016                           ;!           ___flmul
  3017                           ;!             ___awdiv (ARG)
  3018                           ;!               ___awmod (ARG)
  3019                           ;!               ___wmul (ARG)
  3020                           ;!             ___awmod (ARG)
  3021                           ;!       ___flneg (ARG)
  3022                           ;!         ___xxtofl (ARG)
  3023                           ;!           ___wmul (ARG)
  3024                           ;!       ___xxtofl (ARG)
  3025                           ;!         ___wmul (ARG)
  3026                           ;!     ___flmul (ARG)
  3027                           ;!       ___awdiv (ARG)
  3028                           ;!         ___awmod (ARG)
  3029                           ;!         ___wmul (ARG)
  3030                           ;!       ___awmod (ARG)
  3031                           ;!     ___flneg (ARG)
  3032                           ;!       ___xxtofl (ARG)
  3033                           ;!         ___wmul (ARG)
  3034                           ;!     ___flsub (ARG)
  3035                           ;!       ___fladd
  3036                           ;!         ___flneg (ARG)
  3037                           ;!           ___xxtofl (ARG)
  3038                           ;!             ___wmul (ARG)
  3039                           ;!         ___xxtofl (ARG)
  3040                           ;!           ___wmul (ARG)
  3041                           ;!         _fround (ARG)
  3042                           ;!           ___awdiv
  3043                           ;!             ___awmod (ARG)
  3044                           ;!             ___wmul (ARG)
  3045                           ;!           ___awmod
  3046                           ;!           ___flmul
  3047                           ;!             ___awdiv (ARG)
  3048                           ;!               ___awmod (ARG)
  3049                           ;!               ___wmul (ARG)
  3050                           ;!             ___awmod (ARG)
  3051                           ;!       ___xxtofl (ARG)
  3052                           ;!         ___wmul (ARG)
  3053                           ;!     ___fltol (ARG)
  3054                           ;!       ___fladd (ARG)
  3055                           ;!         ___flneg (ARG)
  3056                           ;!           ___xxtofl (ARG)
  3057                           ;!             ___wmul (ARG)
  3058                           ;!         ___xxtofl (ARG)
  3059                           ;!           ___wmul (ARG)
  3060                           ;!         _fround (ARG)
  3061                           ;!           ___awdiv
  3062                           ;!             ___awmod (ARG)
  3063                           ;!             ___wmul (ARG)
  3064                           ;!           ___awmod
  3065                           ;!           ___flmul
  3066                           ;!             ___awdiv (ARG)
  3067                           ;!               ___awmod (ARG)
  3068                           ;!               ___wmul (ARG)
  3069                           ;!             ___awmod (ARG)
  3070                           ;!       ___fldiv (ARG)
  3071                           ;!         ___flmul (ARG)
  3072                           ;!           ___awdiv (ARG)
  3073                           ;!             ___awmod (ARG)
  3074                           ;!             ___wmul (ARG)
  3075                           ;!           ___awmod (ARG)
  3076                           ;!         ___wmul (ARG)
  3077                           ;!         ___xxtofl (ARG)
  3078                           ;!           ___wmul (ARG)
  3079                           ;!       ___flmul (ARG)
  3080                           ;!         ___awdiv (ARG)
  3081                           ;!           ___awmod (ARG)
  3082                           ;!           ___wmul (ARG)
  3083                           ;!         ___awmod (ARG)
  3084                           ;!       ___flneg (ARG)
  3085                           ;!         ___xxtofl (ARG)
  3086                           ;!           ___wmul (ARG)
  3087                           ;!       _scale (ARG)
  3088                           ;!         ___awdiv
  3089                           ;!           ___awmod (ARG)
  3090                           ;!           ___wmul (ARG)
  3091                           ;!         ___awmod
  3092                           ;!         ___flmul
  3093                           ;!           ___awdiv (ARG)
  3094                           ;!             ___awmod (ARG)
  3095                           ;!             ___wmul (ARG)
  3096                           ;!           ___awmod (ARG)
  3097                           ;!     ___lldiv (ARG)
  3098                           ;!     ___llmod (ARG)
  3099                           ;!       ___lldiv (ARG)
  3100                           ;!     ___wmul (ARG)
  3101                           ;!     ___xxtofl (ARG)
  3102                           ;!       ___wmul (ARG)
  3103                           ;!     __div_to_l_ (ARG)
  3104                           ;!     __tdiv_to_l_ (ARG)
  3105                           ;!     _fround (ARG)
  3106                           ;!       ___awdiv
  3107                           ;!         ___awmod (ARG)
  3108                           ;!         ___wmul (ARG)
  3109                           ;!       ___awmod
  3110                           ;!       ___flmul
  3111                           ;!         ___awdiv (ARG)
  3112                           ;!           ___awmod (ARG)
  3113                           ;!           ___wmul (ARG)
  3114                           ;!         ___awmod (ARG)
  3115                           ;!     _isdigit (ARG)
  3116                           ;!     _scale (ARG)
  3117                           ;!       ___awdiv
  3118                           ;!         ___awmod (ARG)
  3119                           ;!         ___wmul (ARG)
  3120                           ;!       ___awmod
  3121                           ;!       ___flmul
  3122                           ;!         ___awdiv (ARG)
  3123                           ;!           ___awmod (ARG)
  3124                           ;!           ___wmul (ARG)
  3125                           ;!         ___awmod (ARG)
  3126                           ;!
  3127                           ;! _highIsr (ROOT)
  3128                           ;!   i2___awmod
  3129                           ;!   i2_pwd_Timer3
  3130                           ;!     i2___awmod
  3131                           ;!   i2_reloadTimer3
  3132                           ;!
  3133                           
  3134                           ;! Address spaces:
  3135                           
  3136                           ;!Name               Size   Autos  Total    Cost      Usage
  3137                           ;!BIGRAM             F7F      0       0      37        0.0%
  3138                           ;!EEDATA             400      0       0       0        0.0%
  3139                           ;!BITBANK14          100      0       0      32        0.0%
  3140                           ;!BANK14             100      0       0      33        0.0%
  3141                           ;!BITBANK13          100      0       0      30        0.0%
  3142                           ;!BANK13             100      0       0      31        0.0%
  3143                           ;!BITBANK12          100      0       0      28        0.0%
  3144                           ;!BANK12             100      0       0      29        0.0%
  3145                           ;!BITBANK11          100      0       0      26        0.0%
  3146                           ;!BANK11             100      0       0      27        0.0%
  3147                           ;!BITBANK10          100      0       0      24        0.0%
  3148                           ;!BANK10             100      0       0      25        0.0%
  3149                           ;!BITBANK9           100      0       0      22        0.0%
  3150                           ;!BANK9              100      0       0      23        0.0%
  3151                           ;!BITBANK8           100      0       0      20        0.0%
  3152                           ;!BANK8              100      0       0      21        0.0%
  3153                           ;!BITBANK7           100      0       0      18        0.0%
  3154                           ;!BANK7              100      0       0      19        0.0%
  3155                           ;!BITBANK6           100      0       0      16        0.0%
  3156                           ;!BANK6              100      0       0      17        0.0%
  3157                           ;!BITBANK5           100      0       0      14        0.0%
  3158                           ;!BANK5              100      0       0      15        0.0%
  3159                           ;!BITBANK4           100      0       0      12        0.0%
  3160                           ;!BANK4              100      0       0      13        0.0%
  3161                           ;!BITBANK3           100      0       0      10        0.0%
  3162                           ;!BANK3              100      0       0      11        0.0%
  3163                           ;!BITBANK2           100      0       0       8        0.0%
  3164                           ;!BANK2              100      0       0       9        0.0%
  3165                           ;!BITBANK1           100      0       0       6        0.0%
  3166                           ;!BANK1              100     4F      5F       7       37.1%
  3167                           ;!BITBANK15           80      0       0      35        0.0%
  3168                           ;!BANK15              80      0       0      36        0.0%
  3169                           ;!BITBANK0            80      0       0       4        0.0%
  3170                           ;!BANK0               80     49      49       5       57.0%
  3171                           ;!BITCOMRAM           7E      0       0       0        0.0%
  3172                           ;!COMRAM              7E     53      61       1       77.0%
  3173                           ;!BITSFR               0      0       0     200        0.0%
  3174                           ;!SFR                  0      0       0     200        0.0%
  3175                           ;!STACK                0      0       0       2        0.0%
  3176                           ;!NULL                 0      0       0       0        0.0%
  3177                           ;!ABS                  0      0     109      34        0.0%
  3178                           ;!DATA                 0      0     109       3        0.0%
  3179                           ;!CODE                 0      0       0       0        0.0%
  3180                           
  3181                           	global	_main
  3182                           
  3183 ;; *************** function _main *****************
  3184 ;; Defined at:
  3185 ;;		line 238 in file "main.c"
  3186 ;; Parameters:    Size  Location     Type
  3187 ;;		None
  3188 ;; Auto vars:     Size  Location     Type
  3189 ;;  PWMPersent1     2   76[BANK1 ] int 
  3190 ;;  CoolError1      2   42[BANK1 ] int 
  3191 ;;  PWMPersent      2   74[BANK1 ] int 
  3192 ;;  HeatError1      2   66[BANK1 ] int 
  3193 ;;  RPS             2   44[BANK1 ] int 
  3194 ;;  HeatError       2   64[BANK1 ] int 
  3195 ;;  CoolError       2   62[BANK1 ] int 
  3196 ;;  RPS             2   40[BANK1 ] int 
  3197 ;;  channel         1   78[BANK1 ] unsigned char 
  3198 ;;  Buffer         32    0[BANK1 ] unsigned char [32]
  3199 ;;  analogs        12   48[BANK1 ] float [3]
  3200 ;;  voltage         4   32[BANK1 ] float 
  3201 ;;  AI1_Percenta    2   60[BANK1 ] int 
  3202 ;; Return value:  Size  Location     Type
  3203 ;;                  1    wreg      void 
  3204 ;; Registers used:
  3205 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3206 ;; Tracked objects:
  3207 ;;		On entry : 0/0
  3208 ;;		On exit  : 0/0
  3209 ;;		Unchanged: 0/0
  3210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  3211 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3212 ;;      Locals:         0       0      79       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3213 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3214 ;;      Totals:         0       2      79       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  3215 ;;Total ram usage:       81 bytes
  3216 ;; Hardware stack levels required when called:    9
  3217 ;; This function calls:
  3218 ;;		___awdiv
  3219 ;;		___fladd
  3220 ;;		___fldiv
  3221 ;;		___flge
  3222 ;;		___flmul
  3223 ;;		___flneg
  3224 ;;		___fltol
  3225 ;;		___wmul
  3226 ;;		___xxtofl
  3227 ;;		_initTimers01
  3228 ;;		_init_adc_no_lib
  3229 ;;		_init_pwm1
  3230 ;;		_initialization
  3231 ;;		_lcd_gotoxy
  3232 ;;		_lcd_init
  3233 ;;		_lcd_putc
  3234 ;;		_lcd_puts
  3235 ;;		_pwd_Timer3
  3236 ;;		_read_adc_voltage
  3237 ;;		_reloadTimer3
  3238 ;;		_set_pwm1_percent
  3239 ;;		_set_pwm1_raw
  3240 ;;		_setupPorts
  3241 ;;		_sprintf
  3242 ;; This function is called by:
  3243 ;;		Startup code after reset
  3244 ;; This function uses a non-reentrant model
  3245 ;;
  3246                           psect	text0,class=CODE,space=0,reloc=2,group=0
  3247                           	file	"main.c"
  3248                           	line	238
  3249                           global __ptext0
  3250                           __ptext0:
  3251  000EE4                     psect	text0
  3252                           	file	"main.c"
  3253                           	line	238
  3254                           	global	__size_of_main
  3255                           	__size_of_main	equ	__end_of_main-_main
  3256  0000                     	
  3257                           _main:
  3258  000EE4                     ;incstack = 0
  3259                           	opt	stack 22
  3260                           	line	243
  3261                           	
  3262                           l5737:
  3263  000EE4                     ;main.c: 239: char Buffer[32];
  3264                           ;main.c: 240: float analogs[3];
  3265                           ;main.c: 241: float voltage;
  3266                           ;main.c: 242: int AI1_Percentage;
  3267                           ;main.c: 243: initTimers01();
  3268                           	call	_initTimers01	;wreg free
  3269  000EE4  ECE3  F023         	line	244
  3270                           ;main.c: 244: setupPorts();
  3271                           	call	_setupPorts	;wreg free
  3272  000EE8  EC1F  F024         	line	245
  3273                           	
  3274                           l5739:
  3275  000EEC                     ;main.c: 245: lcd_init();
  3276                           	call	_lcd_init	;wreg free
  3277  000EEC  ECA4  F020         	line	246
  3278                           	
  3279                           l5741:
  3280  000EF0                     ;main.c: 246: init_adc_no_lib();
  3281                           	call	_init_adc_no_lib	;wreg free
  3282  000EF0  EC3A  F024         	line	247
  3283                           	
  3284                           l5743:
  3285  000EF4                     ;main.c: 247: init_pwm1();
  3286                           	call	_init_pwm1	;wreg free
  3287  000EF4  EC2C  F024         	line	248
  3288                           	
  3289                           l5745:
  3290  000EF8                     ;main.c: 248: reloadTimer3();
  3291                           	call	_reloadTimer3	;wreg free
  3292  000EF8  EC34  F024         	line	249
  3293                           	
  3294                           l5747:
  3295  000EFC                     ;main.c: 249: initialization();
  3296                           	call	_initialization	;wreg free
  3297  000EFC  ECB2  F023         	line	250
  3298                           	
  3299                           l5749:
  3300  000F00                     ;main.c: 250: lcd_putc('\f');
  3301                           	movlw	(0Ch)&0ffh
  3302  000F00  0E0C               	
  3303                           	call	_lcd_putc
  3304  000F02  EC0F  F022         	line	251
  3305                           	
  3306                           l5751:
  3307  000F06                     ;main.c: 251: TRISCbits.RC0 = 1;
  3308                           	bsf	((c:3988)),c,0	;volatile
  3309  000F06  8094               	line	253
  3310                           ;main.c: 253: while (1) {
  3311                           	
  3312                           l284:
  3313  000F08                     	line	254
  3314                           # 254 "main.c"
  3315                           clrwdt ;# 
  3316  000F08  0004               psect	text0
  3317                           	line	255
  3318                           	
  3319                           l5753:
  3320  000F0A                     ;main.c: 255: for (unsigned char channel = 0; channel < 3; channel++) {
  3321                           	movlw	low(0)
  3322  000F0A  0E00               	movlb	1	; () banked
  3323  000F0C  0101               	movwf	((main@channel))&0ffh
  3324  000F0E  6F4E               	
  3325                           l5755:; BSR set to: 1
  3326  000F10                     
  3327                           		movlw	03h-1
  3328  000F10  0E02               	cpfsgt	((main@channel))&0ffh
  3329  000F12  654E               	goto	u6651
  3330  000F14  EF8E  F007         	goto	u6650
  3331  000F18  EF90  F007         
  3332                           u6651:
  3333  000F1C                     	goto	l5759
  3334  000F1C  EF94  F007         u6650:
  3335  000F20                     	goto	l5767
  3336  000F20  EFCD  F007         	
  3337                           l5757:; BSR set to: 1
  3338  000F24                     
  3339                           	goto	l5767
  3340  000F24  EFCD  F007         	
  3341                           l285:; BSR set to: 1
  3342  000F28                     
  3343                           	line	256
  3344                           	
  3345                           l5759:; BSR set to: 1
  3346  000F28                     
  3347                           ;main.c: 256: voltage = read_adc_voltage((unsigned char) channel);
  3348                           	movf	((main@channel))&0ffh,w
  3349  000F28  514E               	
  3350                           	call	_read_adc_voltage
  3351  000F2A  EC46  F021         	movff	0+?_read_adc_voltage,(main@voltage)
  3352  000F2E  C08D  F120         	movff	1+?_read_adc_voltage,(main@voltage+1)
  3353  000F32  C08E  F121         	movff	2+?_read_adc_voltage,(main@voltage+2)
  3354  000F36  C08F  F122         	movff	3+?_read_adc_voltage,(main@voltage+3)
  3355  000F3A  C090  F123         	
  3356                           	line	257
  3357                           	
  3358                           l5761:
  3359  000F3E                     ;main.c: 257: analogs[channel] = voltage * 100;
  3360                           	movff	(main@voltage),(c:___flmul@b)
  3361  000F3E  C120  F02C         	movff	(main@voltage+1),(c:___flmul@b+1)
  3362  000F42  C121  F02D         	movff	(main@voltage+2),(c:___flmul@b+2)
  3363  000F46  C122  F02E         	movff	(main@voltage+3),(c:___flmul@b+3)
  3364  000F4A  C123  F02F         	movlw	low(normalize32(100.00000000000000))
  3365  000F4E  0E00               	movwf	((c:___flmul@a)),c
  3366  000F50  6E30               	movlw	high(normalize32(100.00000000000000))
  3367  000F52  0E00               	movwf	((c:___flmul@a+1)),c
  3368  000F54  6E31               	movlw	low highword(normalize32(100.00000000000000))
  3369  000F56  0EC8               	movwf	((c:___flmul@a+2)),c
  3370  000F58  6E32               	movlw	high highword(normalize32(100.00000000000000))
  3371  000F5A  0E42               	movwf	((c:___flmul@a+3)),c
  3372  000F5C  6E33               	call	___flmul	;wreg free
  3373  000F5E  EC38  F013         	movlb	1	; () banked
  3374  000F62  0101               	movf	((main@channel))&0ffh,w
  3375  000F64  514E               	mullw	04h
  3376  000F66  0D04               	movlw	low(main@analogs)
  3377  000F68  0E30               	addwf	(prodl),c,w
  3378  000F6A  24F3               	movwf	c:fsr2l
  3379  000F6C  6ED9               	movlw	high(main@analogs)
  3380  000F6E  0E01               	addwfc	prod+1,w
  3381  000F70  20F4               	movwf	1+c:fsr2l
  3382  000F72  6EDA               	movff	0+?___flmul,postinc2
  3383  000F74  C02C  FFDE         	movff	1+?___flmul,postinc2
  3384  000F78  C02D  FFDE         	movff	2+?___flmul,postinc2
  3385  000F7C  C02E  FFDE         	movff	3+?___flmul,postinc2
  3386  000F80  C02F  FFDE         
  3387                           	line	255
  3388                           	
  3389                           l5763:; BSR set to: 1
  3390  000F84                     
  3391                           	incf	((main@channel))&0ffh
  3392  000F84  2B4E               	
  3393                           l5765:; BSR set to: 1
  3394  000F86                     
  3395                           		movlw	03h-1
  3396  000F86  0E02               	cpfsgt	((main@channel))&0ffh
  3397  000F88  654E               	goto	u6661
  3398  000F8A  EFC9  F007         	goto	u6660
  3399  000F8E  EFCB  F007         
  3400                           u6661:
  3401  000F92                     	goto	l5759
  3402  000F92  EF94  F007         u6660:
  3403  000F96                     	goto	l5767
  3404  000F96  EFCD  F007         	
  3405                           l286:; BSR set to: 1
  3406  000F9A                     
  3407                           	line	259
  3408                           	
  3409                           l5767:; BSR set to: 1
  3410  000F9A                     
  3411                           ;main.c: 258: }
  3412                           ;main.c: 259: sp = (analogs[0] * 100 / 1023) * 2;
  3413                           	movlw	low(normalize32(1023.0000000000000))
  3414  000F9A  0E00               	movwf	((c:___fldiv@a)),c
  3415  000F9C  6E49               	movlw	high(normalize32(1023.0000000000000))
  3416  000F9E  0EC0               	movwf	((c:___fldiv@a+1)),c
  3417  000FA0  6E4A               	movlw	low highword(normalize32(1023.0000000000000))
  3418  000FA2  0E7F               	movwf	((c:___fldiv@a+2)),c
  3419  000FA4  6E4B               	movlw	high highword(normalize32(1023.0000000000000))
  3420  000FA6  0E44               	movwf	((c:___fldiv@a+3)),c
  3421  000FA8  6E4C               	movlw	low(normalize32(100.00000000000000))
  3422  000FAA  0E00               	movwf	((c:___flmul@a)),c
  3423  000FAC  6E30               	movlw	high(normalize32(100.00000000000000))
  3424  000FAE  0E00               	movwf	((c:___flmul@a+1)),c
  3425  000FB0  6E31               	movlw	low highword(normalize32(100.00000000000000))
  3426  000FB2  0EC8               	movwf	((c:___flmul@a+2)),c
  3427  000FB4  6E32               	movlw	high highword(normalize32(100.00000000000000))
  3428  000FB6  0E42               	movwf	((c:___flmul@a+3)),c
  3429  000FB8  6E33               	movff	(main@analogs),(c:___flmul@b)
  3430  000FBA  C130  F02C         	movff	(main@analogs+1),(c:___flmul@b+1)
  3431  000FBE  C131  F02D         	movff	(main@analogs+2),(c:___flmul@b+2)
  3432  000FC2  C132  F02E         	movff	(main@analogs+3),(c:___flmul@b+3)
  3433  000FC6  C133  F02F         	call	___flmul	;wreg free
  3434  000FCA  EC38  F013         	movff	0+?___flmul,(c:___fldiv@b)
  3435  000FCE  C02C  F045         	movff	1+?___flmul,(c:___fldiv@b+1)
  3436  000FD2  C02D  F046         	movff	2+?___flmul,(c:___fldiv@b+2)
  3437  000FD6  C02E  F047         	movff	3+?___flmul,(c:___fldiv@b+3)
  3438  000FDA  C02F  F048         	
  3439                           	call	___fldiv	;wreg free
  3440  000FDE  EC6F  F015         	movff	0+?___fldiv,(_main$1709)
  3441  000FE2  C045  F124         	movff	1+?___fldiv,(_main$1709+1)
  3442  000FE6  C046  F125         	movff	2+?___fldiv,(_main$1709+2)
  3443  000FEA  C047  F126         	movff	3+?___fldiv,(_main$1709+3)
  3444  000FEE  C048  F127         	
  3445                           ;main.c: 258: }
  3446                           ;main.c: 259: sp = (analogs[0] * 100 / 1023) * 2;
  3447                           	movff	(_main$1709),(c:___flmul@b)
  3448  000FF2  C124  F02C         	movff	(_main$1709+1),(c:___flmul@b+1)
  3449  000FF6  C125  F02D         	movff	(_main$1709+2),(c:___flmul@b+2)
  3450  000FFA  C126  F02E         	movff	(_main$1709+3),(c:___flmul@b+3)
  3451  000FFE  C127  F02F         	movlw	low(normalize32(2.0000000000000000))
  3452  001002  0E00               	movwf	((c:___flmul@a)),c
  3453  001004  6E30               	movlw	high(normalize32(2.0000000000000000))
  3454  001006  0E00               	movwf	((c:___flmul@a+1)),c
  3455  001008  6E31               	movlw	low highword(normalize32(2.0000000000000000))
  3456  00100A  0E00               	movwf	((c:___flmul@a+2)),c
  3457  00100C  6E32               	movlw	high highword(normalize32(2.0000000000000000))
  3458  00100E  0E40               	movwf	((c:___flmul@a+3)),c
  3459  001010  6E33               	call	___flmul	;wreg free
  3460  001012  EC38  F013         	movff	0+?___flmul,(_sp)
  3461  001016  C02C  F157         	movff	1+?___flmul,(_sp+1)
  3462  00101A  C02D  F158         	movff	2+?___flmul,(_sp+2)
  3463  00101E  C02E  F159         	movff	3+?___flmul,(_sp+3)
  3464  001022  C02F  F15A         	
  3465                           	line	260
  3466                           ;main.c: 260: AI1_Percentage = analogs[1] * 100 / 1023;
  3467                           	movlw	low(normalize32(1023.0000000000000))
  3468  001026  0E00               	movwf	((c:___fldiv@a)),c
  3469  001028  6E49               	movlw	high(normalize32(1023.0000000000000))
  3470  00102A  0EC0               	movwf	((c:___fldiv@a+1)),c
  3471  00102C  6E4A               	movlw	low highword(normalize32(1023.0000000000000))
  3472  00102E  0E7F               	movwf	((c:___fldiv@a+2)),c
  3473  001030  6E4B               	movlw	high highword(normalize32(1023.0000000000000))
  3474  001032  0E44               	movwf	((c:___fldiv@a+3)),c
  3475  001034  6E4C               	movlw	low(normalize32(100.00000000000000))
  3476  001036  0E00               	movwf	((c:___flmul@a)),c
  3477  001038  6E30               	movlw	high(normalize32(100.00000000000000))
  3478  00103A  0E00               	movwf	((c:___flmul@a+1)),c
  3479  00103C  6E31               	movlw	low highword(normalize32(100.00000000000000))
  3480  00103E  0EC8               	movwf	((c:___flmul@a+2)),c
  3481  001040  6E32               	movlw	high highword(normalize32(100.00000000000000))
  3482  001042  0E42               	movwf	((c:___flmul@a+3)),c
  3483  001044  6E33               	movff	0+(main@analogs+04h),(c:___flmul@b)
  3484  001046  C134  F02C         	movff	1+(main@analogs+04h),(c:___flmul@b+1)
  3485  00104A  C135  F02D         	movff	2+(main@analogs+04h),(c:___flmul@b+2)
  3486  00104E  C136  F02E         	movff	3+(main@analogs+04h),(c:___flmul@b+3)
  3487  001052  C137  F02F         	call	___flmul	;wreg free
  3488  001056  EC38  F013         	movff	0+?___flmul,(c:___fldiv@b)
  3489  00105A  C02C  F045         	movff	1+?___flmul,(c:___fldiv@b+1)
  3490  00105E  C02D  F046         	movff	2+?___flmul,(c:___fldiv@b+2)
  3491  001062  C02E  F047         	movff	3+?___flmul,(c:___fldiv@b+3)
  3492  001066  C02F  F048         	
  3493                           	call	___fldiv	;wreg free
  3494  00106A  EC6F  F015         	movff	0+?___fldiv,(___fltol@f1)
  3495  00106E  C045  F094         	movff	1+?___fldiv,(___fltol@f1+1)
  3496  001072  C046  F095         	movff	2+?___fldiv,(___fltol@f1+2)
  3497  001076  C047  F096         	movff	3+?___fldiv,(___fltol@f1+3)
  3498  00107A  C048  F097         	
  3499                           	call	___fltol	;wreg free
  3500  00107E  ECEA  F01D         	movff	0+?___fltol,(main@AI1_Percentage)
  3501  001082  C094  F13C         	movff	1+?___fltol,(main@AI1_Percentage+1)
  3502  001086  C095  F13D         	line	261
  3503                           	
  3504                           l5769:
  3505  00108A                     ;main.c: 261: temp = analogs[2];
  3506                           	movff	0+(main@analogs+08h),(_temp)
  3507  00108A  C138  F14F         	movff	1+(main@analogs+08h),(_temp+1)
  3508  00108E  C139  F150         	movff	2+(main@analogs+08h),(_temp+2)
  3509  001092  C13A  F151         	movff	3+(main@analogs+08h),(_temp+3)
  3510  001096  C13B  F152         	line	263
  3511                           	
  3512                           l5771:
  3513  00109A                     ;main.c: 263: lcd_gotoxy(1, 1);
  3514                           	movlw	low(01h)
  3515  00109A  0E01               	movwf	((c:lcd_gotoxy@y)),c
  3516  00109C  6E28               	movlw	(01h)&0ffh
  3517  00109E  0E01               	
  3518                           	call	_lcd_gotoxy
  3519  0010A0  EC46  F022         	line	264
  3520                           	
  3521                           l5773:
  3522  0010A4                     ;main.c: 264: sprintf(Buffer, "RT:%03.02fC    H C", temp);
  3523                           		movlw	low(main@Buffer)
  3524  0010A4  0E00               	movlb	0	; () banked
  3525  0010A6  0100               	movwf	((sprintf@sp))&0ffh
  3526  0010A8  6FA0               	movlw	high(main@Buffer)
  3527  0010AA  0E01               	movwf	((sprintf@sp+1))&0ffh
  3528  0010AC  6FA1               
  3529                           		movlw	low(STR_1)
  3530  0010AE  0E6B               	movwf	((sprintf@f))&0ffh
  3531  0010B0  6FA2               	movlw	high(STR_1)
  3532  0010B2  0EFF               	movwf	((sprintf@f+1))&0ffh
  3533  0010B4  6FA3               
  3534                           	movff	(_temp),0+(?_sprintf+04h)
  3535  0010B6  C14F  F0A4         	movff	(_temp+1),1+(?_sprintf+04h)
  3536  0010BA  C150  F0A5         	movff	(_temp+2),2+(?_sprintf+04h)
  3537  0010BE  C151  F0A6         	movff	(_temp+3),3+(?_sprintf+04h)
  3538  0010C2  C152  F0A7         	call	_sprintf	;wreg free
  3539  0010C6  EC09  F000         	line	265
  3540                           	
  3541                           l5775:
  3542  0010CA                     ;main.c: 265: lcd_puts(Buffer);
  3543                           		movlw	low(main@Buffer)
  3544  0010CA  0E00               	movwf	((c:lcd_puts@s)),c
  3545  0010CC  6E2C               	movlw	high(main@Buffer)
  3546  0010CE  0E01               	movwf	((c:lcd_puts@s+1)),c
  3547  0010D0  6E2D               
  3548                           	call	_lcd_puts	;wreg free
  3549  0010D2  EC7B  F023         	line	266
  3550                           	
  3551                           l5777:
  3552  0010D6                     ;main.c: 266: lcd_gotoxy(1, 2);
  3553                           	movlw	low(02h)
  3554  0010D6  0E02               	movwf	((c:lcd_gotoxy@y)),c
  3555  0010D8  6E28               	movlw	(01h)&0ffh
  3556  0010DA  0E01               	
  3557                           	call	_lcd_gotoxy
  3558  0010DC  EC46  F022         	line	267
  3559                           	
  3560                           l5779:
  3561  0010E0                     ;main.c: 267: sprintf(Buffer, "SP:%03.02fC    ", sp);
  3562                           		movlw	low(main@Buffer)
  3563  0010E0  0E00               	movlb	0	; () banked
  3564  0010E2  0100               	movwf	((sprintf@sp))&0ffh
  3565  0010E4  6FA0               	movlw	high(main@Buffer)
  3566  0010E6  0E01               	movwf	((sprintf@sp+1))&0ffh
  3567  0010E8  6FA1               
  3568                           		movlw	low(STR_2)
  3569  0010EA  0E9E               	movwf	((sprintf@f))&0ffh
  3570  0010EC  6FA2               	movlw	high(STR_2)
  3571  0010EE  0EFF               	movwf	((sprintf@f+1))&0ffh
  3572  0010F0  6FA3               
  3573                           	movff	(_sp),0+(?_sprintf+04h)
  3574  0010F2  C157  F0A4         	movff	(_sp+1),1+(?_sprintf+04h)
  3575  0010F6  C158  F0A5         	movff	(_sp+2),2+(?_sprintf+04h)
  3576  0010FA  C159  F0A6         	movff	(_sp+3),3+(?_sprintf+04h)
  3577  0010FE  C15A  F0A7         	call	_sprintf	;wreg free
  3578  001102  EC09  F000         	line	268
  3579                           	
  3580                           l5781:
  3581  001106                     ;main.c: 268: lcd_puts(Buffer);
  3582                           		movlw	low(main@Buffer)
  3583  001106  0E00               	movwf	((c:lcd_puts@s)),c
  3584  001108  6E2C               	movlw	high(main@Buffer)
  3585  00110A  0E01               	movwf	((c:lcd_puts@s+1)),c
  3586  00110C  6E2D               
  3587                           	call	_lcd_puts	;wreg free
  3588  00110E  EC7B  F023         	line	269
  3589                           	
  3590                           l5783:
  3591  001112                     ;main.c: 269: lcd_gotoxy(1, 3);
  3592                           	movlw	low(03h)
  3593  001112  0E03               	movwf	((c:lcd_gotoxy@y)),c
  3594  001114  6E28               	movlw	(01h)&0ffh
  3595  001116  0E01               	
  3596                           	call	_lcd_gotoxy
  3597  001118  EC46  F022         	line	270
  3598                           	
  3599                           l5785:
  3600  00111C                     ;main.c: 270: sprintf(Buffer, "HS:%03.02fC ", 0);
  3601                           		movlw	low(main@Buffer)
  3602  00111C  0E00               	movlb	0	; () banked
  3603  00111E  0100               	movwf	((sprintf@sp))&0ffh
  3604  001120  6FA0               	movlw	high(main@Buffer)
  3605  001122  0E01               	movwf	((sprintf@sp+1))&0ffh
  3606  001124  6FA1               
  3607                           		movlw	low(STR_3)
  3608  001126  0EAE               	movwf	((sprintf@f))&0ffh
  3609  001128  6FA2               	movlw	high(STR_3)
  3610  00112A  0EFF               	movwf	((sprintf@f+1))&0ffh
  3611  00112C  6FA3               
  3612                           	movlw	high(0)
  3613  00112E  0E00               	movwf	(1+(?_sprintf+04h))&0ffh
  3614  001130  6FA5               	movlw	low(0)
  3615  001132  0E00               	movwf	(0+(?_sprintf+04h))&0ffh
  3616  001134  6FA4               	call	_sprintf	;wreg free
  3617  001136  EC09  F000         	line	271
  3618                           	
  3619                           l5787:
  3620  00113A                     ;main.c: 271: lcd_puts(Buffer);
  3621                           		movlw	low(main@Buffer)
  3622  00113A  0E00               	movwf	((c:lcd_puts@s)),c
  3623  00113C  6E2C               	movlw	high(main@Buffer)
  3624  00113E  0E01               	movwf	((c:lcd_puts@s+1)),c
  3625  001140  6E2D               
  3626                           	call	_lcd_puts	;wreg free
  3627  001142  EC7B  F023         	line	273
  3628                           	
  3629                           l5789:
  3630  001146                     ;main.c: 273: lcd_gotoxy(14, 2);
  3631                           	movlw	low(02h)
  3632  001146  0E02               	movwf	((c:lcd_gotoxy@y)),c
  3633  001148  6E28               	movlw	(0Eh)&0ffh
  3634  00114A  0E0E               	
  3635                           	call	_lcd_gotoxy
  3636  00114C  EC46  F022         	line	274
  3637                           	
  3638                           l5791:
  3639  001150                     ;main.c: 274: if (heaterON)
  3640                           	movlb	1	; () banked
  3641  001150  0101               	movf	((_heaterON))&0ffh,w
  3642  001152  515E               	btfsc	status,2
  3643  001154  B4D8               	goto	u6671
  3644  001156  EFAF  F008         	goto	u6670
  3645  00115A  EFB1  F008         u6671:
  3646  00115E                     	goto	l5795
  3647  00115E  EFB6  F008         u6670:
  3648  001162                     	line	275
  3649                           	
  3650                           l5793:; BSR set to: 1
  3651  001162                     
  3652                           ;main.c: 275: lcd_putc('Y');
  3653                           	movlw	(059h)&0ffh
  3654  001162  0E59               	
  3655                           	call	_lcd_putc
  3656  001164  EC0F  F022         	goto	l288
  3657  001168  EFB9  F008         	line	276
  3658                           	
  3659                           l287:
  3660  00116C                     	line	277
  3661                           	
  3662                           l5795:
  3663  00116C                     ;main.c: 276: else
  3664                           ;main.c: 277: lcd_putc('N');
  3665                           	movlw	(04Eh)&0ffh
  3666  00116C  0E4E               	
  3667                           	call	_lcd_putc
  3668  00116E  EC0F  F022         	
  3669                           l288:
  3670  001172                     	line	278
  3671                           ;main.c: 278: lcd_gotoxy(16, 2);
  3672                           	movlw	low(02h)
  3673  001172  0E02               	movwf	((c:lcd_gotoxy@y)),c
  3674  001174  6E28               	movlw	(010h)&0ffh
  3675  001176  0E10               	
  3676                           	call	_lcd_gotoxy
  3677  001178  EC46  F022         	line	279
  3678                           	
  3679                           l5797:
  3680  00117C                     ;main.c: 279: if (coolerON)
  3681                           	movlb	1	; () banked
  3682  00117C  0101               	movf	((_coolerON))&0ffh,w
  3683  00117E  515D               	btfsc	status,2
  3684  001180  B4D8               	goto	u6681
  3685  001182  EFC5  F008         	goto	u6680
  3686  001186  EFC7  F008         u6681:
  3687  00118A                     	goto	l5801
  3688  00118A  EFCC  F008         u6680:
  3689  00118E                     	line	280
  3690                           	
  3691                           l5799:; BSR set to: 1
  3692  00118E                     
  3693                           ;main.c: 280: lcd_putc('Y');
  3694                           	movlw	(059h)&0ffh
  3695  00118E  0E59               	
  3696                           	call	_lcd_putc
  3697  001190  EC0F  F022         	goto	l6015
  3698  001194  EF05  F00E         	line	281
  3699                           	
  3700                           l289:
  3701  001198                     	line	282
  3702                           	
  3703                           l5801:
  3704  001198                     ;main.c: 281: else
  3705                           ;main.c: 282: lcd_putc('N');
  3706                           	movlw	(04Eh)&0ffh
  3707  001198  0E4E               	
  3708                           	call	_lcd_putc
  3709  00119A  EC0F  F022         	goto	l6015
  3710  00119E  EF05  F00E         	
  3711                           l290:
  3712  0011A2                     	line	284
  3713                           ;main.c: 284: switch (operationModes) {
  3714                           	goto	l6015
  3715  0011A2  EF05  F00E         	line	285
  3716                           ;main.c: 285: case 0:
  3717                           	
  3718                           l292:
  3719  0011A6                     	line	286
  3720                           	
  3721                           l5803:
  3722  0011A6                     ;main.c: 286: coolerON = 0;
  3723                           	movlw	low(0)
  3724  0011A6  0E00               	movlb	1	; () banked
  3725  0011A8  0101               	movwf	((_coolerON))&0ffh
  3726  0011AA  6F5D               	line	287
  3727                           	
  3728                           l5805:; BSR set to: 1
  3729  0011AC                     
  3730                           ;main.c: 287: PORTCbits.RC2 = 0;
  3731                           	bcf	((c:3970)),c,2	;volatile
  3732  0011AC  9482               	line	288
  3733                           	
  3734                           l5807:; BSR set to: 1
  3735  0011AE                     
  3736                           ;main.c: 288: set_pwm1_raw(0);
  3737                           	movlw	high(0)
  3738  0011AE  0E00               	movwf	((c:set_pwm1_raw@raw_value+1)),c
  3739  0011B0  6E2D               	movlw	low(0)
  3740  0011B2  0E00               	movwf	((c:set_pwm1_raw@raw_value)),c
  3741  0011B4  6E2C               	call	_set_pwm1_raw	;wreg free
  3742  0011B6  ECCC  F023         	line	289
  3743                           	
  3744                           l5809:
  3745  0011BA                     ;main.c: 289: lcd_gotoxy(10, 3);
  3746                           	movlw	low(03h)
  3747  0011BA  0E03               	movwf	((c:lcd_gotoxy@y)),c
  3748  0011BC  6E28               	movlw	(0Ah)&0ffh
  3749  0011BE  0E0A               	
  3750                           	call	_lcd_gotoxy
  3751  0011C0  EC46  F022         	line	290
  3752                           	
  3753                           l5811:
  3754  0011C4                     ;main.c: 290: sprintf(Buffer, " H:%3d", percentHeatCounter * 10);
  3755                           	movff	(c:_percentHeatCounter),(c:___wmul@multiplier)
  3756  0011C4  C05C  F01E         	movff	(c:_percentHeatCounter+1),(c:___wmul@multiplier+1)
  3757  0011C8  C05D  F01F         	movlw	high(0Ah)
  3758  0011CC  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  3759  0011CE  6E21               	movlw	low(0Ah)
  3760  0011D0  0E0A               	movwf	((c:___wmul@multiplicand)),c
  3761  0011D2  6E20               	call	___wmul	;wreg free
  3762  0011D4  ECF9  F023         	movff	0+?___wmul,(_main$1710)
  3763  0011D8  C01E  F148         	movff	1+?___wmul,(_main$1710+1)
  3764  0011DC  C01F  F149         	
  3765                           l5813:
  3766  0011E0                     ;main.c: 290: sprintf(Buffer, " H:%3d", percentHeatCounter * 10);
  3767                           		movlw	low(main@Buffer)
  3768  0011E0  0E00               	movlb	0	; () banked
  3769  0011E2  0100               	movwf	((sprintf@sp))&0ffh
  3770  0011E4  6FA0               	movlw	high(main@Buffer)
  3771  0011E6  0E01               	movwf	((sprintf@sp+1))&0ffh
  3772  0011E8  6FA1               
  3773                           		movlw	low(STR_4)
  3774  0011EA  0EF7               	movwf	((sprintf@f))&0ffh
  3775  0011EC  6FA2               	movlw	high(STR_4)
  3776  0011EE  0EFF               	movwf	((sprintf@f+1))&0ffh
  3777  0011F0  6FA3               
  3778                           	movff	(_main$1710),0+(?_sprintf+04h)
  3779  0011F2  C148  F0A4         	movff	(_main$1710+1),1+(?_sprintf+04h)
  3780  0011F6  C149  F0A5         	call	_sprintf	;wreg free
  3781  0011FA  EC09  F000         	line	291
  3782                           	
  3783                           l5815:
  3784  0011FE                     ;main.c: 291: lcd_puts(Buffer);
  3785                           		movlw	low(main@Buffer)
  3786  0011FE  0E00               	movwf	((c:lcd_puts@s)),c
  3787  001200  6E2C               	movlw	high(main@Buffer)
  3788  001202  0E01               	movwf	((c:lcd_puts@s+1)),c
  3789  001204  6E2D               
  3790                           	call	_lcd_puts	;wreg free
  3791  001206  EC7B  F023         	line	292
  3792                           	
  3793                           l5817:
  3794  00120A                     ;main.c: 292: lcd_putc('%');
  3795                           	movlw	(025h)&0ffh
  3796  00120A  0E25               	
  3797                           	call	_lcd_putc
  3798  00120C  EC0F  F022         	line	293
  3799                           	
  3800                           l5819:
  3801  001210                     ;main.c: 293: lcd_gotoxy(1, 4);
  3802                           	movlw	low(04h)
  3803  001210  0E04               	movwf	((c:lcd_gotoxy@y)),c
  3804  001212  6E28               	movlw	(01h)&0ffh
  3805  001214  0E01               	
  3806                           	call	_lcd_gotoxy
  3807  001216  EC46  F022         	line	294
  3808                           	
  3809                           l5821:
  3810  00121A                     ;main.c: 294: sprintf(Buffer, "MD: OFF        ");
  3811                           		movlw	low(main@Buffer)
  3812  00121A  0E00               	movlb	0	; () banked
  3813  00121C  0100               	movwf	((sprintf@sp))&0ffh
  3814  00121E  6FA0               	movlw	high(main@Buffer)
  3815  001220  0E01               	movwf	((sprintf@sp+1))&0ffh
  3816  001222  6FA1               
  3817                           		movlw	low(STR_5)
  3818  001224  0E7E               	movwf	((sprintf@f))&0ffh
  3819  001226  6FA2               	movlw	high(STR_5)
  3820  001228  0EFF               	movwf	((sprintf@f+1))&0ffh
  3821  00122A  6FA3               
  3822                           	call	_sprintf	;wreg free
  3823  00122C  EC09  F000         	line	295
  3824                           	
  3825                           l5823:
  3826  001230                     ;main.c: 295: lcd_puts(Buffer);
  3827                           		movlw	low(main@Buffer)
  3828  001230  0E00               	movwf	((c:lcd_puts@s)),c
  3829  001232  6E2C               	movlw	high(main@Buffer)
  3830  001234  0E01               	movwf	((c:lcd_puts@s+1)),c
  3831  001236  6E2D               
  3832                           	call	_lcd_puts	;wreg free
  3833  001238  EC7B  F023         	line	296
  3834                           ;main.c: 296: break;
  3835                           	goto	l284
  3836  00123C  EF84  F007         	line	298
  3837                           ;main.c: 298: case 1:
  3838                           	
  3839                           l294:; BSR set to: 0
  3840  001240                     
  3841                           	line	299
  3842                           ;main.c: 299: PORTCbits.RC2 = 1;
  3843                           	bsf	((c:3970)),c,2	;volatile
  3844  001240  8482               	line	300
  3845                           	
  3846                           l5825:; BSR set to: 0
  3847  001242                     
  3848                           ;main.c: 300: heaterON = 0;
  3849                           	movlw	low(0)
  3850  001242  0E00               	movlb	1	; () banked
  3851  001244  0101               	movwf	((_heaterON))&0ffh
  3852  001246  6F5E               	line	301
  3853                           	
  3854                           l5827:; BSR set to: 1
  3855  001248                     
  3856                           ;main.c: 301: if (percentCoolCounter == 0)
  3857                           	movf	((c:_percentCoolCounter)),c,w
  3858  001248  505A               iorwf	((c:_percentCoolCounter+1)),c,w
  3859  00124A  105B               	btfss	status,2
  3860  00124C  A4D8               	goto	u6691
  3861  00124E  EF2B  F009         	goto	u6690
  3862  001252  EF2D  F009         
  3863                           u6691:
  3864  001256                     	goto	l5831
  3865  001256  EF31  F009         u6690:
  3866  00125A                     	line	302
  3867                           	
  3868                           l5829:; BSR set to: 1
  3869  00125A                     
  3870                           ;main.c: 302: coolerON = 0;
  3871                           	movlw	low(0)
  3872  00125A  0E00               	movwf	((_coolerON))&0ffh
  3873  00125C  6F5D               	goto	l5833
  3874  00125E  EF35  F009         	line	303
  3875                           	
  3876                           l295:; BSR set to: 1
  3877  001262                     
  3878                           	line	304
  3879                           	
  3880                           l5831:; BSR set to: 1
  3881  001262                     
  3882                           ;main.c: 303: else
  3883                           ;main.c: 304: coolerON = 1;
  3884                           	movlw	low(01h)
  3885  001262  0E01               	movwf	((_coolerON))&0ffh
  3886  001264  6F5D               	goto	l5833
  3887  001266  EF35  F009         	
  3888                           l296:; BSR set to: 1
  3889  00126A                     
  3890                           	line	305
  3891                           	
  3892                           l5833:; BSR set to: 1
  3893  00126A                     
  3894                           ;main.c: 305: PORTCbits.RC5 = 0;
  3895                           	bcf	((c:3970)),c,5	;volatile
  3896  00126A  9A82               	line	306
  3897                           	
  3898                           l5835:; BSR set to: 1
  3899  00126C                     
  3900                           ;main.c: 306: lcd_gotoxy(10, 3);
  3901                           	movlw	low(03h)
  3902  00126C  0E03               	movwf	((c:lcd_gotoxy@y)),c
  3903  00126E  6E28               	movlw	(0Ah)&0ffh
  3904  001270  0E0A               	
  3905                           	call	_lcd_gotoxy
  3906  001272  EC46  F022         	line	307
  3907                           	
  3908                           l5837:
  3909  001276                     ;main.c: 307: set_pwm1_raw(AI1_Percentage * 1023 / 100 / 2 );
  3910                           	movlw	high(064h)
  3911  001276  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3912  001278  6E27               	movlw	low(064h)
  3913  00127A  0E64               	movwf	((c:___awdiv@divisor)),c
  3914  00127C  6E26               	movff	(main@AI1_Percentage),(c:___wmul@multiplier)
  3915  00127E  C13C  F01E         	movff	(main@AI1_Percentage+1),(c:___wmul@multiplier+1)
  3916  001282  C13D  F01F         	movlw	high(03FFh)
  3917  001286  0E03               	movwf	((c:___wmul@multiplicand+1)),c
  3918  001288  6E21               	setf	((c:___wmul@multiplicand)),c
  3919  00128A  6820               	call	___wmul	;wreg free
  3920  00128C  ECF9  F023         	movff	0+?___wmul,(c:___awdiv@dividend)
  3921  001290  C01E  F024         	movff	1+?___wmul,(c:___awdiv@dividend+1)
  3922  001294  C01F  F025         	call	___awdiv	;wreg free
  3923  001298  EC94  F01E         	movff	0+?___awdiv,(_main$1711)
  3924  00129C  C024  F12E         	movff	1+?___awdiv,(_main$1711+1)
  3925  0012A0  C025  F12F         	
  3926                           l5839:
  3927  0012A4                     ;main.c: 307: set_pwm1_raw(AI1_Percentage * 1023 / 100 / 2 );
  3928                           	movff	(_main$1711),(c:___awdiv@dividend)
  3929  0012A4  C12E  F024         	movff	(_main$1711+1),(c:___awdiv@dividend+1)
  3930  0012A8  C12F  F025         	movlw	high(02h)
  3931  0012AC  0E00               	movwf	((c:___awdiv@divisor+1)),c
  3932  0012AE  6E27               	movlw	low(02h)
  3933  0012B0  0E02               	movwf	((c:___awdiv@divisor)),c
  3934  0012B2  6E26               	call	___awdiv	;wreg free
  3935  0012B4  EC94  F01E         	movff	0+?___awdiv,(c:set_pwm1_raw@raw_value)
  3936  0012B8  C024  F02C         	movff	1+?___awdiv,(c:set_pwm1_raw@raw_value+1)
  3937  0012BC  C025  F02D         	call	_set_pwm1_raw	;wreg free
  3938  0012C0  ECCC  F023         	line	308
  3939                           	
  3940                           l5841:
  3941  0012C4                     ;main.c: 308: sprintf(Buffer, " C:%3d", AI1_Percentage* 2 );
  3942                           		movlw	low(main@Buffer)
  3943  0012C4  0E00               	movlb	0	; () banked
  3944  0012C6  0100               	movwf	((sprintf@sp))&0ffh
  3945  0012C8  6FA0               	movlw	high(main@Buffer)
  3946  0012CA  0E01               	movwf	((sprintf@sp+1))&0ffh
  3947  0012CC  6FA1               
  3948                           		movlw	low(STR_6)
  3949  0012CE  0EF0               	movwf	((sprintf@f))&0ffh
  3950  0012D0  6FA2               	movlw	high(STR_6)
  3951  0012D2  0EFF               	movwf	((sprintf@f+1))&0ffh
  3952  0012D4  6FA3               
  3953                           	bcf	status,0
  3954  0012D6  90D8               	movlb	1	; () banked
  3955  0012D8  0101               	rlcf	((main@AI1_Percentage))&0ffh,w
  3956  0012DA  353C               	movlb	0	; () banked
  3957  0012DC  0100               	movwf	(0+(?_sprintf+04h))&0ffh
  3958  0012DE  6FA4               	movlb	1	; () banked
  3959  0012E0  0101               	rlcf	((main@AI1_Percentage+1))&0ffh,w
  3960  0012E2  353D               	movlb	0	; () banked
  3961  0012E4  0100               	movwf	1+(0+(?_sprintf+04h))&0ffh
  3962  0012E6  6FA5               	call	_sprintf	;wreg free
  3963  0012E8  EC09  F000         	line	309
  3964                           	
  3965                           l5843:
  3966  0012EC                     ;main.c: 309: lcd_puts(Buffer);
  3967                           		movlw	low(main@Buffer)
  3968  0012EC  0E00               	movwf	((c:lcd_puts@s)),c
  3969  0012EE  6E2C               	movlw	high(main@Buffer)
  3970  0012F0  0E01               	movwf	((c:lcd_puts@s+1)),c
  3971  0012F2  6E2D               
  3972                           	call	_lcd_puts	;wreg free
  3973  0012F4  EC7B  F023         	line	310
  3974                           	
  3975                           l5845:
  3976  0012F8                     ;main.c: 310: lcd_putc('%');
  3977                           	movlw	(025h)&0ffh
  3978  0012F8  0E25               	
  3979                           	call	_lcd_putc
  3980  0012FA  EC0F  F022         	line	311
  3981                           	
  3982                           l5847:
  3983  0012FE                     ;main.c: 311: lcd_gotoxy(1, 4);
  3984                           	movlw	low(04h)
  3985  0012FE  0E04               	movwf	((c:lcd_gotoxy@y)),c
  3986  001300  6E28               	movlw	(01h)&0ffh
  3987  001302  0E01               	
  3988                           	call	_lcd_gotoxy
  3989  001304  EC46  F022         	line	312
  3990                           	
  3991                           l5849:
  3992  001308                     ;main.c: 312: sprintf(Buffer, "MD: Cool       ");
  3993                           		movlw	low(main@Buffer)
  3994  001308  0E00               	movlb	0	; () banked
  3995  00130A  0100               	movwf	((sprintf@sp))&0ffh
  3996  00130C  6FA0               	movlw	high(main@Buffer)
  3997  00130E  0E01               	movwf	((sprintf@sp+1))&0ffh
  3998  001310  6FA1               
  3999                           		movlw	low(STR_7)
  4000  001312  0E8E               	movwf	((sprintf@f))&0ffh
  4001  001314  6FA2               	movlw	high(STR_7)
  4002  001316  0EFF               	movwf	((sprintf@f+1))&0ffh
  4003  001318  6FA3               
  4004                           	call	_sprintf	;wreg free
  4005  00131A  EC09  F000         	line	313
  4006                           	
  4007                           l5851:
  4008  00131E                     ;main.c: 313: lcd_puts(Buffer);
  4009                           		movlw	low(main@Buffer)
  4010  00131E  0E00               	movwf	((c:lcd_puts@s)),c
  4011  001320  6E2C               	movlw	high(main@Buffer)
  4012  001322  0E01               	movwf	((c:lcd_puts@s+1)),c
  4013  001324  6E2D               
  4014                           	call	_lcd_puts	;wreg free
  4015  001326  EC7B  F023         	line	314
  4016                           ;main.c: 314: break;
  4017                           	goto	l284
  4018  00132A  EF84  F007         	line	316
  4019                           ;main.c: 316: case 2:
  4020                           	
  4021                           l297:
  4022  00132E                     	line	318
  4023                           	
  4024                           l5853:
  4025  00132E                     ;main.c: 318: lcd_gotoxy(11, 4);
  4026                           	movlw	low(04h)
  4027  00132E  0E04               	movwf	((c:lcd_gotoxy@y)),c
  4028  001330  6E28               	movlw	(0Bh)&0ffh
  4029  001332  0E0B               	
  4030                           	call	_lcd_gotoxy
  4031  001334  EC46  F022         	line	319
  4032                           	
  4033                           l5855:
  4034  001338                     ;main.c: 319: sprintf(Buffer, "  HS=%d", 0);
  4035                           		movlw	low(main@Buffer)
  4036  001338  0E00               	movlb	0	; () banked
  4037  00133A  0100               	movwf	((sprintf@sp))&0ffh
  4038  00133C  6FA0               	movlw	high(main@Buffer)
  4039  00133E  0E01               	movwf	((sprintf@sp+1))&0ffh
  4040  001340  6FA1               
  4041                           		movlw	low(STR_8)
  4042  001342  0EE8               	movwf	((sprintf@f))&0ffh
  4043  001344  6FA2               	movlw	high(STR_8)
  4044  001346  0EFF               	movwf	((sprintf@f+1))&0ffh
  4045  001348  6FA3               
  4046                           	movlw	high(0)
  4047  00134A  0E00               	movwf	(1+(?_sprintf+04h))&0ffh
  4048  00134C  6FA5               	movlw	low(0)
  4049  00134E  0E00               	movwf	(0+(?_sprintf+04h))&0ffh
  4050  001350  6FA4               	call	_sprintf	;wreg free
  4051  001352  EC09  F000         	line	320
  4052                           	
  4053                           l5857:
  4054  001356                     ;main.c: 320: lcd_puts(Buffer);
  4055                           		movlw	low(main@Buffer)
  4056  001356  0E00               	movwf	((c:lcd_puts@s)),c
  4057  001358  6E2C               	movlw	high(main@Buffer)
  4058  00135A  0E01               	movwf	((c:lcd_puts@s+1)),c
  4059  00135C  6E2D               
  4060                           	call	_lcd_puts	;wreg free
  4061  00135E  EC7B  F023         	line	321
  4062                           	
  4063                           l5859:
  4064  001362                     ;main.c: 321: if (ot > 60) {
  4065                           	movlw	low(normalize32(60.000000000000000))
  4066  001362  0E00               	movlb	0	; () banked
  4067  001364  0100               	movwf	((___flge@ff1))&0ffh
  4068  001366  6F94               	movlw	high(normalize32(60.000000000000000))
  4069  001368  0E00               	movwf	((___flge@ff1+1))&0ffh
  4070  00136A  6F95               	movlw	low highword(normalize32(60.000000000000000))
  4071  00136C  0E70               	movwf	((___flge@ff1+2))&0ffh
  4072  00136E  6F96               	movlw	high highword(normalize32(60.000000000000000))
  4073  001370  0E42               	movwf	((___flge@ff1+3))&0ffh
  4074  001372  6F97               	movff	(_ot),(___flge@ff2)
  4075  001374  C153  F098         	movff	(_ot+1),(___flge@ff2+1)
  4076  001378  C154  F099         	movff	(_ot+2),(___flge@ff2+2)
  4077  00137C  C155  F09A         	movff	(_ot+3),(___flge@ff2+3)
  4078  001380  C156  F09B         	call	___flge	;wreg free
  4079  001384  EC35  F01D         	movlb	0	; () banked
  4080  001388  0100               	btfsc	status,0
  4081  00138A  B0D8               	goto	u6701
  4082  00138C  EFCA  F009         	goto	u6700
  4083  001390  EFCC  F009         u6701:
  4084  001394                     	goto	l5905
  4085  001394  EF27  F00B         u6700:
  4086  001398                     	line	322
  4087                           	
  4088                           l5861:; BSR set to: 0
  4089  001398                     
  4090                           ;main.c: 322: lcd_gotoxy(1, 4);
  4091                           	movlw	low(04h)
  4092  001398  0E04               	movwf	((c:lcd_gotoxy@y)),c
  4093  00139A  6E28               	movlw	(01h)&0ffh
  4094  00139C  0E01               	
  4095                           	call	_lcd_gotoxy
  4096  00139E  EC46  F022         	line	323
  4097                           	
  4098                           l5863:
  4099  0013A2                     ;main.c: 323: sprintf(Buffer, "MD:Auto CL");
  4100                           		movlw	low(main@Buffer)
  4101  0013A2  0E00               	movlb	0	; () banked
  4102  0013A4  0100               	movwf	((sprintf@sp))&0ffh
  4103  0013A6  6FA0               	movlw	high(main@Buffer)
  4104  0013A8  0E01               	movwf	((sprintf@sp+1))&0ffh
  4105  0013AA  6FA1               
  4106                           		movlw	low(STR_9)
  4107  0013AC  0ED2               	movwf	((sprintf@f))&0ffh
  4108  0013AE  6FA2               	movlw	high(STR_9)
  4109  0013B0  0EFF               	movwf	((sprintf@f+1))&0ffh
  4110  0013B2  6FA3               
  4111                           	call	_sprintf	;wreg free
  4112  0013B4  EC09  F000         	line	324
  4113                           	
  4114                           l5865:
  4115  0013B8                     ;main.c: 324: lcd_puts(Buffer);
  4116                           		movlw	low(main@Buffer)
  4117  0013B8  0E00               	movwf	((c:lcd_puts@s)),c
  4118  0013BA  6E2C               	movlw	high(main@Buffer)
  4119  0013BC  0E01               	movwf	((c:lcd_puts@s+1)),c
  4120  0013BE  6E2D               
  4121                           	call	_lcd_puts	;wreg free
  4122  0013C0  EC7B  F023         	line	325
  4123                           	
  4124                           l5867:
  4125  0013C4                     ;main.c: 325: int CoolError = temp - sp;
  4126                           	movff	(_temp),(___fladd@a)
  4127  0013C4  C14F  F084         	movff	(_temp+1),(___fladd@a+1)
  4128  0013C8  C150  F085         	movff	(_temp+2),(___fladd@a+2)
  4129  0013CC  C151  F086         	movff	(_temp+3),(___fladd@a+3)
  4130  0013D0  C152  F087         	movff	(_sp),(c:___flneg@f1)
  4131  0013D4  C157  F032         	movff	(_sp+1),(c:___flneg@f1+1)
  4132  0013D8  C158  F033         	movff	(_sp+2),(c:___flneg@f1+2)
  4133  0013DC  C159  F034         	movff	(_sp+3),(c:___flneg@f1+3)
  4134  0013E0  C15A  F035         	call	___flneg	;wreg free
  4135  0013E4  EC3E  F023         	movff	0+?___flneg,(___fladd@b)
  4136  0013E8  C032  F080         	movff	1+?___flneg,(___fladd@b+1)
  4137  0013EC  C033  F081         	movff	2+?___flneg,(___fladd@b+2)
  4138  0013F0  C034  F082         	movff	3+?___flneg,(___fladd@b+3)
  4139  0013F4  C035  F083         	
  4140                           	call	___fladd	;wreg free
  4141  0013F8  EC26  F00E         	movff	0+?___fladd,(___fltol@f1)
  4142  0013FC  C080  F094         	movff	1+?___fladd,(___fltol@f1+1)
  4143  001400  C081  F095         	movff	2+?___fladd,(___fltol@f1+2)
  4144  001404  C082  F096         	movff	3+?___fladd,(___fltol@f1+3)
  4145  001408  C083  F097         	
  4146                           	call	___fltol	;wreg free
  4147  00140C  ECEA  F01D         	movff	0+?___fltol,(main@CoolError)
  4148  001410  C094  F13E         	movff	1+?___fltol,(main@CoolError+1)
  4149  001414  C095  F13F         	line	326
  4150                           	
  4151                           l5869:
  4152  001418                     ;main.c: 326: if (CoolError > 0) {
  4153                           	movlb	1	; () banked
  4154  001418  0101               	btfsc	((main@CoolError+1))&0ffh,7
  4155  00141A  BF3F               	goto	u6711
  4156  00141C  EF18  F00A         	movf	((main@CoolError+1))&0ffh,w
  4157  001420  513F               	bnz	u6710
  4158  001422  E108               	decf	((main@CoolError))&0ffh,w
  4159  001424  053E               	btfss	status,0
  4160  001426  A0D8               	goto	u6711
  4161  001428  EF18  F00A         	goto	u6710
  4162  00142C  EF1A  F00A         
  4163                           u6711:
  4164  001430                     	goto	l5887
  4165  001430  EF85  F00A         u6710:
  4166  001434                     	line	327
  4167                           	
  4168                           l5871:; BSR set to: 1
  4169  001434                     
  4170                           ;main.c: 327: int PWMPersent = CoolError * 10;
  4171                           	movff	(main@CoolError),(c:___wmul@multiplier)
  4172  001434  C13E  F01E         	movff	(main@CoolError+1),(c:___wmul@multiplier+1)
  4173  001438  C13F  F01F         	movlw	high(0Ah)
  4174  00143C  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  4175  00143E  6E21               	movlw	low(0Ah)
  4176  001440  0E0A               	movwf	((c:___wmul@multiplicand)),c
  4177  001442  6E20               	call	___wmul	;wreg free
  4178  001444  ECF9  F023         	movff	0+?___wmul,(main@PWMPersent)
  4179  001448  C01E  F14A         	movff	1+?___wmul,(main@PWMPersent+1)
  4180  00144C  C01F  F14B         	line	328
  4181                           	
  4182                           l5873:
  4183  001450                     ;main.c: 328: if (PWMPersent < 25) {
  4184                           	movlb	1	; () banked
  4185  001450  0101               	btfsc	((main@PWMPersent+1))&0ffh,7
  4186  001452  BF4B               	goto	u6720
  4187  001454  EF37  F00A         	movf	((main@PWMPersent+1))&0ffh,w
  4188  001458  514B               	bnz	u6721
  4189  00145A  E107               	movlw	25
  4190  00145C  0E19               	subwf	 ((main@PWMPersent))&0ffh,w
  4191  00145E  5D4A               	btfsc	status,0
  4192  001460  B0D8               	goto	u6721
  4193  001462  EF35  F00A         	goto	u6720
  4194  001466  EF37  F00A         
  4195                           u6721:
  4196  00146A                     	goto	l5877
  4197  00146A  EF44  F00A         u6720:
  4198  00146E                     	line	329
  4199                           	
  4200                           l5875:; BSR set to: 1
  4201  00146E                     
  4202                           ;main.c: 329: set_pwm1_percent(25);
  4203                           	movlw	low(normalize32(25.000000000000000))
  4204  00146E  0E00               	movlb	0	; () banked
  4205  001470  0100               	movwf	((set_pwm1_percent@value))&0ffh
  4206  001472  6F9C               	movlw	high(normalize32(25.000000000000000))
  4207  001474  0E00               	movwf	((set_pwm1_percent@value+1))&0ffh
  4208  001476  6F9D               	movlw	low highword(normalize32(25.000000000000000))
  4209  001478  0EC8               	movwf	((set_pwm1_percent@value+2))&0ffh
  4210  00147A  6F9E               	movlw	high highword(normalize32(25.000000000000000))
  4211  00147C  0E41               	movwf	((set_pwm1_percent@value+3))&0ffh
  4212  00147E  6F9F               	call	_set_pwm1_percent	;wreg free
  4213  001480  ECE2  F01F         	line	330
  4214                           ;main.c: 330: } else if (PWMPersent > 100) {
  4215                           	goto	l5883
  4216  001484  EF7A  F00A         	
  4217                           l300:
  4218  001488                     	
  4219                           l5877:
  4220  001488                     	movlb	1	; () banked
  4221  001488  0101               	btfsc	((main@PWMPersent+1))&0ffh,7
  4222  00148A  BF4B               	goto	u6731
  4223  00148C  EF51  F00A         	movf	((main@PWMPersent+1))&0ffh,w
  4224  001490  514B               	bnz	u6730
  4225  001492  E109               	movlw	101
  4226  001494  0E65               	subwf	 ((main@PWMPersent))&0ffh,w
  4227  001496  5D4A               	btfss	status,0
  4228  001498  A0D8               	goto	u6731
  4229  00149A  EF51  F00A         	goto	u6730
  4230  00149E  EF53  F00A         
  4231                           u6731:
  4232  0014A2                     	goto	l5881
  4233  0014A2  EF60  F00A         u6730:
  4234  0014A6                     	line	331
  4235                           	
  4236                           l5879:; BSR set to: 1
  4237  0014A6                     
  4238                           ;main.c: 331: set_pwm1_percent(100);
  4239                           	movlw	low(normalize32(100.00000000000000))
  4240  0014A6  0E00               	movlb	0	; () banked
  4241  0014A8  0100               	movwf	((set_pwm1_percent@value))&0ffh
  4242  0014AA  6F9C               	movlw	high(normalize32(100.00000000000000))
  4243  0014AC  0E00               	movwf	((set_pwm1_percent@value+1))&0ffh
  4244  0014AE  6F9D               	movlw	low highword(normalize32(100.00000000000000))
  4245  0014B0  0EC8               	movwf	((set_pwm1_percent@value+2))&0ffh
  4246  0014B2  6F9E               	movlw	high highword(normalize32(100.00000000000000))
  4247  0014B4  0E42               	movwf	((set_pwm1_percent@value+3))&0ffh
  4248  0014B6  6F9F               	call	_set_pwm1_percent	;wreg free
  4249  0014B8  ECE2  F01F         	line	332
  4250                           ;main.c: 332: } else {
  4251                           	goto	l5883
  4252  0014BC  EF7A  F00A         	
  4253                           l302:
  4254  0014C0                     	line	333
  4255                           	
  4256                           l5881:
  4257  0014C0                     ;main.c: 333: set_pwm1_percent(PWMPersent);
  4258                           	movff	(main@PWMPersent),(c:___xxtofl@val)
  4259  0014C0  C14A  F024         	movff	(main@PWMPersent+1),(c:___xxtofl@val+1)
  4260  0014C4  C14B  F025         	movlw	0
  4261  0014C8  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  4262  0014CA  BE25               	movlw	-1
  4263  0014CC  0EFF               	movwf	((c:___xxtofl@val+2)),c
  4264  0014CE  6E26               	movwf	((c:___xxtofl@val+3)),c
  4265  0014D0  6E27               	movlw	(01h)&0ffh
  4266  0014D2  0E01               	
  4267                           	call	___xxtofl
  4268  0014D4  EC95  F01A         	movff	0+?___xxtofl,(set_pwm1_percent@value)
  4269  0014D8  C024  F09C         	movff	1+?___xxtofl,(set_pwm1_percent@value+1)
  4270  0014DC  C025  F09D         	movff	2+?___xxtofl,(set_pwm1_percent@value+2)
  4271  0014E0  C026  F09E         	movff	3+?___xxtofl,(set_pwm1_percent@value+3)
  4272  0014E4  C027  F09F         	
  4273                           	call	_set_pwm1_percent	;wreg free
  4274  0014E8  ECE2  F01F         	goto	l5883
  4275  0014EC  EF7A  F00A         	line	334
  4276                           	
  4277                           l303:
  4278  0014F0                     	goto	l5883
  4279  0014F0  EF7A  F00A         	
  4280                           l301:
  4281  0014F4                     	line	335
  4282                           	
  4283                           l5883:
  4284  0014F4                     ;main.c: 334: }
  4285                           ;main.c: 335: coolerON = 1;
  4286                           	movlw	low(01h)
  4287  0014F4  0E01               	movlb	1	; () banked
  4288  0014F6  0101               	movwf	((_coolerON))&0ffh
  4289  0014F8  6F5D               	line	336
  4290                           	
  4291                           l5885:; BSR set to: 1
  4292  0014FA                     
  4293                           ;main.c: 336: pwd_Timer3(0);
  4294                           	movlw	high(0)
  4295  0014FA  0E00               	movwf	((c:pwd_Timer3@limit+1)),c
  4296  0014FC  6E25               	movlw	low(0)
  4297  0014FE  0E00               	movwf	((c:pwd_Timer3@limit)),c
  4298  001500  6E24               	call	_pwd_Timer3	;wreg free
  4299  001502  EC8B  F021         	goto	l5887
  4300  001506  EF85  F00A         	line	338
  4301                           	
  4302                           l299:
  4303  00150A                     	line	339
  4304                           	
  4305                           l5887:
  4306  00150A                     ;main.c: 338: }
  4307                           ;main.c: 339: if (temp < (sp - HS)) {
  4308                           	movff	(_temp),(___flge@ff1)
  4309  00150A  C14F  F094         	movff	(_temp+1),(___flge@ff1+1)
  4310  00150E  C150  F095         	movff	(_temp+2),(___flge@ff1+2)
  4311  001512  C151  F096         	movff	(_temp+3),(___flge@ff1+3)
  4312  001516  C152  F097         	movff	(_sp),(___fladd@a)
  4313  00151A  C157  F084         	movff	(_sp+1),(___fladd@a+1)
  4314  00151E  C158  F085         	movff	(_sp+2),(___fladd@a+2)
  4315  001522  C159  F086         	movff	(_sp+3),(___fladd@a+3)
  4316  001526  C15A  F087         	movff	(c:_HS),(c:___xxtofl@val)
  4317  00152A  C054  F024         	movff	(c:_HS+1),(c:___xxtofl@val+1)
  4318  00152E  C055  F025         	movlw	0
  4319  001532  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  4320  001534  BE25               	movlw	-1
  4321  001536  0EFF               	movwf	((c:___xxtofl@val+2)),c
  4322  001538  6E26               	movwf	((c:___xxtofl@val+3)),c
  4323  00153A  6E27               	movlw	(01h)&0ffh
  4324  00153C  0E01               	
  4325                           	call	___xxtofl
  4326  00153E  EC95  F01A         	movff	0+?___xxtofl,(c:___flneg@f1)
  4327  001542  C024  F032         	movff	1+?___xxtofl,(c:___flneg@f1+1)
  4328  001546  C025  F033         	movff	2+?___xxtofl,(c:___flneg@f1+2)
  4329  00154A  C026  F034         	movff	3+?___xxtofl,(c:___flneg@f1+3)
  4330  00154E  C027  F035         	
  4331                           	call	___flneg	;wreg free
  4332  001552  EC3E  F023         	movff	0+?___flneg,(___fladd@b)
  4333  001556  C032  F080         	movff	1+?___flneg,(___fladd@b+1)
  4334  00155A  C033  F081         	movff	2+?___flneg,(___fladd@b+2)
  4335  00155E  C034  F082         	movff	3+?___flneg,(___fladd@b+3)
  4336  001562  C035  F083         	
  4337                           	call	___fladd	;wreg free
  4338  001566  EC26  F00E         	movff	0+?___fladd,(___flge@ff2)
  4339  00156A  C080  F098         	movff	1+?___fladd,(___flge@ff2+1)
  4340  00156E  C081  F099         	movff	2+?___fladd,(___flge@ff2+2)
  4341  001572  C082  F09A         	movff	3+?___fladd,(___flge@ff2+3)
  4342  001576  C083  F09B         	
  4343                           	call	___flge	;wreg free
  4344  00157A  EC35  F01D         	movlb	0	; () banked
  4345  00157E  0100               	btfsc	status,0
  4346  001580  B0D8               	goto	u6741
  4347  001582  EFC5  F00A         	goto	u6740
  4348  001586  EFC7  F00A         u6741:
  4349  00158A                     	goto	l5895
  4350  00158A  EFDD  F00A         u6740:
  4351  00158E                     	line	340
  4352                           	
  4353                           l5889:; BSR set to: 0
  4354  00158E                     
  4355                           ;main.c: 340: pwd_Timer3(5);
  4356                           	movlw	high(05h)
  4357  00158E  0E00               	movwf	((c:pwd_Timer3@limit+1)),c
  4358  001590  6E25               	movlw	low(05h)
  4359  001592  0E05               	movwf	((c:pwd_Timer3@limit)),c
  4360  001594  6E24               	call	_pwd_Timer3	;wreg free
  4361  001596  EC8B  F021         	line	342
  4362                           	
  4363                           l5891:
  4364  00159A                     ;main.c: 342: coolerON = 0;
  4365                           	movlw	low(0)
  4366  00159A  0E00               	movlb	1	; () banked
  4367  00159C  0101               	movwf	((_coolerON))&0ffh
  4368  00159E  6F5D               	line	343
  4369                           	
  4370                           l5893:; BSR set to: 1
  4371  0015A0                     
  4372                           ;main.c: 343: set_pwm1_percent(0);
  4373                           	movlw	low(normalize32(0.0000000000000000))
  4374  0015A0  0E00               	movlb	0	; () banked
  4375  0015A2  0100               	movwf	((set_pwm1_percent@value))&0ffh
  4376  0015A4  6F9C               	movlw	high(normalize32(0.0000000000000000))
  4377  0015A6  0E00               	movwf	((set_pwm1_percent@value+1))&0ffh
  4378  0015A8  6F9D               	movlw	low highword(normalize32(0.0000000000000000))
  4379  0015AA  0E00               	movwf	((set_pwm1_percent@value+2))&0ffh
  4380  0015AC  6F9E               	movlw	high highword(normalize32(0.0000000000000000))
  4381  0015AE  0E00               	movwf	((set_pwm1_percent@value+3))&0ffh
  4382  0015B0  6F9F               	call	_set_pwm1_percent	;wreg free
  4383  0015B2  ECE2  F01F         	goto	l5895
  4384  0015B6  EFDD  F00A         	line	344
  4385                           	
  4386                           l304:
  4387  0015BA                     	line	345
  4388                           	
  4389                           l5895:
  4390  0015BA                     ;main.c: 344: }
  4391                           ;main.c: 345: lcd_gotoxy(10, 3);
  4392                           	movlw	low(03h)
  4393  0015BA  0E03               	movwf	((c:lcd_gotoxy@y)),c
  4394  0015BC  6E28               	movlw	(0Ah)&0ffh
  4395  0015BE  0E0A               	
  4396                           	call	_lcd_gotoxy
  4397  0015C0  EC46  F022         	line	346
  4398                           	
  4399                           l5897:
  4400  0015C4                     ;main.c: 346: int RPS = RPS_count;
  4401                           	movff	(_RPS_count),(main@RPS)
  4402  0015C4  C15B  F128         	movff	(_RPS_count+1),(main@RPS+1)
  4403  0015C8  C15C  F129         	line	347
  4404                           	
  4405                           l5899:
  4406  0015CC                     ;main.c: 347: sprintf(Buffer, " R=%05.02f\n", RPS / 7.0);
  4407                           	movff	(main@RPS),(c:___xxtofl@val)
  4408  0015CC  C128  F024         	movff	(main@RPS+1),(c:___xxtofl@val+1)
  4409  0015D0  C129  F025         	movlw	0
  4410  0015D4  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  4411  0015D6  BE25               	movlw	-1
  4412  0015D8  0EFF               	movwf	((c:___xxtofl@val+2)),c
  4413  0015DA  6E26               	movwf	((c:___xxtofl@val+3)),c
  4414  0015DC  6E27               	movlw	(01h)&0ffh
  4415  0015DE  0E01               	
  4416                           	call	___xxtofl
  4417  0015E0  EC95  F01A         	movff	0+?___xxtofl,(c:___fldiv@b)
  4418  0015E4  C024  F045         	movff	1+?___xxtofl,(c:___fldiv@b+1)
  4419  0015E8  C025  F046         	movff	2+?___xxtofl,(c:___fldiv@b+2)
  4420  0015EC  C026  F047         	movff	3+?___xxtofl,(c:___fldiv@b+3)
  4421  0015F0  C027  F048         	
  4422                           	movlw	low(normalize32(7.0000000000000000))
  4423  0015F4  0E00               	movwf	((c:___fldiv@a)),c
  4424  0015F6  6E49               	movlw	high(normalize32(7.0000000000000000))
  4425  0015F8  0E00               	movwf	((c:___fldiv@a+1)),c
  4426  0015FA  6E4A               	movlw	low highword(normalize32(7.0000000000000000))
  4427  0015FC  0EE0               	movwf	((c:___fldiv@a+2)),c
  4428  0015FE  6E4B               	movlw	high highword(normalize32(7.0000000000000000))
  4429  001600  0E40               	movwf	((c:___fldiv@a+3)),c
  4430  001602  6E4C               	call	___fldiv	;wreg free
  4431  001604  EC6F  F015         	movff	0+?___fldiv,(_main$1712)
  4432  001608  C045  F144         	movff	1+?___fldiv,(_main$1712+1)
  4433  00160C  C046  F145         	movff	2+?___fldiv,(_main$1712+2)
  4434  001610  C047  F146         	movff	3+?___fldiv,(_main$1712+3)
  4435  001614  C048  F147         	
  4436                           	
  4437                           l5901:
  4438  001618                     ;main.c: 347: sprintf(Buffer, " R=%05.02f\n", RPS / 7.0);
  4439                           		movlw	low(main@Buffer)
  4440  001618  0E00               	movlb	0	; () banked
  4441  00161A  0100               	movwf	((sprintf@sp))&0ffh
  4442  00161C  6FA0               	movlw	high(main@Buffer)
  4443  00161E  0E01               	movwf	((sprintf@sp+1))&0ffh
  4444  001620  6FA1               
  4445                           		movlw	low(STR_10)
  4446  001622  0EBB               	movwf	((sprintf@f))&0ffh
  4447  001624  6FA2               	movlw	high(STR_10)
  4448  001626  0EFF               	movwf	((sprintf@f+1))&0ffh
  4449  001628  6FA3               
  4450                           	movff	(_main$1712),0+(?_sprintf+04h)
  4451  00162A  C144  F0A4         	movff	(_main$1712+1),1+(?_sprintf+04h)
  4452  00162E  C145  F0A5         	movff	(_main$1712+2),2+(?_sprintf+04h)
  4453  001632  C146  F0A6         	movff	(_main$1712+3),3+(?_sprintf+04h)
  4454  001636  C147  F0A7         	call	_sprintf	;wreg free
  4455  00163A  EC09  F000         	line	348
  4456                           	
  4457                           l5903:
  4458  00163E                     ;main.c: 348: lcd_puts(Buffer);
  4459                           		movlw	low(main@Buffer)
  4460  00163E  0E00               	movwf	((c:lcd_puts@s)),c
  4461  001640  6E2C               	movlw	high(main@Buffer)
  4462  001642  0E01               	movwf	((c:lcd_puts@s+1)),c
  4463  001644  6E2D               
  4464                           	call	_lcd_puts	;wreg free
  4465  001646  EC7B  F023         	line	349
  4466                           ;main.c: 349: } else if (ot < 40) {
  4467                           	goto	l284
  4468  00164A  EF84  F007         	
  4469                           l298:
  4470  00164E                     	
  4471                           l5905:
  4472  00164E                     	movff	(_ot),(___flge@ff1)
  4473  00164E  C153  F094         	movff	(_ot+1),(___flge@ff1+1)
  4474  001652  C154  F095         	movff	(_ot+2),(___flge@ff1+2)
  4475  001656  C155  F096         	movff	(_ot+3),(___flge@ff1+3)
  4476  00165A  C156  F097         	movlw	low(normalize32(40.000000000000000))
  4477  00165E  0E00               	movlb	0	; () banked
  4478  001660  0100               	movwf	((___flge@ff2))&0ffh
  4479  001662  6F98               	movlw	high(normalize32(40.000000000000000))
  4480  001664  0E00               	movwf	((___flge@ff2+1))&0ffh
  4481  001666  6F99               	movlw	low highword(normalize32(40.000000000000000))
  4482  001668  0E20               	movwf	((___flge@ff2+2))&0ffh
  4483  00166A  6F9A               	movlw	high highword(normalize32(40.000000000000000))
  4484  00166C  0E42               	movwf	((___flge@ff2+3))&0ffh
  4485  00166E  6F9B               	call	___flge	;wreg free
  4486  001670  EC35  F01D         	movlb	0	; () banked
  4487  001674  0100               	btfsc	status,0
  4488  001676  B0D8               	goto	u6751
  4489  001678  EF40  F00B         	goto	u6750
  4490  00167C  EF42  F00B         u6751:
  4491  001680                     	goto	l5955
  4492  001680  EF6D  F00C         u6750:
  4493  001684                     	line	350
  4494                           	
  4495                           l5907:; BSR set to: 0
  4496  001684                     
  4497                           ;main.c: 350: lcd_gotoxy(1, 4);
  4498                           	movlw	low(04h)
  4499  001684  0E04               	movwf	((c:lcd_gotoxy@y)),c
  4500  001686  6E28               	movlw	(01h)&0ffh
  4501  001688  0E01               	
  4502                           	call	_lcd_gotoxy
  4503  00168A  EC46  F022         	line	351
  4504                           	
  4505                           l5909:
  4506  00168E                     ;main.c: 351: sprintf(Buffer, "MD:Auto HT");
  4507                           		movlw	low(main@Buffer)
  4508  00168E  0E00               	movlb	0	; () banked
  4509  001690  0100               	movwf	((sprintf@sp))&0ffh
  4510  001692  6FA0               	movlw	high(main@Buffer)
  4511  001694  0E01               	movwf	((sprintf@sp+1))&0ffh
  4512  001696  6FA1               
  4513                           		movlw	low(STR_11)
  4514  001698  0EDD               	movwf	((sprintf@f))&0ffh
  4515  00169A  6FA2               	movlw	high(STR_11)
  4516  00169C  0EFF               	movwf	((sprintf@f+1))&0ffh
  4517  00169E  6FA3               
  4518                           	call	_sprintf	;wreg free
  4519  0016A0  EC09  F000         	line	352
  4520                           	
  4521                           l5911:
  4522  0016A4                     ;main.c: 352: lcd_puts(Buffer);
  4523                           		movlw	low(main@Buffer)
  4524  0016A4  0E00               	movwf	((c:lcd_puts@s)),c
  4525  0016A6  6E2C               	movlw	high(main@Buffer)
  4526  0016A8  0E01               	movwf	((c:lcd_puts@s+1)),c
  4527  0016AA  6E2D               
  4528                           	call	_lcd_puts	;wreg free
  4529  0016AC  EC7B  F023         	line	353
  4530                           	
  4531                           l5913:
  4532  0016B0                     ;main.c: 353: int HeatError = sp - temp;
  4533                           	movff	(_sp),(___fladd@a)
  4534  0016B0  C157  F084         	movff	(_sp+1),(___fladd@a+1)
  4535  0016B4  C158  F085         	movff	(_sp+2),(___fladd@a+2)
  4536  0016B8  C159  F086         	movff	(_sp+3),(___fladd@a+3)
  4537  0016BC  C15A  F087         	movff	(_temp),(c:___flneg@f1)
  4538  0016C0  C14F  F032         	movff	(_temp+1),(c:___flneg@f1+1)
  4539  0016C4  C150  F033         	movff	(_temp+2),(c:___flneg@f1+2)
  4540  0016C8  C151  F034         	movff	(_temp+3),(c:___flneg@f1+3)
  4541  0016CC  C152  F035         	call	___flneg	;wreg free
  4542  0016D0  EC3E  F023         	movff	0+?___flneg,(___fladd@b)
  4543  0016D4  C032  F080         	movff	1+?___flneg,(___fladd@b+1)
  4544  0016D8  C033  F081         	movff	2+?___flneg,(___fladd@b+2)
  4545  0016DC  C034  F082         	movff	3+?___flneg,(___fladd@b+3)
  4546  0016E0  C035  F083         	
  4547                           	call	___fladd	;wreg free
  4548  0016E4  EC26  F00E         	movff	0+?___fladd,(___fltol@f1)
  4549  0016E8  C080  F094         	movff	1+?___fladd,(___fltol@f1+1)
  4550  0016EC  C081  F095         	movff	2+?___fladd,(___fltol@f1+2)
  4551  0016F0  C082  F096         	movff	3+?___fladd,(___fltol@f1+3)
  4552  0016F4  C083  F097         	
  4553                           	call	___fltol	;wreg free
  4554  0016F8  ECEA  F01D         	movff	0+?___fltol,(main@HeatError)
  4555  0016FC  C094  F140         	movff	1+?___fltol,(main@HeatError+1)
  4556  001700  C095  F141         	line	354
  4557                           	
  4558                           l5915:
  4559  001704                     ;main.c: 354: if (HeatError > 0) {
  4560                           	movlb	1	; () banked
  4561  001704  0101               	btfsc	((main@HeatError+1))&0ffh,7
  4562  001706  BF41               	goto	u6761
  4563  001708  EF8E  F00B         	movf	((main@HeatError+1))&0ffh,w
  4564  00170C  5141               	bnz	u6760
  4565  00170E  E108               	decf	((main@HeatError))&0ffh,w
  4566  001710  0540               	btfss	status,0
  4567  001712  A0D8               	goto	u6761
  4568  001714  EF8E  F00B         	goto	u6760
  4569  001718  EF90  F00B         
  4570                           u6761:
  4571  00171C                     	goto	l5939
  4572  00171C  EFF7  F00B         u6760:
  4573  001720                     	line	355
  4574                           	
  4575                           l5917:; BSR set to: 1
  4576  001720                     
  4577                           ;main.c: 355: coolerON = 0;
  4578                           	movlw	low(0)
  4579  001720  0E00               	movwf	((_coolerON))&0ffh
  4580  001722  6F5D               	line	356
  4581                           	
  4582                           l5919:; BSR set to: 1
  4583  001724                     
  4584                           ;main.c: 356: PORTCbits.RC2 = 0;
  4585                           	bcf	((c:3970)),c,2	;volatile
  4586  001724  9482               	line	357
  4587                           	
  4588                           l5921:; BSR set to: 1
  4589  001726                     
  4590                           ;main.c: 357: set_pwm1_percent(0);
  4591                           	movlw	low(normalize32(0.0000000000000000))
  4592  001726  0E00               	movlb	0	; () banked
  4593  001728  0100               	movwf	((set_pwm1_percent@value))&0ffh
  4594  00172A  6F9C               	movlw	high(normalize32(0.0000000000000000))
  4595  00172C  0E00               	movwf	((set_pwm1_percent@value+1))&0ffh
  4596  00172E  6F9D               	movlw	low highword(normalize32(0.0000000000000000))
  4597  001730  0E00               	movwf	((set_pwm1_percent@value+2))&0ffh
  4598  001732  6F9E               	movlw	high highword(normalize32(0.0000000000000000))
  4599  001734  0E00               	movwf	((set_pwm1_percent@value+3))&0ffh
  4600  001736  6F9F               	call	_set_pwm1_percent	;wreg free
  4601  001738  ECE2  F01F         	line	359
  4602                           	
  4603                           l5923:
  4604  00173C                     ;main.c: 359: percentHeatCounter = HeatError;
  4605                           	movff	(main@HeatError),(c:_percentHeatCounter)
  4606  00173C  C140  F05C         	movff	(main@HeatError+1),(c:_percentHeatCounter+1)
  4607  001740  C141  F05D         	line	360
  4608                           	
  4609                           l5925:
  4610  001744                     ;main.c: 360: if (sp > 52)
  4611                           	movlw	low(normalize32(52.000000000000000))
  4612  001744  0E00               	movlb	0	; () banked
  4613  001746  0100               	movwf	((___flge@ff1))&0ffh
  4614  001748  6F94               	movlw	high(normalize32(52.000000000000000))
  4615  00174A  0E00               	movwf	((___flge@ff1+1))&0ffh
  4616  00174C  6F95               	movlw	low highword(normalize32(52.000000000000000))
  4617  00174E  0E50               	movwf	((___flge@ff1+2))&0ffh
  4618  001750  6F96               	movlw	high highword(normalize32(52.000000000000000))
  4619  001752  0E42               	movwf	((___flge@ff1+3))&0ffh
  4620  001754  6F97               	movff	(_sp),(___flge@ff2)
  4621  001756  C157  F098         	movff	(_sp+1),(___flge@ff2+1)
  4622  00175A  C158  F099         	movff	(_sp+2),(___flge@ff2+2)
  4623  00175E  C159  F09A         	movff	(_sp+3),(___flge@ff2+3)
  4624  001762  C15A  F09B         	call	___flge	;wreg free
  4625  001766  EC35  F01D         	movlb	0	; () banked
  4626  00176A  0100               	btfsc	status,0
  4627  00176C  B0D8               	goto	u6771
  4628  00176E  EFBB  F00B         	goto	u6770
  4629  001772  EFBD  F00B         u6771:
  4630  001776                     	goto	l5929
  4631  001776  EFC3  F00B         u6770:
  4632  00177A                     	line	361
  4633                           	
  4634                           l5927:; BSR set to: 0
  4635  00177A                     
  4636                           ;main.c: 361: percentHeatCounter = 10;
  4637                           	movlw	high(0Ah)
  4638  00177A  0E00               	movwf	((c:_percentHeatCounter+1)),c
  4639  00177C  6E5D               	movlw	low(0Ah)
  4640  00177E  0E0A               	movwf	((c:_percentHeatCounter)),c
  4641  001780  6E5C               	goto	l5937
  4642  001782  EFEF  F00B         	line	362
  4643                           	
  4644                           l308:; BSR set to: 0
  4645  001786                     
  4646                           	
  4647                           l5929:; BSR set to: 0
  4648  001786                     
  4649                           ;main.c: 362: else if (percentHeatCounter < 5)
  4650                           	btfsc	((c:_percentHeatCounter+1)),c,7
  4651  001786  BE5D               	goto	u6780
  4652  001788  EFD1  F00B         	movf	((c:_percentHeatCounter+1)),c,w
  4653  00178C  505D               	bnz	u6781
  4654  00178E  E107               	movlw	5
  4655  001790  0E05               	subwf	 ((c:_percentHeatCounter)),c,w
  4656  001792  5C5C               	btfsc	status,0
  4657  001794  B0D8               	goto	u6781
  4658  001796  EFCF  F00B         	goto	u6780
  4659  00179A  EFD1  F00B         
  4660                           u6781:
  4661  00179E                     	goto	l5933
  4662  00179E  EFD7  F00B         u6780:
  4663  0017A2                     	line	363
  4664                           	
  4665                           l5931:; BSR set to: 0
  4666  0017A2                     
  4667                           ;main.c: 363: percentHeatCounter = 5;
  4668                           	movlw	high(05h)
  4669  0017A2  0E00               	movwf	((c:_percentHeatCounter+1)),c
  4670  0017A4  6E5D               	movlw	low(05h)
  4671  0017A6  0E05               	movwf	((c:_percentHeatCounter)),c
  4672  0017A8  6E5C               	goto	l5937
  4673  0017AA  EFEF  F00B         	line	364
  4674                           	
  4675                           l310:; BSR set to: 0
  4676  0017AE                     
  4677                           	
  4678                           l5933:; BSR set to: 0
  4679  0017AE                     
  4680                           ;main.c: 364: else if (percentHeatCounter > 10)
  4681                           	btfsc	((c:_percentHeatCounter+1)),c,7
  4682  0017AE  BE5D               	goto	u6791
  4683  0017B0  EFE3  F00B         	movf	((c:_percentHeatCounter+1)),c,w
  4684  0017B4  505D               	bnz	u6790
  4685  0017B6  E109               	movlw	11
  4686  0017B8  0E0B               	subwf	 ((c:_percentHeatCounter)),c,w
  4687  0017BA  5C5C               	btfss	status,0
  4688  0017BC  A0D8               	goto	u6791
  4689  0017BE  EFE3  F00B         	goto	u6790
  4690  0017C2  EFE5  F00B         
  4691                           u6791:
  4692  0017C6                     	goto	l5937
  4693  0017C6  EFEF  F00B         u6790:
  4694  0017CA                     	line	365
  4695                           	
  4696                           l5935:; BSR set to: 0
  4697  0017CA                     
  4698                           ;main.c: 365: percentHeatCounter = 10;
  4699                           	movlw	high(0Ah)
  4700  0017CA  0E00               	movwf	((c:_percentHeatCounter+1)),c
  4701  0017CC  6E5D               	movlw	low(0Ah)
  4702  0017CE  0E0A               	movwf	((c:_percentHeatCounter)),c
  4703  0017D0  6E5C               	goto	l5937
  4704  0017D2  EFEF  F00B         	
  4705                           l312:; BSR set to: 0
  4706  0017D6                     
  4707                           	goto	l5937
  4708  0017D6  EFEF  F00B         	line	366
  4709                           	
  4710                           l311:; BSR set to: 0
  4711  0017DA                     
  4712                           	goto	l5937
  4713  0017DA  EFEF  F00B         	
  4714                           l309:; BSR set to: 0
  4715  0017DE                     
  4716                           	
  4717                           l5937:; BSR set to: 0
  4718  0017DE                     
  4719                           ;main.c: 366: pwd_Timer3(percentHeatCounter);
  4720                           	movff	(c:_percentHeatCounter),(c:pwd_Timer3@limit)
  4721  0017DE  C05C  F024         	movff	(c:_percentHeatCounter+1),(c:pwd_Timer3@limit+1)
  4722  0017E2  C05D  F025         	call	_pwd_Timer3	;wreg free
  4723  0017E6  EC8B  F021         	line	367
  4724                           ;main.c: 367: } else if (temp > (sp + HS)) {
  4725                           	goto	l5945
  4726  0017EA  EF40  F00C         	
  4727                           l307:
  4728  0017EE                     	
  4729                           l5939:
  4730  0017EE                     	movff	(_sp),(___fladd@a)
  4731  0017EE  C157  F084         	movff	(_sp+1),(___fladd@a+1)
  4732  0017F2  C158  F085         	movff	(_sp+2),(___fladd@a+2)
  4733  0017F6  C159  F086         	movff	(_sp+3),(___fladd@a+3)
  4734  0017FA  C15A  F087         	movff	(c:_HS),(c:___xxtofl@val)
  4735  0017FE  C054  F024         	movff	(c:_HS+1),(c:___xxtofl@val+1)
  4736  001802  C055  F025         	movlw	0
  4737  001806  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  4738  001808  BE25               	movlw	-1
  4739  00180A  0EFF               	movwf	((c:___xxtofl@val+2)),c
  4740  00180C  6E26               	movwf	((c:___xxtofl@val+3)),c
  4741  00180E  6E27               	movlw	(01h)&0ffh
  4742  001810  0E01               	
  4743                           	call	___xxtofl
  4744  001812  EC95  F01A         	movff	0+?___xxtofl,(___fladd@b)
  4745  001816  C024  F080         	movff	1+?___xxtofl,(___fladd@b+1)
  4746  00181A  C025  F081         	movff	2+?___xxtofl,(___fladd@b+2)
  4747  00181E  C026  F082         	movff	3+?___xxtofl,(___fladd@b+3)
  4748  001822  C027  F083         	
  4749                           	call	___fladd	;wreg free
  4750  001826  EC26  F00E         	movff	0+?___fladd,(___flge@ff1)
  4751  00182A  C080  F094         	movff	1+?___fladd,(___flge@ff1+1)
  4752  00182E  C081  F095         	movff	2+?___fladd,(___flge@ff1+2)
  4753  001832  C082  F096         	movff	3+?___fladd,(___flge@ff1+3)
  4754  001836  C083  F097         	
  4755                           	movff	(_temp),(___flge@ff2)
  4756  00183A  C14F  F098         	movff	(_temp+1),(___flge@ff2+1)
  4757  00183E  C150  F099         	movff	(_temp+2),(___flge@ff2+2)
  4758  001842  C151  F09A         	movff	(_temp+3),(___flge@ff2+3)
  4759  001846  C152  F09B         	call	___flge	;wreg free
  4760  00184A  EC35  F01D         	movlb	0	; () banked
  4761  00184E  0100               	btfsc	status,0
  4762  001850  B0D8               	goto	u6801
  4763  001852  EF2D  F00C         	goto	u6800
  4764  001856  EF2F  F00C         u6801:
  4765  00185A                     	goto	l5945
  4766  00185A  EF40  F00C         u6800:
  4767  00185E                     	line	368
  4768                           	
  4769                           l5941:; BSR set to: 0
  4770  00185E                     
  4771                           ;main.c: 368: heaterON = 0;
  4772                           	movlw	low(0)
  4773  00185E  0E00               	movlb	1	; () banked
  4774  001860  0101               	movwf	((_heaterON))&0ffh
  4775  001862  6F5E               	line	369
  4776                           ;main.c: 369: percentHeatCounter = 0;
  4777                           	movlw	high(0)
  4778  001864  0E00               	movwf	((c:_percentHeatCounter+1)),c
  4779  001866  6E5D               	movlw	low(0)
  4780  001868  0E00               	movwf	((c:_percentHeatCounter)),c
  4781  00186A  6E5C               	line	370
  4782                           	
  4783                           l5943:; BSR set to: 1
  4784  00186C                     
  4785                           ;main.c: 370: pwd_Timer3(0);
  4786                           	movlw	high(0)
  4787  00186C  0E00               	movwf	((c:pwd_Timer3@limit+1)),c
  4788  00186E  6E25               	movlw	low(0)
  4789  001870  0E00               	movwf	((c:pwd_Timer3@limit)),c
  4790  001872  6E24               	call	_pwd_Timer3	;wreg free
  4791  001874  EC8B  F021         	goto	l5945
  4792  001878  EF40  F00C         	line	371
  4793                           	
  4794                           l314:
  4795  00187C                     	goto	l5945
  4796  00187C  EF40  F00C         	line	372
  4797                           	
  4798                           l313:
  4799  001880                     	
  4800                           l5945:
  4801  001880                     ;main.c: 371: }
  4802                           ;main.c: 372: lcd_gotoxy(10, 3);
  4803                           	movlw	low(03h)
  4804  001880  0E03               	movwf	((c:lcd_gotoxy@y)),c
  4805  001882  6E28               	movlw	(0Ah)&0ffh
  4806  001884  0E0A               	
  4807                           	call	_lcd_gotoxy
  4808  001886  EC46  F022         	line	373
  4809                           	
  4810                           l5947:
  4811  00188A                     ;main.c: 373: sprintf(Buffer, " H:%3d", percentHeatCounter * 10);
  4812                           	movff	(c:_percentHeatCounter),(c:___wmul@multiplier)
  4813  00188A  C05C  F01E         	movff	(c:_percentHeatCounter+1),(c:___wmul@multiplier+1)
  4814  00188E  C05D  F01F         	movlw	high(0Ah)
  4815  001892  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  4816  001894  6E21               	movlw	low(0Ah)
  4817  001896  0E0A               	movwf	((c:___wmul@multiplicand)),c
  4818  001898  6E20               	call	___wmul	;wreg free
  4819  00189A  ECF9  F023         	movff	0+?___wmul,(_main$1710)
  4820  00189E  C01E  F148         	movff	1+?___wmul,(_main$1710+1)
  4821  0018A2  C01F  F149         	
  4822                           l5949:
  4823  0018A6                     ;main.c: 373: sprintf(Buffer, " H:%3d", percentHeatCounter * 10);
  4824                           		movlw	low(main@Buffer)
  4825  0018A6  0E00               	movlb	0	; () banked
  4826  0018A8  0100               	movwf	((sprintf@sp))&0ffh
  4827  0018AA  6FA0               	movlw	high(main@Buffer)
  4828  0018AC  0E01               	movwf	((sprintf@sp+1))&0ffh
  4829  0018AE  6FA1               
  4830                           		movlw	low(STR_12)
  4831  0018B0  0EF7               	movwf	((sprintf@f))&0ffh
  4832  0018B2  6FA2               	movlw	high(STR_12)
  4833  0018B4  0EFF               	movwf	((sprintf@f+1))&0ffh
  4834  0018B6  6FA3               
  4835                           	movff	(_main$1710),0+(?_sprintf+04h)
  4836  0018B8  C148  F0A4         	movff	(_main$1710+1),1+(?_sprintf+04h)
  4837  0018BC  C149  F0A5         	call	_sprintf	;wreg free
  4838  0018C0  EC09  F000         	line	374
  4839                           	
  4840                           l5951:
  4841  0018C4                     ;main.c: 374: lcd_puts(Buffer);
  4842                           		movlw	low(main@Buffer)
  4843  0018C4  0E00               	movwf	((c:lcd_puts@s)),c
  4844  0018C6  6E2C               	movlw	high(main@Buffer)
  4845  0018C8  0E01               	movwf	((c:lcd_puts@s+1)),c
  4846  0018CA  6E2D               
  4847                           	call	_lcd_puts	;wreg free
  4848  0018CC  EC7B  F023         	line	375
  4849                           	
  4850                           l5953:
  4851  0018D0                     ;main.c: 375: lcd_putc('%');
  4852                           	movlw	(025h)&0ffh
  4853  0018D0  0E25               	
  4854                           	call	_lcd_putc
  4855  0018D2  EC0F  F022         	line	376
  4856                           ;main.c: 376: } else {
  4857                           	goto	l284
  4858  0018D6  EF84  F007         	
  4859                           l306:
  4860  0018DA                     	line	377
  4861                           	
  4862                           l5955:
  4863  0018DA                     ;main.c: 377: lcd_gotoxy(1, 4);
  4864                           	movlw	low(04h)
  4865  0018DA  0E04               	movwf	((c:lcd_gotoxy@y)),c
  4866  0018DC  6E28               	movlw	(01h)&0ffh
  4867  0018DE  0E01               	
  4868                           	call	_lcd_gotoxy
  4869  0018E0  EC46  F022         	line	378
  4870                           	
  4871                           l5957:
  4872  0018E4                     ;main.c: 378: sprintf(Buffer, "MD:Auto HC");
  4873                           		movlw	low(main@Buffer)
  4874  0018E4  0E00               	movlb	0	; () banked
  4875  0018E6  0100               	movwf	((sprintf@sp))&0ffh
  4876  0018E8  6FA0               	movlw	high(main@Buffer)
  4877  0018EA  0E01               	movwf	((sprintf@sp+1))&0ffh
  4878  0018EC  6FA1               
  4879                           		movlw	low(STR_13)
  4880  0018EE  0EC7               	movwf	((sprintf@f))&0ffh
  4881  0018F0  6FA2               	movlw	high(STR_13)
  4882  0018F2  0EFF               	movwf	((sprintf@f+1))&0ffh
  4883  0018F4  6FA3               
  4884                           	call	_sprintf	;wreg free
  4885  0018F6  EC09  F000         	line	379
  4886                           	
  4887                           l5959:
  4888  0018FA                     ;main.c: 379: lcd_puts(Buffer);
  4889                           		movlw	low(main@Buffer)
  4890  0018FA  0E00               	movwf	((c:lcd_puts@s)),c
  4891  0018FC  6E2C               	movlw	high(main@Buffer)
  4892  0018FE  0E01               	movwf	((c:lcd_puts@s+1)),c
  4893  001900  6E2D               
  4894                           	call	_lcd_puts	;wreg free
  4895  001902  EC7B  F023         	line	380
  4896                           	
  4897                           l5961:
  4898  001906                     ;main.c: 380: int HeatError1 = sp - temp;
  4899                           	movff	(_sp),(___fladd@a)
  4900  001906  C157  F084         	movff	(_sp+1),(___fladd@a+1)
  4901  00190A  C158  F085         	movff	(_sp+2),(___fladd@a+2)
  4902  00190E  C159  F086         	movff	(_sp+3),(___fladd@a+3)
  4903  001912  C15A  F087         	movff	(_temp),(c:___flneg@f1)
  4904  001916  C14F  F032         	movff	(_temp+1),(c:___flneg@f1+1)
  4905  00191A  C150  F033         	movff	(_temp+2),(c:___flneg@f1+2)
  4906  00191E  C151  F034         	movff	(_temp+3),(c:___flneg@f1+3)
  4907  001922  C152  F035         	call	___flneg	;wreg free
  4908  001926  EC3E  F023         	movff	0+?___flneg,(___fladd@b)
  4909  00192A  C032  F080         	movff	1+?___flneg,(___fladd@b+1)
  4910  00192E  C033  F081         	movff	2+?___flneg,(___fladd@b+2)
  4911  001932  C034  F082         	movff	3+?___flneg,(___fladd@b+3)
  4912  001936  C035  F083         	
  4913                           	call	___fladd	;wreg free
  4914  00193A  EC26  F00E         	movff	0+?___fladd,(___fltol@f1)
  4915  00193E  C080  F094         	movff	1+?___fladd,(___fltol@f1+1)
  4916  001942  C081  F095         	movff	2+?___fladd,(___fltol@f1+2)
  4917  001946  C082  F096         	movff	3+?___fladd,(___fltol@f1+3)
  4918  00194A  C083  F097         	
  4919                           	call	___fltol	;wreg free
  4920  00194E  ECEA  F01D         	movff	0+?___fltol,(main@HeatError1)
  4921  001952  C094  F142         	movff	1+?___fltol,(main@HeatError1+1)
  4922  001956  C095  F143         	line	381
  4923                           	
  4924                           l5963:
  4925  00195A                     ;main.c: 381: if (HeatError1 > 0) {
  4926                           	movlb	1	; () banked
  4927  00195A  0101               	btfsc	((main@HeatError1+1))&0ffh,7
  4928  00195C  BF43               	goto	u6811
  4929  00195E  EFB9  F00C         	movf	((main@HeatError1+1))&0ffh,w
  4930  001962  5143               	bnz	u6810
  4931  001964  E108               	decf	((main@HeatError1))&0ffh,w
  4932  001966  0542               	btfss	status,0
  4933  001968  A0D8               	goto	u6811
  4934  00196A  EFB9  F00C         	goto	u6810
  4935  00196E  EFBB  F00C         
  4936                           u6811:
  4937  001972                     	goto	l5987
  4938  001972  EF22  F00D         u6810:
  4939  001976                     	line	382
  4940                           	
  4941                           l5965:; BSR set to: 1
  4942  001976                     
  4943                           ;main.c: 382: coolerON = 0;
  4944                           	movlw	low(0)
  4945  001976  0E00               	movwf	((_coolerON))&0ffh
  4946  001978  6F5D               	line	383
  4947                           	
  4948                           l5967:; BSR set to: 1
  4949  00197A                     
  4950                           ;main.c: 383: RC2 = 0;
  4951                           	bcf	c:(31762/8),(31762)&7	;volatile
  4952  00197A  9482               	line	384
  4953                           	
  4954                           l5969:; BSR set to: 1
  4955  00197C                     
  4956                           ;main.c: 384: set_pwm1_percent(0);
  4957                           	movlw	low(normalize32(0.0000000000000000))
  4958  00197C  0E00               	movlb	0	; () banked
  4959  00197E  0100               	movwf	((set_pwm1_percent@value))&0ffh
  4960  001980  6F9C               	movlw	high(normalize32(0.0000000000000000))
  4961  001982  0E00               	movwf	((set_pwm1_percent@value+1))&0ffh
  4962  001984  6F9D               	movlw	low highword(normalize32(0.0000000000000000))
  4963  001986  0E00               	movwf	((set_pwm1_percent@value+2))&0ffh
  4964  001988  6F9E               	movlw	high highword(normalize32(0.0000000000000000))
  4965  00198A  0E00               	movwf	((set_pwm1_percent@value+3))&0ffh
  4966  00198C  6F9F               	call	_set_pwm1_percent	;wreg free
  4967  00198E  ECE2  F01F         	line	385
  4968                           	
  4969                           l5971:
  4970  001992                     ;main.c: 385: percentHeatCounter = HeatError1;
  4971                           	movff	(main@HeatError1),(c:_percentHeatCounter)
  4972  001992  C142  F05C         	movff	(main@HeatError1+1),(c:_percentHeatCounter+1)
  4973  001996  C143  F05D         	line	386
  4974                           	
  4975                           l5973:
  4976  00199A                     ;main.c: 386: if (sp > 52)
  4977                           	movlw	low(normalize32(52.000000000000000))
  4978  00199A  0E00               	movlb	0	; () banked
  4979  00199C  0100               	movwf	((___flge@ff1))&0ffh
  4980  00199E  6F94               	movlw	high(normalize32(52.000000000000000))
  4981  0019A0  0E00               	movwf	((___flge@ff1+1))&0ffh
  4982  0019A2  6F95               	movlw	low highword(normalize32(52.000000000000000))
  4983  0019A4  0E50               	movwf	((___flge@ff1+2))&0ffh
  4984  0019A6  6F96               	movlw	high highword(normalize32(52.000000000000000))
  4985  0019A8  0E42               	movwf	((___flge@ff1+3))&0ffh
  4986  0019AA  6F97               	movff	(_sp),(___flge@ff2)
  4987  0019AC  C157  F098         	movff	(_sp+1),(___flge@ff2+1)
  4988  0019B0  C158  F099         	movff	(_sp+2),(___flge@ff2+2)
  4989  0019B4  C159  F09A         	movff	(_sp+3),(___flge@ff2+3)
  4990  0019B8  C15A  F09B         	call	___flge	;wreg free
  4991  0019BC  EC35  F01D         	movlb	0	; () banked
  4992  0019C0  0100               	btfsc	status,0
  4993  0019C2  B0D8               	goto	u6821
  4994  0019C4  EFE6  F00C         	goto	u6820
  4995  0019C8  EFE8  F00C         u6821:
  4996  0019CC                     	goto	l5977
  4997  0019CC  EFEE  F00C         u6820:
  4998  0019D0                     	line	387
  4999                           	
  5000                           l5975:; BSR set to: 0
  5001  0019D0                     
  5002                           ;main.c: 387: percentHeatCounter = 10;
  5003                           	movlw	high(0Ah)
  5004  0019D0  0E00               	movwf	((c:_percentHeatCounter+1)),c
  5005  0019D2  6E5D               	movlw	low(0Ah)
  5006  0019D4  0E0A               	movwf	((c:_percentHeatCounter)),c
  5007  0019D6  6E5C               	goto	l5985
  5008  0019D8  EF1A  F00D         	line	388
  5009                           	
  5010                           l317:; BSR set to: 0
  5011  0019DC                     
  5012                           	
  5013                           l5977:; BSR set to: 0
  5014  0019DC                     
  5015                           ;main.c: 388: else if (percentHeatCounter > 10)
  5016                           	btfsc	((c:_percentHeatCounter+1)),c,7
  5017  0019DC  BE5D               	goto	u6831
  5018  0019DE  EFFA  F00C         	movf	((c:_percentHeatCounter+1)),c,w
  5019  0019E2  505D               	bnz	u6830
  5020  0019E4  E109               	movlw	11
  5021  0019E6  0E0B               	subwf	 ((c:_percentHeatCounter)),c,w
  5022  0019E8  5C5C               	btfss	status,0
  5023  0019EA  A0D8               	goto	u6831
  5024  0019EC  EFFA  F00C         	goto	u6830
  5025  0019F0  EFFC  F00C         
  5026                           u6831:
  5027  0019F4                     	goto	l5981
  5028  0019F4  EF02  F00D         u6830:
  5029  0019F8                     	line	389
  5030                           	
  5031                           l5979:; BSR set to: 0
  5032  0019F8                     
  5033                           ;main.c: 389: percentHeatCounter = 10;
  5034                           	movlw	high(0Ah)
  5035  0019F8  0E00               	movwf	((c:_percentHeatCounter+1)),c
  5036  0019FA  6E5D               	movlw	low(0Ah)
  5037  0019FC  0E0A               	movwf	((c:_percentHeatCounter)),c
  5038  0019FE  6E5C               	goto	l5985
  5039  001A00  EF1A  F00D         	line	390
  5040                           	
  5041                           l319:; BSR set to: 0
  5042  001A04                     
  5043                           	
  5044                           l5981:; BSR set to: 0
  5045  001A04                     
  5046                           ;main.c: 390: else if (percentHeatCounter < 5)
  5047                           	btfsc	((c:_percentHeatCounter+1)),c,7
  5048  001A04  BE5D               	goto	u6840
  5049  001A06  EF10  F00D         	movf	((c:_percentHeatCounter+1)),c,w
  5050  001A0A  505D               	bnz	u6841
  5051  001A0C  E107               	movlw	5
  5052  001A0E  0E05               	subwf	 ((c:_percentHeatCounter)),c,w
  5053  001A10  5C5C               	btfsc	status,0
  5054  001A12  B0D8               	goto	u6841
  5055  001A14  EF0E  F00D         	goto	u6840
  5056  001A18  EF10  F00D         
  5057                           u6841:
  5058  001A1C                     	goto	l5985
  5059  001A1C  EF1A  F00D         u6840:
  5060  001A20                     	line	391
  5061                           	
  5062                           l5983:; BSR set to: 0
  5063  001A20                     
  5064                           ;main.c: 391: percentHeatCounter = 5;
  5065                           	movlw	high(05h)
  5066  001A20  0E00               	movwf	((c:_percentHeatCounter+1)),c
  5067  001A22  6E5D               	movlw	low(05h)
  5068  001A24  0E05               	movwf	((c:_percentHeatCounter)),c
  5069  001A26  6E5C               	goto	l5985
  5070  001A28  EF1A  F00D         	
  5071                           l321:; BSR set to: 0
  5072  001A2C                     
  5073                           	goto	l5985
  5074  001A2C  EF1A  F00D         	line	392
  5075                           	
  5076                           l320:; BSR set to: 0
  5077  001A30                     
  5078                           	goto	l5985
  5079  001A30  EF1A  F00D         	
  5080                           l318:; BSR set to: 0
  5081  001A34                     
  5082                           	
  5083                           l5985:; BSR set to: 0
  5084  001A34                     
  5085                           ;main.c: 392: pwd_Timer3(percentHeatCounter);
  5086                           	movff	(c:_percentHeatCounter),(c:pwd_Timer3@limit)
  5087  001A34  C05C  F024         	movff	(c:_percentHeatCounter+1),(c:pwd_Timer3@limit+1)
  5088  001A38  C05D  F025         	call	_pwd_Timer3	;wreg free
  5089  001A3C  EC8B  F021         	line	393
  5090                           ;main.c: 393: } else {
  5091                           	goto	l6005
  5092  001A40  EFB7  F00D         	
  5093                           l316:
  5094  001A44                     	line	394
  5095                           	
  5096                           l5987:
  5097  001A44                     ;main.c: 394: int CoolError1 = (temp - sp);
  5098                           	movff	(_temp),(___fladd@a)
  5099  001A44  C14F  F084         	movff	(_temp+1),(___fladd@a+1)
  5100  001A48  C150  F085         	movff	(_temp+2),(___fladd@a+2)
  5101  001A4C  C151  F086         	movff	(_temp+3),(___fladd@a+3)
  5102  001A50  C152  F087         	movff	(_sp),(c:___flneg@f1)
  5103  001A54  C157  F032         	movff	(_sp+1),(c:___flneg@f1+1)
  5104  001A58  C158  F033         	movff	(_sp+2),(c:___flneg@f1+2)
  5105  001A5C  C159  F034         	movff	(_sp+3),(c:___flneg@f1+3)
  5106  001A60  C15A  F035         	call	___flneg	;wreg free
  5107  001A64  EC3E  F023         	movff	0+?___flneg,(___fladd@b)
  5108  001A68  C032  F080         	movff	1+?___flneg,(___fladd@b+1)
  5109  001A6C  C033  F081         	movff	2+?___flneg,(___fladd@b+2)
  5110  001A70  C034  F082         	movff	3+?___flneg,(___fladd@b+3)
  5111  001A74  C035  F083         	
  5112                           	call	___fladd	;wreg free
  5113  001A78  EC26  F00E         	movff	0+?___fladd,(___fltol@f1)
  5114  001A7C  C080  F094         	movff	1+?___fladd,(___fltol@f1+1)
  5115  001A80  C081  F095         	movff	2+?___fladd,(___fltol@f1+2)
  5116  001A84  C082  F096         	movff	3+?___fladd,(___fltol@f1+3)
  5117  001A88  C083  F097         	
  5118                           	call	___fltol	;wreg free
  5119  001A8C  ECEA  F01D         	movff	0+?___fltol,(main@CoolError1)
  5120  001A90  C094  F12A         	movff	1+?___fltol,(main@CoolError1+1)
  5121  001A94  C095  F12B         	line	395
  5122                           	
  5123                           l5989:
  5124  001A98                     ;main.c: 395: int PWMPersent1 = CoolError1 * 10;
  5125                           	movff	(main@CoolError1),(c:___wmul@multiplier)
  5126  001A98  C12A  F01E         	movff	(main@CoolError1+1),(c:___wmul@multiplier+1)
  5127  001A9C  C12B  F01F         	movlw	high(0Ah)
  5128  001AA0  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  5129  001AA2  6E21               	movlw	low(0Ah)
  5130  001AA4  0E0A               	movwf	((c:___wmul@multiplicand)),c
  5131  001AA6  6E20               	call	___wmul	;wreg free
  5132  001AA8  ECF9  F023         	movff	0+?___wmul,(main@PWMPersent1)
  5133  001AAC  C01E  F14C         	movff	1+?___wmul,(main@PWMPersent1+1)
  5134  001AB0  C01F  F14D         	line	396
  5135                           	
  5136                           l5991:
  5137  001AB4                     ;main.c: 396: if (PWMPersent1 < 25) {
  5138                           	movlb	1	; () banked
  5139  001AB4  0101               	btfsc	((main@PWMPersent1+1))&0ffh,7
  5140  001AB6  BF4D               	goto	u6850
  5141  001AB8  EF69  F00D         	movf	((main@PWMPersent1+1))&0ffh,w
  5142  001ABC  514D               	bnz	u6851
  5143  001ABE  E107               	movlw	25
  5144  001AC0  0E19               	subwf	 ((main@PWMPersent1))&0ffh,w
  5145  001AC2  5D4C               	btfsc	status,0
  5146  001AC4  B0D8               	goto	u6851
  5147  001AC6  EF67  F00D         	goto	u6850
  5148  001ACA  EF69  F00D         
  5149                           u6851:
  5150  001ACE                     	goto	l5995
  5151  001ACE  EF76  F00D         u6850:
  5152  001AD2                     	line	397
  5153                           	
  5154                           l5993:; BSR set to: 1
  5155  001AD2                     
  5156                           ;main.c: 397: set_pwm1_percent(25);
  5157                           	movlw	low(normalize32(25.000000000000000))
  5158  001AD2  0E00               	movlb	0	; () banked
  5159  001AD4  0100               	movwf	((set_pwm1_percent@value))&0ffh
  5160  001AD6  6F9C               	movlw	high(normalize32(25.000000000000000))
  5161  001AD8  0E00               	movwf	((set_pwm1_percent@value+1))&0ffh
  5162  001ADA  6F9D               	movlw	low highword(normalize32(25.000000000000000))
  5163  001ADC  0EC8               	movwf	((set_pwm1_percent@value+2))&0ffh
  5164  001ADE  6F9E               	movlw	high highword(normalize32(25.000000000000000))
  5165  001AE0  0E41               	movwf	((set_pwm1_percent@value+3))&0ffh
  5166  001AE2  6F9F               	call	_set_pwm1_percent	;wreg free
  5167  001AE4  ECE2  F01F         	line	398
  5168                           ;main.c: 398: } else if (PWMPersent1 > 100) {
  5169                           	goto	l6001
  5170  001AE8  EFAC  F00D         	
  5171                           l323:
  5172  001AEC                     	
  5173                           l5995:
  5174  001AEC                     	movlb	1	; () banked
  5175  001AEC  0101               	btfsc	((main@PWMPersent1+1))&0ffh,7
  5176  001AEE  BF4D               	goto	u6861
  5177  001AF0  EF83  F00D         	movf	((main@PWMPersent1+1))&0ffh,w
  5178  001AF4  514D               	bnz	u6860
  5179  001AF6  E109               	movlw	101
  5180  001AF8  0E65               	subwf	 ((main@PWMPersent1))&0ffh,w
  5181  001AFA  5D4C               	btfss	status,0
  5182  001AFC  A0D8               	goto	u6861
  5183  001AFE  EF83  F00D         	goto	u6860
  5184  001B02  EF85  F00D         
  5185                           u6861:
  5186  001B06                     	goto	l5999
  5187  001B06  EF92  F00D         u6860:
  5188  001B0A                     	line	399
  5189                           	
  5190                           l5997:; BSR set to: 1
  5191  001B0A                     
  5192                           ;main.c: 399: set_pwm1_percent(100);
  5193                           	movlw	low(normalize32(100.00000000000000))
  5194  001B0A  0E00               	movlb	0	; () banked
  5195  001B0C  0100               	movwf	((set_pwm1_percent@value))&0ffh
  5196  001B0E  6F9C               	movlw	high(normalize32(100.00000000000000))
  5197  001B10  0E00               	movwf	((set_pwm1_percent@value+1))&0ffh
  5198  001B12  6F9D               	movlw	low highword(normalize32(100.00000000000000))
  5199  001B14  0EC8               	movwf	((set_pwm1_percent@value+2))&0ffh
  5200  001B16  6F9E               	movlw	high highword(normalize32(100.00000000000000))
  5201  001B18  0E42               	movwf	((set_pwm1_percent@value+3))&0ffh
  5202  001B1A  6F9F               	call	_set_pwm1_percent	;wreg free
  5203  001B1C  ECE2  F01F         	line	400
  5204                           ;main.c: 400: } else {
  5205                           	goto	l6001
  5206  001B20  EFAC  F00D         	
  5207                           l325:
  5208  001B24                     	line	401
  5209                           	
  5210                           l5999:
  5211  001B24                     ;main.c: 401: set_pwm1_percent(PWMPersent1);
  5212                           	movff	(main@PWMPersent1),(c:___xxtofl@val)
  5213  001B24  C14C  F024         	movff	(main@PWMPersent1+1),(c:___xxtofl@val+1)
  5214  001B28  C14D  F025         	movlw	0
  5215  001B2C  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  5216  001B2E  BE25               	movlw	-1
  5217  001B30  0EFF               	movwf	((c:___xxtofl@val+2)),c
  5218  001B32  6E26               	movwf	((c:___xxtofl@val+3)),c
  5219  001B34  6E27               	movlw	(01h)&0ffh
  5220  001B36  0E01               	
  5221                           	call	___xxtofl
  5222  001B38  EC95  F01A         	movff	0+?___xxtofl,(set_pwm1_percent@value)
  5223  001B3C  C024  F09C         	movff	1+?___xxtofl,(set_pwm1_percent@value+1)
  5224  001B40  C025  F09D         	movff	2+?___xxtofl,(set_pwm1_percent@value+2)
  5225  001B44  C026  F09E         	movff	3+?___xxtofl,(set_pwm1_percent@value+3)
  5226  001B48  C027  F09F         	
  5227                           	call	_set_pwm1_percent	;wreg free
  5228  001B4C  ECE2  F01F         	goto	l6001
  5229  001B50  EFAC  F00D         	line	402
  5230                           	
  5231                           l326:
  5232  001B54                     	goto	l6001
  5233  001B54  EFAC  F00D         	
  5234                           l324:
  5235  001B58                     	line	403
  5236                           	
  5237                           l6001:
  5238  001B58                     ;main.c: 402: }
  5239                           ;main.c: 403: coolerON = 1;
  5240                           	movlw	low(01h)
  5241  001B58  0E01               	movlb	1	; () banked
  5242  001B5A  0101               	movwf	((_coolerON))&0ffh
  5243  001B5C  6F5D               	line	404
  5244                           	
  5245                           l6003:; BSR set to: 1
  5246  001B5E                     
  5247                           ;main.c: 404: pwd_Timer3(0);
  5248                           	movlw	high(0)
  5249  001B5E  0E00               	movwf	((c:pwd_Timer3@limit+1)),c
  5250  001B60  6E25               	movlw	low(0)
  5251  001B62  0E00               	movwf	((c:pwd_Timer3@limit)),c
  5252  001B64  6E24               	call	_pwd_Timer3	;wreg free
  5253  001B66  EC8B  F021         	goto	l6005
  5254  001B6A  EFB7  F00D         	line	405
  5255                           	
  5256                           l322:
  5257  001B6E                     	line	406
  5258                           	
  5259                           l6005:
  5260  001B6E                     ;main.c: 405: }
  5261                           ;main.c: 406: lcd_gotoxy(10, 3);
  5262                           	movlw	low(03h)
  5263  001B6E  0E03               	movwf	((c:lcd_gotoxy@y)),c
  5264  001B70  6E28               	movlw	(0Ah)&0ffh
  5265  001B72  0E0A               	
  5266                           	call	_lcd_gotoxy
  5267  001B74  EC46  F022         	line	407
  5268                           	
  5269                           l6007:
  5270  001B78                     ;main.c: 407: int RPS = RPS_count;
  5271                           	movff	(_RPS_count),(main@RPS_1049)
  5272  001B78  C15B  F12C         	movff	(_RPS_count+1),(main@RPS_1049+1)
  5273  001B7C  C15C  F12D         	line	408
  5274                           	
  5275                           l6009:
  5276  001B80                     ;main.c: 408: sprintf(Buffer, " R=%05.02f\n", RPS / 7.0);
  5277                           	movff	(main@RPS_1049),(c:___xxtofl@val)
  5278  001B80  C12C  F024         	movff	(main@RPS_1049+1),(c:___xxtofl@val+1)
  5279  001B84  C12D  F025         	movlw	0
  5280  001B88  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
  5281  001B8A  BE25               	movlw	-1
  5282  001B8C  0EFF               	movwf	((c:___xxtofl@val+2)),c
  5283  001B8E  6E26               	movwf	((c:___xxtofl@val+3)),c
  5284  001B90  6E27               	movlw	(01h)&0ffh
  5285  001B92  0E01               	
  5286                           	call	___xxtofl
  5287  001B94  EC95  F01A         	movff	0+?___xxtofl,(c:___fldiv@b)
  5288  001B98  C024  F045         	movff	1+?___xxtofl,(c:___fldiv@b+1)
  5289  001B9C  C025  F046         	movff	2+?___xxtofl,(c:___fldiv@b+2)
  5290  001BA0  C026  F047         	movff	3+?___xxtofl,(c:___fldiv@b+3)
  5291  001BA4  C027  F048         	
  5292                           	movlw	low(normalize32(7.0000000000000000))
  5293  001BA8  0E00               	movwf	((c:___fldiv@a)),c
  5294  001BAA  6E49               	movlw	high(normalize32(7.0000000000000000))
  5295  001BAC  0E00               	movwf	((c:___fldiv@a+1)),c
  5296  001BAE  6E4A               	movlw	low highword(normalize32(7.0000000000000000))
  5297  001BB0  0EE0               	movwf	((c:___fldiv@a+2)),c
  5298  001BB2  6E4B               	movlw	high highword(normalize32(7.0000000000000000))
  5299  001BB4  0E40               	movwf	((c:___fldiv@a+3)),c
  5300  001BB6  6E4C               	call	___fldiv	;wreg free
  5301  001BB8  EC6F  F015         	movff	0+?___fldiv,(_main$1712)
  5302  001BBC  C045  F144         	movff	1+?___fldiv,(_main$1712+1)
  5303  001BC0  C046  F145         	movff	2+?___fldiv,(_main$1712+2)
  5304  001BC4  C047  F146         	movff	3+?___fldiv,(_main$1712+3)
  5305  001BC8  C048  F147         	
  5306                           	
  5307                           l6011:
  5308  001BCC                     ;main.c: 408: sprintf(Buffer, " R=%05.02f\n", RPS / 7.0);
  5309                           		movlw	low(main@Buffer)
  5310  001BCC  0E00               	movlb	0	; () banked
  5311  001BCE  0100               	movwf	((sprintf@sp))&0ffh
  5312  001BD0  6FA0               	movlw	high(main@Buffer)
  5313  001BD2  0E01               	movwf	((sprintf@sp+1))&0ffh
  5314  001BD4  6FA1               
  5315                           		movlw	low(STR_14)
  5316  001BD6  0EBB               	movwf	((sprintf@f))&0ffh
  5317  001BD8  6FA2               	movlw	high(STR_14)
  5318  001BDA  0EFF               	movwf	((sprintf@f+1))&0ffh
  5319  001BDC  6FA3               
  5320                           	movff	(_main$1712),0+(?_sprintf+04h)
  5321  001BDE  C144  F0A4         	movff	(_main$1712+1),1+(?_sprintf+04h)
  5322  001BE2  C145  F0A5         	movff	(_main$1712+2),2+(?_sprintf+04h)
  5323  001BE6  C146  F0A6         	movff	(_main$1712+3),3+(?_sprintf+04h)
  5324  001BEA  C147  F0A7         	call	_sprintf	;wreg free
  5325  001BEE  EC09  F000         	line	409
  5326                           	
  5327                           l6013:
  5328  001BF2                     ;main.c: 409: lcd_puts(Buffer);
  5329                           		movlw	low(main@Buffer)
  5330  001BF2  0E00               	movwf	((c:lcd_puts@s)),c
  5331  001BF4  6E2C               	movlw	high(main@Buffer)
  5332  001BF6  0E01               	movwf	((c:lcd_puts@s+1)),c
  5333  001BF8  6E2D               
  5334                           	call	_lcd_puts	;wreg free
  5335  001BFA  EC7B  F023         	line	410
  5336                           ;main.c: 410: break;
  5337                           	goto	l284
  5338  001BFE  EF84  F007         	line	411
  5339                           	
  5340                           l315:
  5341  001C02                     	goto	l284
  5342  001C02  EF84  F007         	
  5343                           l305:
  5344  001C06                     	line	412
  5345                           ;main.c: 411: }
  5346                           ;main.c: 412: }
  5347                           	goto	l284
  5348  001C06  EF84  F007         	line	284
  5349                           	
  5350                           l291:
  5351  001C0A                     	
  5352                           l6015:
  5353  001C0A                     	movff	(c:_operationModes),??_main+0+0
  5354  001C0A  C058  F0C7         	movff	(c:_operationModes+1),??_main+0+0+1
  5355  001C0E  C059  F0C8         	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5356                           ; Switch size 1, requested type "space"
  5357                           ; Number of cases is 1, Range of values is 0 to 0
  5358                           ; switch strategies available:
  5359                           ; Name         Instructions Cycles
  5360                           ; simple_byte            4     3 (average)
  5361                           ;	Chosen strategy is simple_byte
  5362                           
  5363                           	movlb	0	; () banked
  5364  001C12  0100               	movf ??_main+0+1&0ffh,w
  5365  001C14  51C8               	xorlw	0^0	; case 0
  5366  001C16  0A00               	skipnz
  5367  001C18  B4D8               	goto	l6053
  5368  001C1A  EF11  F00E         	goto	l284
  5369  001C1E  EF84  F007         	
  5370                           l6053:; BSR set to: 0
  5371  001C22                     
  5372                           ; Switch size 1, requested type "space"
  5373                           ; Number of cases is 3, Range of values is 0 to 2
  5374                           ; switch strategies available:
  5375                           ; Name         Instructions Cycles
  5376                           ; simple_byte           10     6 (average)
  5377                           ;	Chosen strategy is simple_byte
  5378                           
  5379                           	movf ??_main+0+0&0ffh,w
  5380  001C22  51C7               	xorlw	0^0	; case 0
  5381  001C24  0A00               	skipnz
  5382  001C26  B4D8               	goto	l5803
  5383  001C28  EFD3  F008         	xorlw	1^0	; case 1
  5384  001C2C  0A01               	skipnz
  5385  001C2E  B4D8               	goto	l294
  5386  001C30  EF20  F009         	xorlw	2^1	; case 2
  5387  001C34  0A03               	skipnz
  5388  001C36  B4D8               	goto	l5853
  5389  001C38  EF97  F009         	goto	l284
  5390  001C3C  EF84  F007         
  5391                           	line	412
  5392                           	
  5393                           l293:; BSR set to: 0
  5394  001C40                     
  5395                           	goto	l284
  5396  001C40  EF84  F007         	line	413
  5397                           	
  5398                           l327:; BSR set to: 0
  5399  001C44                     
  5400                           	line	253
  5401                           	goto	l284
  5402  001C44  EF84  F007         	
  5403                           l328:; BSR set to: 0
  5404  001C48                     
  5405                           	line	415
  5406                           ;main.c: 413: }
  5407                           ;main.c: 414: return;
  5408                           	
  5409                           l329:; BSR set to: 0
  5410  001C48                     
  5411                           	global	start
  5412                           	goto	start
  5413  001C48  EF07  F000         	opt stack 0
  5414                           GLOBAL	__end_of_main
  5415                           	__end_of_main:
  5416  001C4C                     	signat	_main,89
  5417                           	global	_sprintf
  5418                           
  5419 ;; *************** function _sprintf *****************
  5420 ;; Defined at:
  5421 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5422 ;; Parameters:    Size  Location     Type
  5423 ;;  sp              2   32[BANK0 ] PTR unsigned char 
  5424 ;;		 -> main@Buffer(32), 
  5425 ;;  f               2   34[BANK0 ] PTR const unsigned char 
  5426 ;;		 -> STR_14(12), STR_13(11), STR_12(7), STR_11(11), 
  5427 ;;		 -> STR_10(12), STR_9(11), STR_8(8), STR_7(16), 
  5428 ;;		 -> STR_6(7), STR_5(16), STR_4(7), STR_3(13), 
  5429 ;;		 -> STR_2(16), STR_1(19), 
  5430 ;; Auto vars:     Size  Location     Type
  5431 ;;  fval            4   64[BANK0 ] PTR const unsigned char 
  5432 ;;  val             4   54[BANK0 ] unsigned long 
  5433 ;;  tmpval          4   50[BANK0 ] struct .
  5434 ;;  cp              3    0        PTR const unsigned char 
  5435 ;;  prec            2   68[BANK0 ] int 
  5436 ;;  width           2   62[BANK0 ] int 
  5437 ;;  flag            2   60[BANK0 ] unsigned short 
  5438 ;;  exp             2   58[BANK0 ] int 
  5439 ;;  ap              2   48[BANK0 ] PTR void [1]
  5440 ;;		 -> ?_sprintf(2), 
  5441 ;;  len             2    0        unsigned int 
  5442 ;;  c               1   70[BANK0 ] char 
  5443 ;;  d               1    0        unsigned char 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  2   32[BANK0 ] int 
  5446 ;; Registers used:
  5447 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  5453 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5454 ;;      Locals:         0      27       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5455 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5456 ;;      Totals:         0      39       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  5457 ;;Total ram usage:       39 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    5
  5460 ;; This function calls:
  5461 ;;		___awdiv
  5462 ;;		___fladd
  5463 ;;		___flge
  5464 ;;		___flmul
  5465 ;;		___flneg
  5466 ;;		___flsub
  5467 ;;		___fltol
  5468 ;;		___lldiv
  5469 ;;		___llmod
  5470 ;;		___wmul
  5471 ;;		___xxtofl
  5472 ;;		__div_to_l_
  5473 ;;		__tdiv_to_l_
  5474 ;;		_fround
  5475 ;;		_isdigit
  5476 ;;		_scale
  5477 ;; This function is called by:
  5478 ;;		_main
  5479 ;; This function uses a non-reentrant model
  5480 ;;
  5481                           psect	text1,class=CODE,space=0,reloc=2,group=0
  5482                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5483                           	line	492
  5484                           global __ptext1
  5485                           __ptext1:
  5486  000012                     psect	text1
  5487                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  5488                           	line	492
  5489                           	global	__size_of_sprintf
  5490                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  5491  0000                     	
  5492                           _sprintf:; BSR set to: 0
  5493  000012                     
  5494                           ;incstack = 0
  5495                           	opt	stack 25
  5496                           	line	533
  5497                           	
  5498                           l5385:
  5499  000012                     ;doprnt.c: 494: va_list ap;
  5500                           ;doprnt.c: 499: signed char c;
  5501                           ;doprnt.c: 501: int width;
  5502                           ;doprnt.c: 504: int prec;
  5503                           ;doprnt.c: 508: unsigned short flag;
  5504                           ;doprnt.c: 515: char d;
  5505                           ;doprnt.c: 516: double fval;
  5506                           ;doprnt.c: 517: int exp;
  5507                           ;doprnt.c: 523: union {
  5508                           ;doprnt.c: 524: unsigned long vd;
  5509                           ;doprnt.c: 525: double integ;
  5510                           ;doprnt.c: 526: } tmpval;
  5511                           ;doprnt.c: 528: unsigned long val;
  5512                           ;doprnt.c: 529: unsigned len;
  5513                           ;doprnt.c: 530: const char * cp;
  5514                           ;doprnt.c: 533: *ap = __va_start();
  5515                           		movlw	low(?_sprintf+04h)
  5516  000012  0EA4               	movlb	0	; () banked
  5517  000014  0100               	movwf	((sprintf@ap))&0ffh
  5518  000016  6FB0               	movlw	high(?_sprintf+04h)
  5519  000018  0E00               	movwf	((sprintf@ap+1))&0ffh
  5520  00001A  6FB1               
  5521                           	line	536
  5522                           ;doprnt.c: 536: while(c = *f++) {
  5523                           	goto	l5711
  5524  00001C  EF54  F007         	
  5525                           l365:; BSR set to: 0
  5526  000020                     
  5527                           	line	538
  5528                           	
  5529                           l5387:; BSR set to: 0
  5530  000020                     
  5531                           ;doprnt.c: 538: if(c != '%')
  5532                           		movlw	37
  5533  000020  0E25               	xorwf	((sprintf@c))&0ffh,w
  5534  000022  19C6               	btfsc	status,2
  5535  000024  B4D8               	goto	u6071
  5536  000026  EF17  F000         	goto	u6070
  5537  00002A  EF19  F000         
  5538                           u6071:
  5539  00002E                     	goto	l5393
  5540  00002E  EF23  F000         u6070:
  5541  000032                     	line	541
  5542                           	
  5543                           l5389:; BSR set to: 0
  5544  000032                     
  5545                           ;doprnt.c: 540: {
  5546                           ;doprnt.c: 541: ((*sp++ = (c)));
  5547                           	movff	(sprintf@sp),fsr2l
  5548  000032  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  5549  000036  C0A1  FFDA         	movff	(sprintf@c),indf2
  5550  00003A  C0C6  FFDF         
  5551                           	
  5552                           l5391:; BSR set to: 0
  5553  00003E                     
  5554                           	infsnz	((sprintf@sp))&0ffh
  5555  00003E  4BA0               	incf	((sprintf@sp+1))&0ffh
  5556  000040  2BA1               	line	542
  5557                           ;doprnt.c: 542: continue;
  5558                           	goto	l5711
  5559  000042  EF54  F007         	line	543
  5560                           	
  5561                           l366:; BSR set to: 0
  5562  000046                     
  5563                           	line	546
  5564                           	
  5565                           l5393:; BSR set to: 0
  5566  000046                     
  5567                           ;doprnt.c: 543: }
  5568                           ;doprnt.c: 546: width = 0;
  5569                           	movlw	high(0)
  5570  000046  0E00               	movwf	((sprintf@width+1))&0ffh
  5571  000048  6FBF               	movlw	low(0)
  5572  00004A  0E00               	movwf	((sprintf@width))&0ffh
  5573  00004C  6FBE               	line	548
  5574                           ;doprnt.c: 548: flag = 0;
  5575                           	movlw	high(0)
  5576  00004E  0E00               	movwf	((sprintf@flag+1))&0ffh
  5577  000050  6FBD               	movlw	low(0)
  5578  000052  0E00               	movwf	((sprintf@flag))&0ffh
  5579  000054  6FBC               	goto	l5399
  5580  000056  EF37  F000         	line	550
  5581                           ;doprnt.c: 550: for(;;) {
  5582                           	
  5583                           l367:; BSR set to: 0
  5584  00005A                     
  5585                           	line	551
  5586                           ;doprnt.c: 551: switch(*f) {
  5587                           	goto	l5399
  5588  00005A  EF37  F000         	line	579
  5589                           ;doprnt.c: 579: case '0':
  5590                           	
  5591                           l369:; BSR set to: 0
  5592  00005E                     
  5593                           	line	580
  5594                           	
  5595                           l5395:
  5596  00005E                     ;doprnt.c: 580: flag |= 0x04;
  5597                           	movlb	0	; () banked
  5598  00005E  0100               	bsf	(0+(2/8)+(sprintf@flag))&0ffh,(2)&7
  5599  000060  85BC               	line	581
  5600                           ;doprnt.c: 581: f++;
  5601                           	infsnz	((sprintf@f))&0ffh
  5602  000062  4BA2               	incf	((sprintf@f+1))&0ffh
  5603  000064  2BA3               	line	582
  5604                           ;doprnt.c: 582: continue;
  5605                           	goto	l5399
  5606  000066  EF37  F000         	line	584
  5607                           	
  5608                           l5397:; BSR set to: 0
  5609  00006A                     
  5610                           ;doprnt.c: 584: }
  5611                           	goto	l5401
  5612  00006A  EF47  F000         	line	551
  5613                           	
  5614                           l368:; BSR set to: 0
  5615  00006E                     
  5616                           	
  5617                           l5399:
  5618  00006E                     	movff	(sprintf@f),tblptrl
  5619  00006E  C0A2  FFF6         	movff	(sprintf@f+1),tblptrh
  5620  000072  C0A3  FFF7         	if	0	;tblptru may be non-zero
  5621  000076                     	clrf	tblptru
  5623  000076                     	if	0	;tblptru may be non-zero
  5624  000076                     	global __mediumconst
  5625                           movlw	low highword(__mediumconst)
  5628  000076                     	tblrd	*
  5629  000076  0008               	
  5630                           	movf	tablat,w
  5631  000078  50F5               	; Switch size 1, requested type "space"
  5632                           ; Number of cases is 1, Range of values is 48 to 48
  5633                           ; switch strategies available:
  5634                           ; Name         Instructions Cycles
  5635                           ; simple_byte            4     3 (average)
  5636                           ;	Chosen strategy is simple_byte
  5637                           
  5638                           	xorlw	48^0	; case 48
  5639  00007A  0A30               	skipnz
  5640  00007C  B4D8               	goto	l5395
  5641  00007E  EF2F  F000         	goto	l5401
  5642  000082  EF47  F000         
  5643                           	line	584
  5644                           	
  5645                           l371:
  5646  000086                     	line	585
  5647                           ;doprnt.c: 585: break;
  5648                           	goto	l5401
  5649  000086  EF47  F000         	line	586
  5650                           	
  5651                           l370:
  5652  00008A                     ;doprnt.c: 586: }
  5653                           	goto	l5399
  5654  00008A  EF37  F000         	
  5655                           l372:
  5656  00008E                     	line	597
  5657                           	
  5658                           l5401:
  5659  00008E                     ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  5660                           	movff	(sprintf@f),tblptrl
  5661  00008E  C0A2  FFF6         	movff	(sprintf@f+1),tblptrh
  5662  000092  C0A3  FFF7         	if	0	;tblptru may be non-zero
  5663  000096                     	clrf	tblptru
  5665  000096                     	if	0	;tblptru may be non-zero
  5666  000096                     	global __mediumconst
  5667                           movlw	low highword(__mediumconst)
  5670  000096                     	tblrd	*
  5671  000096  0008               	
  5672                           	movf	tablat,w
  5673  000098  50F5               	
  5674                           	call	_isdigit
  5675  00009A  EC5E  F023         	btfss	status,0
  5676  00009E  A0D8               	goto	u6081
  5677  0000A0  EF54  F000         	goto	u6080
  5678  0000A4  EF56  F000         u6081:
  5679  0000A8                     	goto	l5413
  5680  0000A8  EF95  F000         u6080:
  5681  0000AC                     	line	598
  5682                           	
  5683                           l5403:
  5684  0000AC                     ;doprnt.c: 598: width = 0;
  5685                           	movlw	high(0)
  5686  0000AC  0E00               	movlb	0	; () banked
  5687  0000AE  0100               	movwf	((sprintf@width+1))&0ffh
  5688  0000B0  6FBF               	movlw	low(0)
  5689  0000B2  0E00               	movwf	((sprintf@width))&0ffh
  5690  0000B4  6FBE               	goto	l5405
  5691  0000B6  EF5D  F000         	line	599
  5692                           ;doprnt.c: 599: do {
  5693                           	
  5694                           l374:; BSR set to: 0
  5695  0000BA                     
  5696                           	line	600
  5697                           	
  5698                           l5405:
  5699  0000BA                     ;doprnt.c: 600: width *= 10;
  5700                           	movff	(sprintf@width),(c:___wmul@multiplier)
  5701  0000BA  C0BE  F01E         	movff	(sprintf@width+1),(c:___wmul@multiplier+1)
  5702  0000BE  C0BF  F01F         	movlw	high(0Ah)
  5703  0000C2  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  5704  0000C4  6E21               	movlw	low(0Ah)
  5705  0000C6  0E0A               	movwf	((c:___wmul@multiplicand)),c
  5706  0000C8  6E20               	call	___wmul	;wreg free
  5707  0000CA  ECF9  F023         	movff	0+?___wmul,(sprintf@width)
  5708  0000CE  C01E  F0BE         	movff	1+?___wmul,(sprintf@width+1)
  5709  0000D2  C01F  F0BF         	line	601
  5710                           	
  5711                           l5407:
  5712  0000D6                     ;doprnt.c: 601: width += *f++ - '0';
  5713                           	movlw	low(-48)
  5714  0000D6  0ED0               	movlb	0	; () banked
  5715  0000D8  0100               	movwf	(??_sprintf+0+0)&0ffh
  5716  0000DA  6FA8               	movlw	high(-48)
  5717  0000DC  0EFF               	movwf	1+(??_sprintf+0+0)&0ffh
  5718  0000DE  6FA9               	movff	(sprintf@f),tblptrl
  5719  0000E0  C0A2  FFF6         	movff	(sprintf@f+1),tblptrh
  5720  0000E4  C0A3  FFF7         	if	0	;tblptru may be non-zero
  5721  0000E8                     	clrf	tblptru
  5723  0000E8                     	if	0	;tblptru may be non-zero
  5724  0000E8                     	global __mediumconst
  5725                           movlw	low highword(__mediumconst)
  5728  0000E8                     	tblrd	*
  5729  0000E8  0008               	
  5730                           	movf	tablat,w
  5731  0000EA  50F5               	movwf	(??_sprintf+2+0)&0ffh
  5732  0000EC  6FAA               	clrf	(??_sprintf+2+0+1)&0ffh
  5733  0000EE  6BAB               
  5734                           	movf	(??_sprintf+0+0)&0ffh,w
  5735  0000F0  51A8               	addwf	(??_sprintf+2+0)&0ffh
  5736  0000F2  27AA               	movf	(??_sprintf+0+1)&0ffh,w
  5737  0000F4  51A9               	addwfc	(??_sprintf+2+1)&0ffh
  5738  0000F6  23AB               	movf	(??_sprintf+2+0)&0ffh,w
  5739  0000F8  51AA               	addwf	((sprintf@width))&0ffh
  5740  0000FA  27BE               	movf	(??_sprintf+2+1)&0ffh,w
  5741  0000FC  51AB               	addwfc	((sprintf@width+1))&0ffh
  5742  0000FE  23BF               
  5743                           	
  5744                           l5409:; BSR set to: 0
  5745  000100                     
  5746                           	infsnz	((sprintf@f))&0ffh
  5747  000100  4BA2               	incf	((sprintf@f+1))&0ffh
  5748  000102  2BA3               	line	602
  5749                           	
  5750                           l5411:; BSR set to: 0
  5751  000104                     
  5752                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  5753                           	movff	(sprintf@f),tblptrl
  5754  000104  C0A2  FFF6         	movff	(sprintf@f+1),tblptrh
  5755  000108  C0A3  FFF7         	if	0	;tblptru may be non-zero
  5756  00010C                     	clrf	tblptru
  5758  00010C                     	if	0	;tblptru may be non-zero
  5759  00010C                     	global __mediumconst
  5760                           movlw	low highword(__mediumconst)
  5763  00010C                     	tblrd	*
  5764  00010C  0008               	
  5765                           	movf	tablat,w
  5766  00010E  50F5               	
  5767                           	call	_isdigit
  5768  000110  EC5E  F023         	btfsc	status,0
  5769  000114  B0D8               	goto	u6091
  5770  000116  EF8F  F000         	goto	u6090
  5771  00011A  EF91  F000         u6091:
  5772  00011E                     	goto	l5405
  5773  00011E  EF5D  F000         u6090:
  5774  000122                     	goto	l5413
  5775  000122  EF95  F000         	
  5776                           l375:
  5777  000126                     	goto	l5413
  5778  000126  EF95  F000         	line	608
  5779                           	
  5780                           l373:
  5781  00012A                     	line	611
  5782                           	
  5783                           l5413:
  5784  00012A                     ;doprnt.c: 608: }
  5785                           ;doprnt.c: 611: if(*f == '.') {
  5786                           	movff	(sprintf@f),tblptrl
  5787  00012A  C0A2  FFF6         	movff	(sprintf@f+1),tblptrh
  5788  00012E  C0A3  FFF7         	if	0	;tblptru may be non-zero
  5789  000132                     	clrf	tblptru
  5791  000132                     	if	0	;tblptru may be non-zero
  5792  000132                     	global __mediumconst
  5793                           movlw	low highword(__mediumconst)
  5796  000132                     	tblrd	*
  5797  000132  0008               	
  5798                           	movf	tablat,w
  5799  000134  50F5               	xorlw	02Eh
  5800  000136  0A2E               	btfss	status,2
  5801  000138  A4D8               	goto	u6101
  5802  00013A  EFA1  F000         	goto	u6100
  5803  00013E  EFA3  F000         u6101:
  5804  000142                     	goto	l5425
  5805  000142  EFDE  F000         u6100:
  5806  000146                     	line	612
  5807                           	
  5808                           l5415:
  5809  000146                     ;doprnt.c: 612: flag |= 0x4000;
  5810                           	movlb	0	; () banked
  5811  000146  0100               	bsf	(0+(14/8)+(sprintf@flag))&0ffh,(14)&7
  5812  000148  8DBD               	line	613
  5813                           ;doprnt.c: 613: f++;
  5814                           	infsnz	((sprintf@f))&0ffh
  5815  00014A  4BA2               	incf	((sprintf@f+1))&0ffh
  5816  00014C  2BA3               	line	621
  5817                           	
  5818                           l5417:; BSR set to: 0
  5819  00014E                     
  5820                           ;doprnt.c: 620: {
  5821                           ;doprnt.c: 621: prec = 0;
  5822                           	movlw	high(0)
  5823  00014E  0E00               	movwf	((sprintf@prec+1))&0ffh
  5824  000150  6FC5               	movlw	low(0)
  5825  000152  0E00               	movwf	((sprintf@prec))&0ffh
  5826  000154  6FC4               	line	622
  5827                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  5828                           	goto	l5423
  5829  000156  EFCB  F000         	
  5830                           l378:; BSR set to: 0
  5831  00015A                     
  5832                           	line	623
  5833                           	
  5834                           l5419:
  5835  00015A                     ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  5836                           	movff	(sprintf@prec),(c:___wmul@multiplier)
  5837  00015A  C0C4  F01E         	movff	(sprintf@prec+1),(c:___wmul@multiplier+1)
  5838  00015E  C0C5  F01F         	movlw	high(0Ah)
  5839  000162  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  5840  000164  6E21               	movlw	low(0Ah)
  5841  000166  0E0A               	movwf	((c:___wmul@multiplicand)),c
  5842  000168  6E20               	call	___wmul	;wreg free
  5843  00016A  ECF9  F023         	movff	(sprintf@f),tblptrl
  5844  00016E  C0A2  FFF6         	movff	(sprintf@f+1),tblptrh
  5845  000172  C0A3  FFF7         	if	0	;tblptru may be non-zero
  5846  000176                     	clrf	tblptru
  5848  000176                     	if	0	;tblptru may be non-zero
  5849  000176                     	global __mediumconst
  5850                           movlw	low highword(__mediumconst)
  5853  000176                     	tblrd	*
  5854  000176  0008               	
  5855                           	movf	tablat,w
  5856  000178  50F5               
  5857                           	addwf	(0+?___wmul),c
  5858  00017A  261E               	movlw	0
  5859  00017C  0E00               	addwfc	(1+?___wmul),c
  5860  00017E  221F               	movlw	low(0FFD0h)
  5861  000180  0ED0               	addwf	(0+?___wmul),c,w
  5862  000182  241E               	movlb	0	; () banked
  5863  000184  0100               	movwf	((sprintf@prec))&0ffh
  5864  000186  6FC4               	movlw	high(0FFD0h)
  5865  000188  0EFF               	addwfc	(1+?___wmul),c,w
  5866  00018A  201F               	movwf	1+((sprintf@prec))&0ffh
  5867  00018C  6FC5               	
  5868                           l5421:; BSR set to: 0
  5869  00018E                     
  5870                           	infsnz	((sprintf@f))&0ffh
  5871  00018E  4BA2               	incf	((sprintf@f+1))&0ffh
  5872  000190  2BA3               	goto	l5423
  5873  000192  EFCB  F000         	
  5874                           l377:; BSR set to: 0
  5875  000196                     
  5876                           	line	622
  5877                           	
  5878                           l5423:; BSR set to: 0
  5879  000196                     
  5880                           	movff	(sprintf@f),tblptrl
  5881  000196  C0A2  FFF6         	movff	(sprintf@f+1),tblptrh
  5882  00019A  C0A3  FFF7         	if	0	;tblptru may be non-zero
  5883  00019E                     	clrf	tblptru
  5885  00019E                     	if	0	;tblptru may be non-zero
  5886  00019E                     	global __mediumconst
  5887                           movlw	low highword(__mediumconst)
  5890  00019E                     	tblrd	*
  5891  00019E  0008               	
  5892                           	movf	tablat,w
  5893  0001A0  50F5               	
  5894                           	call	_isdigit
  5895  0001A2  EC5E  F023         	btfsc	status,0
  5896  0001A6  B0D8               	goto	u6111
  5897  0001A8  EFD8  F000         	goto	u6110
  5898  0001AC  EFDA  F000         u6111:
  5899  0001B0                     	goto	l5419
  5900  0001B0  EFAD  F000         u6110:
  5901  0001B4                     	goto	l5433
  5902  0001B4  EFF5  F000         	
  5903                           l379:
  5904  0001B8                     	line	625
  5905                           ;doprnt.c: 624: }
  5906                           ;doprnt.c: 625: } else {
  5907                           	goto	l5433
  5908  0001B8  EFF5  F000         	
  5909                           l376:
  5910  0001BC                     	line	626
  5911                           	
  5912                           l5425:
  5913  0001BC                     ;doprnt.c: 626: prec = 0;
  5914                           	movlw	high(0)
  5915  0001BC  0E00               	movlb	0	; () banked
  5916  0001BE  0100               	movwf	((sprintf@prec+1))&0ffh
  5917  0001C0  6FC5               	movlw	low(0)
  5918  0001C2  0E00               	movwf	((sprintf@prec))&0ffh
  5919  0001C4  6FC4               	line	628
  5920                           	
  5921                           l5427:; BSR set to: 0
  5922  0001C6                     
  5923                           ;doprnt.c: 628: flag |= 0x1000;
  5924                           	bsf	(0+(12/8)+(sprintf@flag))&0ffh,(12)&7
  5925  0001C6  89BD               	goto	l5433
  5926  0001C8  EFF5  F000         	line	630
  5927                           	
  5928                           l380:; BSR set to: 0
  5929  0001CC                     
  5930                           	line	635
  5931                           ;doprnt.c: 630: }
  5932                           ;doprnt.c: 635: switch(c = *f++) {
  5933                           	goto	l5433
  5934  0001CC  EFF5  F000         	line	637
  5935                           ;doprnt.c: 637: case 0:
  5936                           	
  5937                           l382:; BSR set to: 0
  5938  0001D0                     
  5939                           	line	638
  5940                           ;doprnt.c: 638: goto alldone;
  5941                           	goto	l5713
  5942  0001D0  EF69  F007         	line	662
  5943                           ;doprnt.c: 662: case 'f':
  5944                           	
  5945                           l384:; BSR set to: 0
  5946  0001D4                     
  5947                           	line	663
  5948                           	
  5949                           l5429:; BSR set to: 0
  5950  0001D4                     
  5951                           ;doprnt.c: 663: flag |= 0x400;
  5952                           	bsf	(0+(10/8)+(sprintf@flag))&0ffh,(10)&7
  5953  0001D4  85BD               	line	664
  5954                           ;doprnt.c: 664: break;
  5955                           	goto	l5435
  5956  0001D6  EF12  F001         	line	697
  5957                           ;doprnt.c: 697: case 'd':
  5958                           	
  5959                           l386:; BSR set to: 0
  5960  0001DA                     
  5961                           	goto	l5435
  5962  0001DA  EF12  F001         	line	698
  5963                           	
  5964                           l387:; BSR set to: 0
  5965  0001DE                     
  5966                           	line	699
  5967                           ;doprnt.c: 698: case 'i':
  5968                           ;doprnt.c: 699: break;
  5969                           	goto	l5435
  5970  0001DE  EF12  F001         	line	802
  5971                           ;doprnt.c: 802: default:
  5972                           	
  5973                           l388:; BSR set to: 0
  5974  0001E2                     
  5975                           	line	813
  5976                           ;doprnt.c: 813: continue;
  5977                           	goto	l5711
  5978  0001E2  EF54  F007         	line	822
  5979                           	
  5980                           l5431:; BSR set to: 0
  5981  0001E6                     
  5982                           ;doprnt.c: 822: }
  5983                           	goto	l5435
  5984  0001E6  EF12  F001         	line	635
  5985                           	
  5986                           l381:; BSR set to: 0
  5987  0001EA                     
  5988                           	
  5989                           l5433:
  5990  0001EA                     	movff	(sprintf@f),tblptrl
  5991  0001EA  C0A2  FFF6         	movff	(sprintf@f+1),tblptrh
  5992  0001EE  C0A3  FFF7         	movlb	0	; () banked
  5993  0001F2  0100               	infsnz	((sprintf@f))&0ffh
  5994  0001F4  4BA2               	incf	((sprintf@f+1))&0ffh
  5995  0001F6  2BA3               	if	0	;tblptru may be non-zero
  5996  0001F8                     	clrf	tblptru
  5998  0001F8                     	if	0	;tblptru may be non-zero
  5999  0001F8                     	global __mediumconst
  6000                           movlw	low highword(__mediumconst)
  6003  0001F8                     	tblrd	*
  6004  0001F8  0008               	
  6005                           	movff	tablat,(sprintf@c)
  6006  0001FA  CFF5 F0C6          	movf	((sprintf@c))&0ffh,w
  6007  0001FE  51C6               	; Switch size 1, requested type "space"
  6008                           ; Number of cases is 4, Range of values is 0 to 105
  6009                           ; switch strategies available:
  6010                           ; Name         Instructions Cycles
  6011                           ; simple_byte           13     7 (average)
  6012                           ;	Chosen strategy is simple_byte
  6013                           
  6014                           	xorlw	0^0	; case 0
  6015  000200  0A00               	skipnz
  6016  000202  B4D8               	goto	l5713
  6017  000204  EF69  F007         	xorlw	100^0	; case 100
  6018  000208  0A64               	skipnz
  6019  00020A  B4D8               	goto	l5435
  6020  00020C  EF12  F001         	xorlw	102^100	; case 102
  6021  000210  0A02               	skipnz
  6022  000212  B4D8               	goto	l5429
  6023  000214  EFEA  F000         	xorlw	105^102	; case 105
  6024  000218  0A0F               	skipnz
  6025  00021A  B4D8               	goto	l5435
  6026  00021C  EF12  F001         	goto	l5711
  6027  000220  EF54  F007         
  6028                           	line	822
  6029                           	
  6030                           l385:; BSR set to: 0
  6031  000224                     
  6032                           	line	825
  6033                           	
  6034                           l5435:; BSR set to: 0
  6035  000224                     
  6036                           ;doprnt.c: 825: if(flag & (0x700)) {
  6037                           	movlw	high(0700h)
  6038  000224  0E07               	andwf	((sprintf@flag+1))&0ffh,w
  6039  000226  15BD               
  6040                           	btfsc	status,2
  6041  000228  B4D8               	goto	u6121
  6042  00022A  EF19  F001         	goto	u6120
  6043  00022E  EF1B  F001         u6121:
  6044  000232                     	goto	l5615
  6045  000232  EF76  F005         u6120:
  6046  000236                     	line	827
  6047                           	
  6048                           l5437:; BSR set to: 0
  6049  000236                     
  6050                           ;doprnt.c: 827: if(flag & 0x1000)
  6051                           	
  6052                           	btfss	((sprintf@flag+1))&0ffh,(12)&7
  6053  000236  A9BD               	goto	u6131
  6054  000238  EF20  F001         	goto	u6130
  6055  00023C  EF22  F001         u6131:
  6056  000240                     	goto	l5441
  6057  000240  EF28  F001         u6130:
  6058  000244                     	line	829
  6059                           	
  6060                           l5439:; BSR set to: 0
  6061  000244                     
  6062                           ;doprnt.c: 829: prec = 6;
  6063                           	movlw	high(06h)
  6064  000244  0E00               	movwf	((sprintf@prec+1))&0ffh
  6065  000246  6FC5               	movlw	low(06h)
  6066  000248  0E06               	movwf	((sprintf@prec))&0ffh
  6067  00024A  6FC4               	goto	l5441
  6068  00024C  EF28  F001         	
  6069                           l390:; BSR set to: 0
  6070  000250                     
  6071                           	line	830
  6072                           	
  6073                           l5441:; BSR set to: 0
  6074  000250                     
  6075                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  6076                           	movff	(sprintf@ap),fsr2l
  6077  000250  C0B0  FFD9         	movff	(sprintf@ap+1),fsr2h
  6078  000254  C0B1  FFDA         	movff	postinc2,(sprintf@fval)
  6079  000258  CFDE F0C0          	movff	postinc2,(sprintf@fval+1)
  6080  00025C  CFDE F0C1          	movff	postinc2,(sprintf@fval+2)
  6081  000260  CFDE F0C2          	movff	postinc2,(sprintf@fval+3)
  6082  000264  CFDE F0C3          	
  6083                           l5443:; BSR set to: 0
  6084  000268                     
  6085                           	movlw	04h
  6086  000268  0E04               	addwf	((sprintf@ap))&0ffh
  6087  00026A  27B0               	movlw	0
  6088  00026C  0E00               	addwfc	((sprintf@ap+1))&0ffh
  6089  00026E  23B1               	line	831
  6090                           	
  6091                           l5445:; BSR set to: 0
  6092  000270                     
  6093                           ;doprnt.c: 831: if(fval < 0.0) {
  6094                           	btfsc	((sprintf@fval+3))&0ffh,7
  6095  000270  BFC3               	goto	u6140
  6096  000272  EF3F  F001         	goto	u6141
  6097  000276  EF3D  F001         
  6098                           u6141:
  6099  00027A                     	goto	l5451
  6100  00027A  EF56  F001         u6140:
  6101  00027E                     	line	832
  6102                           	
  6103                           l5447:; BSR set to: 0
  6104  00027E                     
  6105                           ;doprnt.c: 832: fval = -fval;
  6106                           	movff	(sprintf@fval),(c:___flneg@f1)
  6107  00027E  C0C0  F032         	movff	(sprintf@fval+1),(c:___flneg@f1+1)
  6108  000282  C0C1  F033         	movff	(sprintf@fval+2),(c:___flneg@f1+2)
  6109  000286  C0C2  F034         	movff	(sprintf@fval+3),(c:___flneg@f1+3)
  6110  00028A  C0C3  F035         	call	___flneg	;wreg free
  6111  00028E  EC3E  F023         	movff	0+?___flneg,(sprintf@fval)
  6112  000292  C032  F0C0         	movff	1+?___flneg,(sprintf@fval+1)
  6113  000296  C033  F0C1         	movff	2+?___flneg,(sprintf@fval+2)
  6114  00029A  C034  F0C2         	movff	3+?___flneg,(sprintf@fval+3)
  6115  00029E  C035  F0C3         	
  6116                           	line	833
  6117                           	
  6118                           l5449:
  6119  0002A2                     ;doprnt.c: 833: flag |= 0x03;
  6120                           	movlw	03h
  6121  0002A2  0E03               	movlb	0	; () banked
  6122  0002A4  0100               	iorwf	((sprintf@flag))&0ffh
  6123  0002A6  13BC               	goto	l5451
  6124  0002A8  EF56  F001         	line	834
  6125                           	
  6126                           l391:; BSR set to: 0
  6127  0002AC                     
  6128                           	line	835
  6129                           	
  6130                           l5451:; BSR set to: 0
  6131  0002AC                     
  6132                           ;doprnt.c: 834: }
  6133                           ;doprnt.c: 835: exp = 0;
  6134                           	movlw	high(0)
  6135  0002AC  0E00               	movwf	((sprintf@exp+1))&0ffh
  6136  0002AE  6FBB               	movlw	low(0)
  6137  0002B0  0E00               	movwf	((sprintf@exp))&0ffh
  6138  0002B2  6FBA               	line	836
  6139                           	
  6140                           l5453:; BSR set to: 0
  6141  0002B4                     
  6142                           ;doprnt.c: 836: if( fval!=0) {
  6143                           	movf	((sprintf@fval))&0ffh,w
  6144  0002B4  51C0               iorwf	((sprintf@fval+1))&0ffh,w
  6145  0002B6  11C1               iorwf	((sprintf@fval+2))&0ffh,w
  6146  0002B8  11C2               iorwf	((sprintf@fval+3))&0ffh,w
  6147  0002BA  11C3               	btfsc	status,2
  6148  0002BC  B4D8               	goto	u6151
  6149  0002BE  EF63  F001         	goto	u6150
  6150  0002C2  EF65  F001         
  6151                           u6151:
  6152  0002C6                     	goto	l5479
  6153  0002C6  EF00  F002         u6150:
  6154  0002CA                     	line	837
  6155                           	
  6156                           l5455:; BSR set to: 0
  6157  0002CA                     
  6158                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
                                 - 126);
  6159                           	rlcf	((sprintf@fval+2))&0ffh,w
  6160  0002CA  35C2               	rlcf	((sprintf@fval+3))&0ffh,w
  6161  0002CC  35C3               	addlw	low(-126)
  6162  0002CE  0F82               	movwf	((sprintf@exp))&0ffh
  6163  0002D0  6FBA               	clrf	1+((sprintf@exp))&0ffh
  6164  0002D2  6BBB               	movlw	high(-126)
  6165  0002D4  0EFF               	addwfc	1+((sprintf@exp))&0ffh
  6166  0002D6  23BB               	line	838
  6167                           	
  6168                           l5457:; BSR set to: 0
  6169  0002D8                     
  6170                           ;doprnt.c: 838: exp--;
  6171                           	decf	((sprintf@exp))&0ffh
  6172  0002D8  07BA               	btfss	status,0
  6173  0002DA  A0D8               	decf	((sprintf@exp+1))&0ffh
  6174  0002DC  07BB               	line	839
  6175                           	
  6176                           l5459:; BSR set to: 0
  6177  0002DE                     
  6178                           ;doprnt.c: 839: exp *= 3;
  6179                           	movff	(sprintf@exp),(c:___wmul@multiplier)
  6180  0002DE  C0BA  F01E         	movff	(sprintf@exp+1),(c:___wmul@multiplier+1)
  6181  0002E2  C0BB  F01F         	movlw	high(03h)
  6182  0002E6  0E00               	movwf	((c:___wmul@multiplicand+1)),c
  6183  0002E8  6E21               	movlw	low(03h)
  6184  0002EA  0E03               	movwf	((c:___wmul@multiplicand)),c
  6185  0002EC  6E20               	call	___wmul	;wreg free
  6186  0002EE  ECF9  F023         	movff	0+?___wmul,(sprintf@exp)
  6187  0002F2  C01E  F0BA         	movff	1+?___wmul,(sprintf@exp+1)
  6188  0002F6  C01F  F0BB         	line	840
  6189                           	
  6190                           l5461:
  6191  0002FA                     ;doprnt.c: 840: exp /= 10;
  6192                           	movff	(sprintf@exp),(c:___awdiv@dividend)
  6193  0002FA  C0BA  F024         	movff	(sprintf@exp+1),(c:___awdiv@dividend+1)
  6194  0002FE  C0BB  F025         	movlw	high(0Ah)
  6195  000302  0E00               	movwf	((c:___awdiv@divisor+1)),c
  6196  000304  6E27               	movlw	low(0Ah)
  6197  000306  0E0A               	movwf	((c:___awdiv@divisor)),c
  6198  000308  6E26               	call	___awdiv	;wreg free
  6199  00030A  EC94  F01E         	movff	0+?___awdiv,(sprintf@exp)
  6200  00030E  C024  F0BA         	movff	1+?___awdiv,(sprintf@exp+1)
  6201  000312  C025  F0BB         	line	841
  6202                           	
  6203                           l5463:
  6204  000316                     ;doprnt.c: 841: if(exp < 0)
  6205                           	movlb	0	; () banked
  6206  000316  0100               	btfsc	((sprintf@exp+1))&0ffh,7
  6207  000318  BFBB               	goto	u6160
  6208  00031A  EF93  F001         	goto	u6161
  6209  00031E  EF91  F001         
  6210                           u6161:
  6211  000322                     	goto	l5467
  6212  000322  EF98  F001         u6160:
  6213  000326                     	line	842
  6214                           	
  6215                           l5465:; BSR set to: 0
  6216  000326                     
  6217                           ;doprnt.c: 842: exp--;
  6218                           	decf	((sprintf@exp))&0ffh
  6219  000326  07BA               	btfss	status,0
  6220  000328  A0D8               	decf	((sprintf@exp+1))&0ffh
  6221  00032A  07BB               	goto	l5467
  6222  00032C  EF98  F001         	
  6223                           l393:; BSR set to: 0
  6224  000330                     
  6225                           	line	846
  6226                           	
  6227                           l5467:; BSR set to: 0
  6228  000330                     
  6229                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  6230                           	movf	((sprintf@exp))&0ffh,w
  6231  000330  51BA               	sublw	0
  6232  000332  0800               	
  6233                           	call	_scale
  6234  000334  ECEA  F010         	movff	0+?_scale,(sprintf@tmpval)
  6235  000338  C045  F0B2         	movff	1+?_scale,(sprintf@tmpval+1)
  6236  00033C  C046  F0B3         	movff	2+?_scale,(sprintf@tmpval+2)
  6237  000340  C047  F0B4         	movff	3+?_scale,(sprintf@tmpval+3)
  6238  000344  C048  F0B5         	
  6239                           	line	847
  6240                           	
  6241                           l5469:
  6242  000348                     ;doprnt.c: 847: tmpval.integ *= fval;
  6243                           	movff	(sprintf@tmpval),(c:___flmul@b)
  6244  000348  C0B2  F02C         	movff	(sprintf@tmpval+1),(c:___flmul@b+1)
  6245  00034C  C0B3  F02D         	movff	(sprintf@tmpval+2),(c:___flmul@b+2)
  6246  000350  C0B4  F02E         	movff	(sprintf@tmpval+3),(c:___flmul@b+3)
  6247  000354  C0B5  F02F         	movff	(sprintf@fval),(c:___flmul@a)
  6248  000358  C0C0  F030         	movff	(sprintf@fval+1),(c:___flmul@a+1)
  6249  00035C  C0C1  F031         	movff	(sprintf@fval+2),(c:___flmul@a+2)
  6250  000360  C0C2  F032         	movff	(sprintf@fval+3),(c:___flmul@a+3)
  6251  000364  C0C3  F033         	call	___flmul	;wreg free
  6252  000368  EC38  F013         	movff	0+?___flmul,(sprintf@tmpval)
  6253  00036C  C02C  F0B2         	movff	1+?___flmul,(sprintf@tmpval+1)
  6254  000370  C02D  F0B3         	movff	2+?___flmul,(sprintf@tmpval+2)
  6255  000374  C02E  F0B4         	movff	3+?___flmul,(sprintf@tmpval+3)
  6256  000378  C02F  F0B5         	
  6257                           	line	848
  6258                           	
  6259                           l5471:
  6260  00037C                     ;doprnt.c: 848: if(tmpval.integ < 1.0)
  6261                           	movff	(sprintf@tmpval),(___flge@ff1)
  6262  00037C  C0B2  F094         	movff	(sprintf@tmpval+1),(___flge@ff1+1)
  6263  000380  C0B3  F095         	movff	(sprintf@tmpval+2),(___flge@ff1+2)
  6264  000384  C0B4  F096         	movff	(sprintf@tmpval+3),(___flge@ff1+3)
  6265  000388  C0B5  F097         	movlw	low(normalize32(1.0000000000000000))
  6266  00038C  0E00               	movlb	0	; () banked
  6267  00038E  0100               	movwf	((___flge@ff2))&0ffh
  6268  000390  6F98               	movlw	high(normalize32(1.0000000000000000))
  6269  000392  0E00               	movwf	((___flge@ff2+1))&0ffh
  6270  000394  6F99               	movlw	low highword(normalize32(1.0000000000000000))
  6271  000396  0E80               	movwf	((___flge@ff2+2))&0ffh
  6272  000398  6F9A               	movlw	high highword(normalize32(1.0000000000000000))
  6273  00039A  0E3F               	movwf	((___flge@ff2+3))&0ffh
  6274  00039C  6F9B               	call	___flge	;wreg free
  6275  00039E  EC35  F01D         	movlb	0	; () banked
  6276  0003A2  0100               	btfsc	status,0
  6277  0003A4  B0D8               	goto	u6171
  6278  0003A6  EFD7  F001         	goto	u6170
  6279  0003AA  EFD9  F001         u6171:
  6280  0003AE                     	goto	l5475
  6281  0003AE  EFDE  F001         u6170:
  6282  0003B2                     	line	849
  6283                           	
  6284                           l5473:; BSR set to: 0
  6285  0003B2                     
  6286                           ;doprnt.c: 849: exp--;
  6287                           	decf	((sprintf@exp))&0ffh
  6288  0003B2  07BA               	btfss	status,0
  6289  0003B4  A0D8               	decf	((sprintf@exp+1))&0ffh
  6290  0003B6  07BB               	goto	l5479
  6291  0003B8  EF00  F002         	line	850
  6292                           	
  6293                           l394:; BSR set to: 0
  6294  0003BC                     
  6295                           	
  6296                           l5475:; BSR set to: 0
  6297  0003BC                     
  6298                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  6299                           	movff	(sprintf@tmpval),(___flge@ff1)
  6300  0003BC  C0B2  F094         	movff	(sprintf@tmpval+1),(___flge@ff1+1)
  6301  0003C0  C0B3  F095         	movff	(sprintf@tmpval+2),(___flge@ff1+2)
  6302  0003C4  C0B4  F096         	movff	(sprintf@tmpval+3),(___flge@ff1+3)
  6303  0003C8  C0B5  F097         	movlw	low(normalize32(10.000000000000000))
  6304  0003CC  0E00               	movwf	((___flge@ff2))&0ffh
  6305  0003CE  6F98               	movlw	high(normalize32(10.000000000000000))
  6306  0003D0  0E00               	movwf	((___flge@ff2+1))&0ffh
  6307  0003D2  6F99               	movlw	low highword(normalize32(10.000000000000000))
  6308  0003D4  0E20               	movwf	((___flge@ff2+2))&0ffh
  6309  0003D6  6F9A               	movlw	high highword(normalize32(10.000000000000000))
  6310  0003D8  0E41               	movwf	((___flge@ff2+3))&0ffh
  6311  0003DA  6F9B               	call	___flge	;wreg free
  6312  0003DC  EC35  F01D         	movlb	0	; () banked
  6313  0003E0  0100               	btfss	status,0
  6314  0003E2  A0D8               	goto	u6181
  6315  0003E4  EFF6  F001         	goto	u6180
  6316  0003E8  EFF8  F001         u6181:
  6317  0003EC                     	goto	l5479
  6318  0003EC  EF00  F002         u6180:
  6319  0003F0                     	line	851
  6320                           	
  6321                           l5477:; BSR set to: 0
  6322  0003F0                     
  6323                           ;doprnt.c: 851: exp++;
  6324                           	infsnz	((sprintf@exp))&0ffh
  6325  0003F0  4BBA               	incf	((sprintf@exp+1))&0ffh
  6326  0003F2  2BBB               	goto	l5479
  6327  0003F4  EF00  F002         	
  6328                           l396:; BSR set to: 0
  6329  0003F8                     
  6330                           	goto	l5479
  6331  0003F8  EF00  F002         	line	852
  6332                           	
  6333                           l395:; BSR set to: 0
  6334  0003FC                     
  6335                           	goto	l5479
  6336  0003FC  EF00  F002         	
  6337                           l392:; BSR set to: 0
  6338  000400                     
  6339                           	line	1112
  6340                           	
  6341                           l5479:; BSR set to: 0
  6342  000400                     
  6343                           ;doprnt.c: 852: }
  6344                           ;doprnt.c: 1112: if(prec <= 12)
  6345                           	btfsc	((sprintf@prec+1))&0ffh,7
  6346  000400  BFC5               	goto	u6190
  6347  000402  EF0E  F002         	movf	((sprintf@prec+1))&0ffh,w
  6348  000406  51C5               	bnz	u6191
  6349  000408  E107               	movlw	13
  6350  00040A  0E0D               	subwf	 ((sprintf@prec))&0ffh,w
  6351  00040C  5DC4               	btfsc	status,0
  6352  00040E  B0D8               	goto	u6191
  6353  000410  EF0C  F002         	goto	u6190
  6354  000414  EF0E  F002         
  6355                           u6191:
  6356  000418                     	goto	l5483
  6357  000418  EF2D  F002         u6190:
  6358  00041C                     	line	1113
  6359                           	
  6360                           l5481:; BSR set to: 0
  6361  00041C                     
  6362                           ;doprnt.c: 1113: fval += fround(prec);
  6363                           	movff	(sprintf@fval),(___fladd@b)
  6364  00041C  C0C0  F080         	movff	(sprintf@fval+1),(___fladd@b+1)
  6365  000420  C0C1  F081         	movff	(sprintf@fval+2),(___fladd@b+2)
  6366  000424  C0C2  F082         	movff	(sprintf@fval+3),(___fladd@b+3)
  6367  000428  C0C3  F083         	movf	((sprintf@prec))&0ffh,w
  6368  00042C  51C4               	
  6369                           	call	_fround
  6370  00042E  EC3A  F019         	movff	0+?_fround,(___fladd@a)
  6371  000432  C045  F084         	movff	1+?_fround,(___fladd@a+1)
  6372  000436  C046  F085         	movff	2+?_fround,(___fladd@a+2)
  6373  00043A  C047  F086         	movff	3+?_fround,(___fladd@a+3)
  6374  00043E  C048  F087         	
  6375                           	call	___fladd	;wreg free
  6376  000442  EC26  F00E         	movff	0+?___fladd,(sprintf@fval)
  6377  000446  C080  F0C0         	movff	1+?___fladd,(sprintf@fval+1)
  6378  00044A  C081  F0C1         	movff	2+?___fladd,(sprintf@fval+2)
  6379  00044E  C082  F0C2         	movff	3+?___fladd,(sprintf@fval+3)
  6380  000452  C083  F0C3         	
  6381                           	goto	l5483
  6382  000456  EF2D  F002         	
  6383                           l397:
  6384  00045A                     	line	1116
  6385                           	
  6386                           l5483:
  6387  00045A                     ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  6388                           	movlb	0	; () banked
  6389  00045A  0100               	btfsc	((sprintf@exp+1))&0ffh,7
  6390  00045C  BFBB               	goto	u6200
  6391  00045E  EF3C  F002         	movf	((sprintf@exp+1))&0ffh,w
  6392  000462  51BB               	bnz	u6201
  6393  000464  E107               	movlw	10
  6394  000466  0E0A               	subwf	 ((sprintf@exp))&0ffh,w
  6395  000468  5DBA               	btfsc	status,0
  6396  00046A  B0D8               	goto	u6201
  6397  00046C  EF3A  F002         	goto	u6200
  6398  000470  EF3C  F002         
  6399                           u6201:
  6400  000474                     	goto	l5491
  6401  000474  EF6D  F002         u6200:
  6402  000478                     	
  6403                           l5485:; BSR set to: 0
  6404  000478                     
  6405                           	movf	((sprintf@fval))&0ffh,w
  6406  000478  51C0               iorwf	((sprintf@fval+1))&0ffh,w
  6407  00047A  11C1               iorwf	((sprintf@fval+2))&0ffh,w
  6408  00047C  11C2               iorwf	((sprintf@fval+3))&0ffh,w
  6409  00047E  11C3               	btfsc	status,2
  6410  000480  B4D8               	goto	u6211
  6411  000482  EF45  F002         	goto	u6210
  6412  000486  EF47  F002         
  6413                           u6211:
  6414  00048A                     	goto	l5505
  6415  00048A  EFE1  F002         u6210:
  6416  00048E                     	
  6417                           l5487:; BSR set to: 0
  6418  00048E                     
  6419                           	movff	(sprintf@fval),(___fltol@f1)
  6420  00048E  C0C0  F094         	movff	(sprintf@fval+1),(___fltol@f1+1)
  6421  000492  C0C1  F095         	movff	(sprintf@fval+2),(___fltol@f1+2)
  6422  000496  C0C2  F096         	movff	(sprintf@fval+3),(___fltol@f1+3)
  6423  00049A  C0C3  F097         	call	___fltol	;wreg free
  6424  00049E  ECEA  F01D         	movlb	0	; () banked
  6425  0004A2  0100               	movf	(0+?___fltol)&0ffh,w
  6426  0004A4  5194               iorwf	(1+?___fltol)&0ffh,w
  6427  0004A6  1195               iorwf	(2+?___fltol)&0ffh,w
  6428  0004A8  1196               iorwf	(3+?___fltol)&0ffh,w
  6429  0004AA  1197               	btfss	status,2
  6430  0004AC  A4D8               	goto	u6221
  6431  0004AE  EF5B  F002         	goto	u6220
  6432  0004B2  EF5D  F002         
  6433                           u6221:
  6434  0004B6                     	goto	l5505
  6435  0004B6  EFE1  F002         u6220:
  6436  0004BA                     	
  6437                           l5489:; BSR set to: 0
  6438  0004BA                     
  6439                           	btfsc	((sprintf@exp+1))&0ffh,7
  6440  0004BA  BFBB               	goto	u6231
  6441  0004BC  EF69  F002         	movf	((sprintf@exp+1))&0ffh,w
  6442  0004C0  51BB               	bnz	u6230
  6443  0004C2  E109               	movlw	2
  6444  0004C4  0E02               	subwf	 ((sprintf@exp))&0ffh,w
  6445  0004C6  5DBA               	btfss	status,0
  6446  0004C8  A0D8               	goto	u6231
  6447  0004CA  EF69  F002         	goto	u6230
  6448  0004CE  EF6B  F002         
  6449                           u6231:
  6450  0004D2                     	goto	l5505
  6451  0004D2  EFE1  F002         u6230:
  6452  0004D6                     	goto	l5491
  6453  0004D6  EF6D  F002         	
  6454                           l400:; BSR set to: 0
  6455  0004DA                     
  6456                           	line	1120
  6457                           	
  6458                           l5491:; BSR set to: 0
  6459  0004DA                     
  6460                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  6461                           	movff	(sprintf@tmpval),(___flge@ff1)
  6462  0004DA  C0B2  F094         	movff	(sprintf@tmpval+1),(___flge@ff1+1)
  6463  0004DE  C0B3  F095         	movff	(sprintf@tmpval+2),(___flge@ff1+2)
  6464  0004E2  C0B4  F096         	movff	(sprintf@tmpval+3),(___flge@ff1+3)
  6465  0004E6  C0B5  F097         	movlw	low(normalize32(4.2949672960000003))
  6466  0004EA  0E5F               	movwf	((___flge@ff2))&0ffh
  6467  0004EC  6F98               	movlw	high(normalize32(4.2949672960000003))
  6468  0004EE  0E70               	movwf	((___flge@ff2+1))&0ffh
  6469  0004F0  6F99               	movlw	low highword(normalize32(4.2949672960000003))
  6470  0004F2  0E89               	movwf	((___flge@ff2+2))&0ffh
  6471  0004F4  6F9A               	movlw	high highword(normalize32(4.2949672960000003))
  6472  0004F6  0E40               	movwf	((___flge@ff2+3))&0ffh
  6473  0004F8  6F9B               	call	___flge	;wreg free
  6474  0004FA  EC35  F01D         	movlb	0	; () banked
  6475  0004FE  0100               	btfsc	status,0
  6476  000500  B0D8               	goto	u6241
  6477  000502  EF85  F002         	goto	u6240
  6478  000506  EF87  F002         u6241:
  6479  00050A                     	goto	l5495
  6480  00050A  EF8D  F002         u6240:
  6481  00050E                     	line	1121
  6482                           	
  6483                           l5493:; BSR set to: 0
  6484  00050E                     
  6485                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  6486                           	movlw	low(-9)
  6487  00050E  0EF7               	addwf	((sprintf@exp))&0ffh
  6488  000510  27BA               	movlw	high(-9)
  6489  000512  0EFF               	addwfc	((sprintf@exp+1))&0ffh
  6490  000514  23BB               	line	1122
  6491                           ;doprnt.c: 1122: }else{
  6492                           	goto	l5497
  6493  000516  EF93  F002         	
  6494                           l401:; BSR set to: 0
  6495  00051A                     
  6496                           	line	1123
  6497                           	
  6498                           l5495:; BSR set to: 0
  6499  00051A                     
  6500                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  6501                           	movlw	low(-8)
  6502  00051A  0EF8               	addwf	((sprintf@exp))&0ffh
  6503  00051C  27BA               	movlw	high(-8)
  6504  00051E  0EFF               	addwfc	((sprintf@exp+1))&0ffh
  6505  000520  23BB               	goto	l5497
  6506  000522  EF93  F002         	line	1124
  6507                           	
  6508                           l402:; BSR set to: 0
  6509  000526                     
  6510                           	line	1125
  6511                           	
  6512                           l5497:; BSR set to: 0
  6513  000526                     
  6514                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
                                 l_(fval,tmpval.integ));
  6515                           	movf	((sprintf@exp))&0ffh,w
  6516  000526  51BA               	
  6517                           	call	_scale
  6518  000528  ECEA  F010         	movff	0+?_scale,(sprintf@tmpval)
  6519  00052C  C045  F0B2         	movff	1+?_scale,(sprintf@tmpval+1)
  6520  000530  C046  F0B3         	movff	2+?_scale,(sprintf@tmpval+2)
  6521  000534  C047  F0B4         	movff	3+?_scale,(sprintf@tmpval+3)
  6522  000538  C048  F0B5         	
  6523                           	line	1126
  6524                           	
  6525                           l5499:
  6526  00053C                     	movff	(sprintf@fval),(c:__div_to_l_@f1)
  6527  00053C  C0C0  F01E         	movff	(sprintf@fval+1),(c:__div_to_l_@f1+1)
  6528  000540  C0C1  F01F         	movff	(sprintf@fval+2),(c:__div_to_l_@f1+2)
  6529  000544  C0C2  F020         	movff	(sprintf@fval+3),(c:__div_to_l_@f1+3)
  6530  000548  C0C3  F021         	movff	(sprintf@tmpval),(c:__div_to_l_@f2)
  6531  00054C  C0B2  F022         	movff	(sprintf@tmpval+1),(c:__div_to_l_@f2+1)
  6532  000550  C0B3  F023         	movff	(sprintf@tmpval+2),(c:__div_to_l_@f2+2)
  6533  000554  C0B4  F024         	movff	(sprintf@tmpval+3),(c:__div_to_l_@f2+3)
  6534  000558  C0B5  F025         	call	__div_to_l_	;wreg free
  6535  00055C  EC5F  F01C         	movff	0+?__div_to_l_,(sprintf@val)
  6536  000560  C01E  F0B6         	movff	1+?__div_to_l_,(sprintf@val+1)
  6537  000564  C01F  F0B7         	movff	2+?__div_to_l_,(sprintf@val+2)
  6538  000568  C020  F0B8         	movff	3+?__div_to_l_,(sprintf@val+3)
  6539  00056C  C021  F0B9         	
  6540                           	goto	l5503
  6541  000570  EFD6  F002         	
  6542                           l404:
  6543  000574                     	
  6544                           l5501:
  6545  000574                     	movff	(sprintf@fval),(c:__tdiv_to_l_@f1)
  6546  000574  C0C0  F01E         	movff	(sprintf@fval+1),(c:__tdiv_to_l_@f1+1)
  6547  000578  C0C1  F01F         	movff	(sprintf@fval+2),(c:__tdiv_to_l_@f1+2)
  6548  00057C  C0C2  F020         	movff	(sprintf@fval+3),(c:__tdiv_to_l_@f1+3)
  6549  000580  C0C3  F021         	movff	(sprintf@tmpval),(c:__tdiv_to_l_@f2)
  6550  000584  C0B2  F022         	movff	(sprintf@tmpval+1),(c:__tdiv_to_l_@f2+1)
  6551  000588  C0B3  F023         	movff	(sprintf@tmpval+2),(c:__tdiv_to_l_@f2+2)
  6552  00058C  C0B4  F024         	movff	(sprintf@tmpval+3),(c:__tdiv_to_l_@f2+3)
  6553  000590  C0B5  F025         	call	__tdiv_to_l_	;wreg free
  6554  000594  EC88  F01B         	movff	0+?__tdiv_to_l_,(sprintf@val)
  6555  000598  C01E  F0B6         	movff	1+?__tdiv_to_l_,(sprintf@val+1)
  6556  00059C  C01F  F0B7         	movff	2+?__tdiv_to_l_,(sprintf@val+2)
  6557  0005A0  C020  F0B8         	movff	3+?__tdiv_to_l_,(sprintf@val+3)
  6558  0005A4  C021  F0B9         	
  6559                           	goto	l5503
  6560  0005A8  EFD6  F002         	
  6561                           l406:
  6562  0005AC                     	line	1129
  6563                           	
  6564                           l5503:
  6565  0005AC                     ;doprnt.c: 1129: fval = 0.0;
  6566                           	movlw	low(normalize32(0.0000000000000000))
  6567  0005AC  0E00               	movlb	0	; () banked
  6568  0005AE  0100               	movwf	((sprintf@fval))&0ffh
  6569  0005B0  6FC0               	movlw	high(normalize32(0.0000000000000000))
  6570  0005B2  0E00               	movwf	((sprintf@fval+1))&0ffh
  6571  0005B4  6FC1               	movlw	low highword(normalize32(0.0000000000000000))
  6572  0005B6  0E00               	movwf	((sprintf@fval+2))&0ffh
  6573  0005B8  6FC2               	movlw	high highword(normalize32(0.0000000000000000))
  6574  0005BA  0E00               	movwf	((sprintf@fval+3))&0ffh
  6575  0005BC  6FC3               	line	1130
  6576                           ;doprnt.c: 1130: } else {
  6577                           	goto	l5509
  6578  0005BE  EF1F  F003         	
  6579                           l398:; BSR set to: 0
  6580  0005C2                     
  6581                           	line	1131
  6582                           	
  6583                           l5505:; BSR set to: 0
  6584  0005C2                     
  6585                           ;doprnt.c: 1131: val = (unsigned long)fval;
  6586                           	movff	(sprintf@fval),(___fltol@f1)
  6587  0005C2  C0C0  F094         	movff	(sprintf@fval+1),(___fltol@f1+1)
  6588  0005C6  C0C1  F095         	movff	(sprintf@fval+2),(___fltol@f1+2)
  6589  0005CA  C0C2  F096         	movff	(sprintf@fval+3),(___fltol@f1+3)
  6590  0005CE  C0C3  F097         	call	___fltol	;wreg free
  6591  0005D2  ECEA  F01D         	movff	0+?___fltol,(sprintf@val)
  6592  0005D6  C094  F0B6         	movff	1+?___fltol,(sprintf@val+1)
  6593  0005DA  C095  F0B7         	movff	2+?___fltol,(sprintf@val+2)
  6594  0005DE  C096  F0B8         	movff	3+?___fltol,(sprintf@val+3)
  6595  0005E2  C097  F0B9         	
  6596                           	line	1132
  6597                           ;doprnt.c: 1132: fval -= (double)val;
  6598                           	movff	(sprintf@fval),(___flsub@b)
  6599  0005E6  C0C0  F094         	movff	(sprintf@fval+1),(___flsub@b+1)
  6600  0005EA  C0C1  F095         	movff	(sprintf@fval+2),(___flsub@b+2)
  6601  0005EE  C0C2  F096         	movff	(sprintf@fval+3),(___flsub@b+3)
  6602  0005F2  C0C3  F097         	movff	(sprintf@val),(c:___xxtofl@val)
  6603  0005F6  C0B6  F024         	movff	(sprintf@val+1),(c:___xxtofl@val+1)
  6604  0005FA  C0B7  F025         	movff	(sprintf@val+2),(c:___xxtofl@val+2)
  6605  0005FE  C0B8  F026         	movff	(sprintf@val+3),(c:___xxtofl@val+3)
  6606  000602  C0B9  F027         	movlw	(0)&0ffh
  6607  000606  0E00               	
  6608                           	call	___xxtofl
  6609  000608  EC95  F01A         	movff	0+?___xxtofl,(___flsub@a)
  6610  00060C  C024  F098         	movff	1+?___xxtofl,(___flsub@a+1)
  6611  000610  C025  F099         	movff	2+?___xxtofl,(___flsub@a+2)
  6612  000614  C026  F09A         	movff	3+?___xxtofl,(___flsub@a+3)
  6613  000618  C027  F09B         	
  6614                           	call	___flsub	;wreg free
  6615  00061C  ECF7  F022         	movff	0+?___flsub,(sprintf@fval)
  6616  000620  C094  F0C0         	movff	1+?___flsub,(sprintf@fval+1)
  6617  000624  C095  F0C1         	movff	2+?___flsub,(sprintf@fval+2)
  6618  000628  C096  F0C2         	movff	3+?___flsub,(sprintf@fval+3)
  6619  00062C  C097  F0C3         	
  6620                           	line	1133
  6621                           	
  6622                           l5507:
  6623  000630                     ;doprnt.c: 1133: exp = 0;
  6624                           	movlw	high(0)
  6625  000630  0E00               	movlb	0	; () banked
  6626  000632  0100               	movwf	((sprintf@exp+1))&0ffh
  6627  000634  6FBB               	movlw	low(0)
  6628  000636  0E00               	movwf	((sprintf@exp))&0ffh
  6629  000638  6FBA               	goto	l5509
  6630  00063A  EF1F  F003         	line	1134
  6631                           	
  6632                           l407:; BSR set to: 0
  6633  00063E                     
  6634                           	line	1136
  6635                           	
  6636                           l5509:; BSR set to: 0
  6637  00063E                     
  6638                           ;doprnt.c: 1134: }
  6639                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  6640                           	movlw	low(01h)
  6641  00063E  0E01               	movwf	((sprintf@c))&0ffh
  6642  000640  6FC6               	
  6643                           l5511:; BSR set to: 0
  6644  000642                     
  6645                           		movlw	10
  6646  000642  0E0A               	xorwf	((sprintf@c))&0ffh,w
  6647  000644  19C6               	btfss	status,2
  6648  000646  A4D8               	goto	u6251
  6649  000648  EF28  F003         	goto	u6250
  6650  00064C  EF2A  F003         
  6651                           u6251:
  6652  000650                     	goto	l5515
  6653  000650  EF2E  F003         u6250:
  6654  000654                     	goto	l5523
  6655  000654  EF59  F003         	
  6656                           l5513:; BSR set to: 0
  6657  000658                     
  6658                           	goto	l5523
  6659  000658  EF59  F003         	line	1137
  6660                           	
  6661                           l408:; BSR set to: 0
  6662  00065C                     
  6663                           	
  6664                           l5515:; BSR set to: 0
  6665  00065C                     
  6666                           ;doprnt.c: 1137: if(val < dpowers[c])
  6667                           	movf	((sprintf@c))&0ffh,w
  6668  00065C  51C6               	mullw	04h
  6669  00065E  0D04               	movlw	low((_dpowers))
  6670  000660  0E43               	addwf	(prodl),c,w
  6671  000662  24F3               	movwf	tblptrl
  6672  000664  6EF6               	movlw	high((_dpowers))
  6673  000666  0EFF               	addwfc	(prodh),c,w
  6674  000668  20F4               	movwf	tblptrh
  6675  00066A  6EF7               	if	0	;There are less than 3 active tblptr bytes
  6676  00066C                     	clrf	tblptru
  6678                           	global __mediumconst
  6681  00066C                     		tblrd	*+
  6682  00066C  0009               	movf	tablat,w
  6683  00066E  50F5               	subwf	((sprintf@val))&0ffh,w
  6684  000670  5DB6               	tblrd	*+
  6685  000672  0009               	movf	tablat,w
  6686  000674  50F5               	subwfb	((sprintf@val+1))&0ffh,w
  6687  000676  59B7               	tblrd	*+
  6688  000678  0009               	movf	tablat,w
  6689  00067A  50F5               	subwfb	((sprintf@val+2))&0ffh,w
  6690  00067C  59B8               	tblrd	*+
  6691  00067E  0009               	movf	tablat,w
  6692  000680  50F5               	subwfb	((sprintf@val+3))&0ffh,w
  6693  000682  59B9               	btfsc	status,0
  6694  000684  B0D8               	goto	u6261
  6695  000686  EF47  F003         	goto	u6260
  6696  00068A  EF49  F003         
  6697                           u6261:
  6698  00068E                     	goto	l5519
  6699  00068E  EF4D  F003         u6260:
  6700  000692                     	goto	l5523
  6701  000692  EF59  F003         	line	1138
  6702                           	
  6703                           l5517:; BSR set to: 0
  6704  000696                     
  6705                           ;doprnt.c: 1138: break;
  6706                           	goto	l5523
  6707  000696  EF59  F003         	
  6708                           l410:; BSR set to: 0
  6709  00069A                     
  6710                           	line	1136
  6711                           	
  6712                           l5519:; BSR set to: 0
  6713  00069A                     
  6714                           	incf	((sprintf@c))&0ffh
  6715  00069A  2BC6               	
  6716                           l5521:; BSR set to: 0
  6717  00069C                     
  6718                           		movlw	10
  6719  00069C  0E0A               	xorwf	((sprintf@c))&0ffh,w
  6720  00069E  19C6               	btfss	status,2
  6721  0006A0  A4D8               	goto	u6271
  6722  0006A2  EF55  F003         	goto	u6270
  6723  0006A6  EF57  F003         
  6724                           u6271:
  6725  0006AA                     	goto	l5515
  6726  0006AA  EF2E  F003         u6270:
  6727  0006AE                     	goto	l5523
  6728  0006AE  EF59  F003         	
  6729                           l409:; BSR set to: 0
  6730  0006B2                     
  6731                           	line	1142
  6732                           	
  6733                           l5523:; BSR set to: 0
  6734  0006B2                     
  6735                           ;doprnt.c: 1142: width -= prec + c + exp;
  6736                           	movff	(sprintf@c),??_sprintf+0+0
  6737  0006B2  C0C6  F0A8         	clrf	(??_sprintf+0+0+1)&0ffh
  6738  0006B6  6BA9               	btfsc	(??_sprintf+0+0)&0ffh,7
  6739  0006B8  BFA8               	decf	(??_sprintf+0+0+1)&0ffh
  6740  0006BA  07A9               	movf	((sprintf@prec))&0ffh,w
  6741  0006BC  51C4               	addwf	(??_sprintf+0+0)&0ffh
  6742  0006BE  27A8               	movf	((sprintf@prec+1))&0ffh,w
  6743  0006C0  51C5               	addwfc	(??_sprintf+0+1)&0ffh
  6744  0006C2  23A9               	movf	((sprintf@exp))&0ffh,w
  6745  0006C4  51BA               	addwf	(??_sprintf+0+0)&0ffh
  6746  0006C6  27A8               	movf	((sprintf@exp+1))&0ffh,w
  6747  0006C8  51BB               	addwfc	(??_sprintf+0+1)&0ffh
  6748  0006CA  23A9               	movf	(??_sprintf+0+0)&0ffh,w
  6749  0006CC  51A8               	subwf	((sprintf@width))&0ffh
  6750  0006CE  5FBE               	movf	(??_sprintf+0+1)&0ffh,w
  6751  0006D0  51A9               	subwfb	((sprintf@width+1))&0ffh
  6752  0006D2  5BBF               
  6753                           	line	1147
  6754                           ;doprnt.c: 1143: if(
  6755                           ;doprnt.c: 1147: prec)
  6756                           	movf	((sprintf@prec))&0ffh,w
  6757  0006D4  51C4               iorwf	((sprintf@prec+1))&0ffh,w
  6758  0006D6  11C5               	btfsc	status,2
  6759  0006D8  B4D8               	goto	u6281
  6760  0006DA  EF71  F003         	goto	u6280
  6761  0006DE  EF73  F003         
  6762                           u6281:
  6763  0006E2                     	goto	l5527
  6764  0006E2  EF78  F003         u6280:
  6765  0006E6                     	line	1148
  6766                           	
  6767                           l5525:; BSR set to: 0
  6768  0006E6                     
  6769                           ;doprnt.c: 1148: width--;
  6770                           	decf	((sprintf@width))&0ffh
  6771  0006E6  07BE               	btfss	status,0
  6772  0006E8  A0D8               	decf	((sprintf@width+1))&0ffh
  6773  0006EA  07BF               	goto	l5527
  6774  0006EC  EF78  F003         	
  6775                           l411:; BSR set to: 0
  6776  0006F0                     
  6777                           	line	1149
  6778                           	
  6779                           l5527:; BSR set to: 0
  6780  0006F0                     
  6781                           ;doprnt.c: 1149: if(flag & 0x03)
  6782                           	movlw	03h
  6783  0006F0  0E03               	andwf	((sprintf@flag))&0ffh,w
  6784  0006F2  15BC               	movwf	(??_sprintf+0+0)&0ffh
  6785  0006F4  6FA8               	movlw	0
  6786  0006F6  0E00               	andwf	((sprintf@flag+1))&0ffh,w
  6787  0006F8  15BD               	movwf	(??_sprintf+0+0+1)&0ffh
  6788  0006FA  6FA9               	movf	(??_sprintf+0+0)&0ffh,w
  6789  0006FC  51A8               iorwf	(??_sprintf+0+1)&0ffh,w
  6790  0006FE  11A9               	btfsc	status,2
  6791  000700  B4D8               	goto	u6291
  6792  000702  EF85  F003         	goto	u6290
  6793  000706  EF87  F003         
  6794                           u6291:
  6795  00070A                     	goto	l5531
  6796  00070A  EF8C  F003         u6290:
  6797  00070E                     	line	1150
  6798                           	
  6799                           l5529:; BSR set to: 0
  6800  00070E                     
  6801                           ;doprnt.c: 1150: width--;
  6802                           	decf	((sprintf@width))&0ffh
  6803  00070E  07BE               	btfss	status,0
  6804  000710  A0D8               	decf	((sprintf@width+1))&0ffh
  6805  000712  07BF               	goto	l5531
  6806  000714  EF8C  F003         	
  6807                           l412:; BSR set to: 0
  6808  000718                     
  6809                           	line	1153
  6810                           	
  6811                           l5531:; BSR set to: 0
  6812  000718                     
  6813                           ;doprnt.c: 1153: if(flag & 0x04) {
  6814                           	
  6815                           	btfss	((sprintf@flag))&0ffh,(2)&7
  6816  000718  A5BC               	goto	u6301
  6817  00071A  EF91  F003         	goto	u6300
  6818  00071E  EF93  F003         u6301:
  6819  000722                     	goto	l5553
  6820  000722  EFDB  F003         u6300:
  6821  000726                     	line	1157
  6822                           	
  6823                           l5533:; BSR set to: 0
  6824  000726                     
  6825                           ;doprnt.c: 1157: if(flag & 0x03)
  6826                           	movlw	03h
  6827  000726  0E03               	andwf	((sprintf@flag))&0ffh,w
  6828  000728  15BC               	movwf	(??_sprintf+0+0)&0ffh
  6829  00072A  6FA8               	movlw	0
  6830  00072C  0E00               	andwf	((sprintf@flag+1))&0ffh,w
  6831  00072E  15BD               	movwf	(??_sprintf+0+0+1)&0ffh
  6832  000730  6FA9               	movf	(??_sprintf+0+0)&0ffh,w
  6833  000732  51A8               iorwf	(??_sprintf+0+1)&0ffh,w
  6834  000734  11A9               	btfsc	status,2
  6835  000736  B4D8               	goto	u6311
  6836  000738  EFA0  F003         	goto	u6310
  6837  00073C  EFA2  F003         
  6838                           u6311:
  6839  000740                     	goto	l5545
  6840  000740  EFBB  F003         u6310:
  6841  000744                     	line	1159
  6842                           	
  6843                           l5535:; BSR set to: 0
  6844  000744                     
  6845                           ;doprnt.c: 1159: ((*sp++ = ('-')));
  6846                           	movff	(sprintf@sp),fsr2l
  6847  000744  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  6848  000748  C0A1  FFDA         	movlw	low(02Dh)
  6849  00074C  0E2D               	movwf	indf2
  6850  00074E  6EDF               	
  6851                           l5537:; BSR set to: 0
  6852  000750                     
  6853                           	infsnz	((sprintf@sp))&0ffh
  6854  000750  4BA0               	incf	((sprintf@sp+1))&0ffh
  6855  000752  2BA1               	goto	l5545
  6856  000754  EFBB  F003         	
  6857                           l414:; BSR set to: 0
  6858  000758                     
  6859                           	line	1168
  6860                           ;doprnt.c: 1168: while(width > 0) {
  6861                           	goto	l5545
  6862  000758  EFBB  F003         	
  6863                           l416:; BSR set to: 0
  6864  00075C                     
  6865                           	line	1169
  6866                           	
  6867                           l5539:; BSR set to: 0
  6868  00075C                     
  6869                           ;doprnt.c: 1169: ((*sp++ = ('0')));
  6870                           	movff	(sprintf@sp),fsr2l
  6871  00075C  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  6872  000760  C0A1  FFDA         	movlw	low(030h)
  6873  000764  0E30               	movwf	indf2
  6874  000766  6EDF               	
  6875                           l5541:; BSR set to: 0
  6876  000768                     
  6877                           	infsnz	((sprintf@sp))&0ffh
  6878  000768  4BA0               	incf	((sprintf@sp+1))&0ffh
  6879  00076A  2BA1               	line	1170
  6880                           	
  6881                           l5543:; BSR set to: 0
  6882  00076C                     
  6883                           ;doprnt.c: 1170: width--;
  6884                           	decf	((sprintf@width))&0ffh
  6885  00076C  07BE               	btfss	status,0
  6886  00076E  A0D8               	decf	((sprintf@width+1))&0ffh
  6887  000770  07BF               	goto	l5545
  6888  000772  EFBB  F003         	line	1171
  6889                           	
  6890                           l415:; BSR set to: 0
  6891  000776                     
  6892                           	line	1168
  6893                           	
  6894                           l5545:; BSR set to: 0
  6895  000776                     
  6896                           	btfsc	((sprintf@width+1))&0ffh,7
  6897  000776  BFBF               	goto	u6320
  6898  000778  EFC8  F003         	movf	((sprintf@width+1))&0ffh,w
  6899  00077C  51BF               	bnz	u6321
  6900  00077E  E106               	decf	((sprintf@width))&0ffh,w
  6901  000780  05BE               	btfsc	status,0
  6902  000782  B0D8               	goto	u6321
  6903  000784  EFC6  F003         	goto	u6320
  6904  000788  EFC8  F003         
  6905                           u6321:
  6906  00078C                     	goto	l5539
  6907  00078C  EFAE  F003         u6320:
  6908  000790                     	goto	l5569
  6909  000790  EF53  F004         	
  6910                           l417:; BSR set to: 0
  6911  000794                     
  6912                           	line	1173
  6913                           ;doprnt.c: 1171: }
  6914                           ;doprnt.c: 1173: } else
  6915                           	goto	l5569
  6916  000794  EF53  F004         	
  6917                           l413:; BSR set to: 0
  6918  000798                     
  6919                           	line	1180
  6920                           ;doprnt.c: 1175: {
  6921                           ;doprnt.c: 1180: while(width > 0) {
  6922                           	goto	l5553
  6923  000798  EFDB  F003         	
  6924                           l420:; BSR set to: 0
  6925  00079C                     
  6926                           	line	1181
  6927                           	
  6928                           l5547:; BSR set to: 0
  6929  00079C                     
  6930                           ;doprnt.c: 1181: ((*sp++ = (' ')));
  6931                           	movff	(sprintf@sp),fsr2l
  6932  00079C  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  6933  0007A0  C0A1  FFDA         	movlw	low(020h)
  6934  0007A4  0E20               	movwf	indf2
  6935  0007A6  6EDF               	
  6936                           l5549:; BSR set to: 0
  6937  0007A8                     
  6938                           	infsnz	((sprintf@sp))&0ffh
  6939  0007A8  4BA0               	incf	((sprintf@sp+1))&0ffh
  6940  0007AA  2BA1               	line	1182
  6941                           	
  6942                           l5551:; BSR set to: 0
  6943  0007AC                     
  6944                           ;doprnt.c: 1182: width--;
  6945                           	decf	((sprintf@width))&0ffh
  6946  0007AC  07BE               	btfss	status,0
  6947  0007AE  A0D8               	decf	((sprintf@width+1))&0ffh
  6948  0007B0  07BF               	goto	l5553
  6949  0007B2  EFDB  F003         	line	1183
  6950                           	
  6951                           l419:; BSR set to: 0
  6952  0007B6                     
  6953                           	line	1180
  6954                           	
  6955                           l5553:; BSR set to: 0
  6956  0007B6                     
  6957                           	btfsc	((sprintf@width+1))&0ffh,7
  6958  0007B6  BFBF               	goto	u6330
  6959  0007B8  EFE8  F003         	movf	((sprintf@width+1))&0ffh,w
  6960  0007BC  51BF               	bnz	u6331
  6961  0007BE  E106               	decf	((sprintf@width))&0ffh,w
  6962  0007C0  05BE               	btfsc	status,0
  6963  0007C2  B0D8               	goto	u6331
  6964  0007C4  EFE6  F003         	goto	u6330
  6965  0007C8  EFE8  F003         
  6966                           u6331:
  6967  0007CC                     	goto	l5547
  6968  0007CC  EFCE  F003         u6330:
  6969  0007D0                     	goto	l5555
  6970  0007D0  EFEA  F003         	
  6971                           l421:; BSR set to: 0
  6972  0007D4                     
  6973                           	line	1188
  6974                           	
  6975                           l5555:; BSR set to: 0
  6976  0007D4                     
  6977                           ;doprnt.c: 1183: }
  6978                           ;doprnt.c: 1188: if(flag & 0x03)
  6979                           	movlw	03h
  6980  0007D4  0E03               	andwf	((sprintf@flag))&0ffh,w
  6981  0007D6  15BC               	movwf	(??_sprintf+0+0)&0ffh
  6982  0007D8  6FA8               	movlw	0
  6983  0007DA  0E00               	andwf	((sprintf@flag+1))&0ffh,w
  6984  0007DC  15BD               	movwf	(??_sprintf+0+0+1)&0ffh
  6985  0007DE  6FA9               	movf	(??_sprintf+0+0)&0ffh,w
  6986  0007E0  51A8               iorwf	(??_sprintf+0+1)&0ffh,w
  6987  0007E2  11A9               	btfsc	status,2
  6988  0007E4  B4D8               	goto	u6341
  6989  0007E6  EFF7  F003         	goto	u6340
  6990  0007EA  EFF9  F003         
  6991                           u6341:
  6992  0007EE                     	goto	l5569
  6993  0007EE  EF53  F004         u6340:
  6994  0007F2                     	line	1190
  6995                           	
  6996                           l5557:; BSR set to: 0
  6997  0007F2                     
  6998                           ;doprnt.c: 1190: ((*sp++ = ('-')));
  6999                           	movff	(sprintf@sp),fsr2l
  7000  0007F2  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  7001  0007F6  C0A1  FFDA         	movlw	low(02Dh)
  7002  0007FA  0E2D               	movwf	indf2
  7003  0007FC  6EDF               	
  7004                           l5559:; BSR set to: 0
  7005  0007FE                     
  7006                           	infsnz	((sprintf@sp))&0ffh
  7007  0007FE  4BA0               	incf	((sprintf@sp+1))&0ffh
  7008  000800  2BA1               	goto	l5569
  7009  000802  EF53  F004         	
  7010                           l422:; BSR set to: 0
  7011  000806                     
  7012                           	goto	l5569
  7013  000806  EF53  F004         	line	1195
  7014                           	
  7015                           l418:; BSR set to: 0
  7016  00080A                     
  7017                           	line	1196
  7018                           ;doprnt.c: 1195: }
  7019                           ;doprnt.c: 1196: while(c--) {
  7020                           	goto	l5569
  7021  00080A  EF53  F004         	
  7022                           l424:; BSR set to: 0
  7023  00080E                     
  7024                           	line	1201
  7025                           	
  7026                           l5561:; BSR set to: 0
  7027  00080E                     
  7028                           ;doprnt.c: 1200: {
  7029                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  7030                           	movff	(sprintf@val),(c:___lldiv@dividend)
  7031  00080E  C0B6  F01E         	movff	(sprintf@val+1),(c:___lldiv@dividend+1)
  7032  000812  C0B7  F01F         	movff	(sprintf@val+2),(c:___lldiv@dividend+2)
  7033  000816  C0B8  F020         	movff	(sprintf@val+3),(c:___lldiv@dividend+3)
  7034  00081A  C0B9  F021         	movf	((sprintf@c))&0ffh,w
  7035  00081E  51C6               	mullw	04h
  7036  000820  0D04               	movlw	low((_dpowers))
  7037  000822  0E43               	addwf	(prodl),c,w
  7038  000824  24F3               	movwf	tblptrl
  7039  000826  6EF6               	movlw	high((_dpowers))
  7040  000828  0EFF               	addwfc	(prodh),c,w
  7041  00082A  20F4               	movwf	tblptrh
  7042  00082C  6EF7               	if	0	;There are less than 3 active tblptr bytes
  7043  00082E                     	clrf	tblptru
  7045                           	global __mediumconst
  7048  00082E                     	tblrd*+
  7049  00082E  0009               	
  7050                           	movff	tablat,(c:___lldiv@divisor)
  7051  000830  CFF5 F022          	tblrd*+
  7052  000834  0009               	
  7053                           	movff	tablat,(c:___lldiv@divisor+1)
  7054  000836  CFF5 F023          	tblrd*+
  7055  00083A  0009               	
  7056                           	movff	tablat,(c:___lldiv@divisor+2)
  7057  00083C  CFF5 F024          	tblrd*-
  7058  000840  000A               	
  7059                           	movff	tablat,(c:___lldiv@divisor+3)
  7060  000842  CFF5 F025          	call	___lldiv	;wreg free
  7061  000846  EC48  F020         	movff	0+?___lldiv,(sprintf@tmpval)
  7062  00084A  C01E  F0B2         	movff	1+?___lldiv,(sprintf@tmpval+1)
  7063  00084E  C01F  F0B3         	movff	2+?___lldiv,(sprintf@tmpval+2)
  7064  000852  C020  F0B4         	movff	3+?___lldiv,(sprintf@tmpval+3)
  7065  000856  C021  F0B5         	
  7066                           	line	1202
  7067                           	
  7068                           l5563:
  7069  00085A                     ;doprnt.c: 1202: tmpval.vd %= 10;
  7070                           	movff	(sprintf@tmpval),(c:___llmod@dividend)
  7071  00085A  C0B2  F02B         	movff	(sprintf@tmpval+1),(c:___llmod@dividend+1)
  7072  00085E  C0B3  F02C         	movff	(sprintf@tmpval+2),(c:___llmod@dividend+2)
  7073  000862  C0B4  F02D         	movff	(sprintf@tmpval+3),(c:___llmod@dividend+3)
  7074  000866  C0B5  F02E         	movlw	low(0Ah)
  7075  00086A  0E0A               	movwf	((c:___llmod@divisor)),c
  7076  00086C  6E2F               	movlw	high(0Ah)
  7077  00086E  0E00               	movwf	((c:___llmod@divisor+1)),c
  7078  000870  6E30               	movlw	low highword(0Ah)
  7079  000872  0E00               	movwf	((c:___llmod@divisor+2)),c
  7080  000874  6E31               	movlw	high highword(0Ah)
  7081  000876  0E00               	movwf	((c:___llmod@divisor+3)),c
  7082  000878  6E32               	call	___llmod	;wreg free
  7083  00087A  ECF8  F020         	movff	0+?___llmod,(sprintf@tmpval)
  7084  00087E  C02B  F0B2         	movff	1+?___llmod,(sprintf@tmpval+1)
  7085  000882  C02C  F0B3         	movff	2+?___llmod,(sprintf@tmpval+2)
  7086  000886  C02D  F0B4         	movff	3+?___llmod,(sprintf@tmpval+3)
  7087  00088A  C02E  F0B5         	
  7088                           	line	1203
  7089                           	
  7090                           l5565:
  7091  00088E                     ;doprnt.c: 1203: ((*sp++ = ('0' + tmpval.vd)));
  7092                           	movlb	0	; () banked
  7093  00088E  0100               	movf	((sprintf@tmpval))&0ffh,w
  7094  000890  51B2               	addlw	low(030h)
  7095  000892  0F30               	movff	(sprintf@sp),fsr2l
  7096  000894  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  7097  000898  C0A1  FFDA         	movwf	indf2,c
  7098  00089C  6EDF               
  7099                           	
  7100                           l5567:; BSR set to: 0
  7101  00089E                     
  7102                           	infsnz	((sprintf@sp))&0ffh
  7103  00089E  4BA0               	incf	((sprintf@sp+1))&0ffh
  7104  0008A0  2BA1               	goto	l5569
  7105  0008A2  EF53  F004         	line	1206
  7106                           	
  7107                           l423:; BSR set to: 0
  7108  0008A6                     
  7109                           	line	1196
  7110                           	
  7111                           l5569:; BSR set to: 0
  7112  0008A6                     
  7113                           	decf	((sprintf@c))&0ffh
  7114  0008A6  07C6               		incf	((sprintf@c))&0ffh,w
  7115  0008A8  29C6               	btfss	status,2
  7116  0008AA  A4D8               	goto	u6351
  7117  0008AC  EF5A  F004         	goto	u6350
  7118  0008B0  EF5C  F004         
  7119                           u6351:
  7120  0008B4                     	goto	l5561
  7121  0008B4  EF07  F004         u6350:
  7122  0008B8                     	goto	l5577
  7123  0008B8  EF6D  F004         	
  7124                           l425:; BSR set to: 0
  7125  0008BC                     
  7126                           	line	1207
  7127                           ;doprnt.c: 1204: }
  7128                           ;doprnt.c: 1206: }
  7129                           ;doprnt.c: 1207: while(exp > 0) {
  7130                           	goto	l5577
  7131  0008BC  EF6D  F004         	
  7132                           l427:; BSR set to: 0
  7133  0008C0                     
  7134                           	line	1208
  7135                           	
  7136                           l5571:; BSR set to: 0
  7137  0008C0                     
  7138                           ;doprnt.c: 1208: ((*sp++ = ('0')));
  7139                           	movff	(sprintf@sp),fsr2l
  7140  0008C0  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  7141  0008C4  C0A1  FFDA         	movlw	low(030h)
  7142  0008C8  0E30               	movwf	indf2
  7143  0008CA  6EDF               	
  7144                           l5573:; BSR set to: 0
  7145  0008CC                     
  7146                           	infsnz	((sprintf@sp))&0ffh
  7147  0008CC  4BA0               	incf	((sprintf@sp+1))&0ffh
  7148  0008CE  2BA1               	line	1209
  7149                           	
  7150                           l5575:; BSR set to: 0
  7151  0008D0                     
  7152                           ;doprnt.c: 1209: exp--;
  7153                           	decf	((sprintf@exp))&0ffh
  7154  0008D0  07BA               	btfss	status,0
  7155  0008D2  A0D8               	decf	((sprintf@exp+1))&0ffh
  7156  0008D4  07BB               	goto	l5577
  7157  0008D6  EF6D  F004         	line	1210
  7158                           	
  7159                           l426:; BSR set to: 0
  7160  0008DA                     
  7161                           	line	1207
  7162                           	
  7163                           l5577:; BSR set to: 0
  7164  0008DA                     
  7165                           	btfsc	((sprintf@exp+1))&0ffh,7
  7166  0008DA  BFBB               	goto	u6360
  7167  0008DC  EF7A  F004         	movf	((sprintf@exp+1))&0ffh,w
  7168  0008E0  51BB               	bnz	u6361
  7169  0008E2  E106               	decf	((sprintf@exp))&0ffh,w
  7170  0008E4  05BA               	btfsc	status,0
  7171  0008E6  B0D8               	goto	u6361
  7172  0008E8  EF78  F004         	goto	u6360
  7173  0008EC  EF7A  F004         
  7174                           u6361:
  7175  0008F0                     	goto	l5571
  7176  0008F0  EF60  F004         u6360:
  7177  0008F4                     	goto	l5579
  7178  0008F4  EF7C  F004         	
  7179                           l428:; BSR set to: 0
  7180  0008F8                     
  7181                           	line	1211
  7182                           	
  7183                           l5579:; BSR set to: 0
  7184  0008F8                     
  7185                           ;doprnt.c: 1210: }
  7186                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  7187                           	btfsc	((sprintf@prec+1))&0ffh,7
  7188  0008F8  BFC5               	goto	u6371
  7189  0008FA  EF88  F004         	movf	((sprintf@prec+1))&0ffh,w
  7190  0008FE  51C5               	bnz	u6370
  7191  000900  E109               	movlw	9
  7192  000902  0E09               	subwf	 ((sprintf@prec))&0ffh,w
  7193  000904  5DC4               	btfss	status,0
  7194  000906  A0D8               	goto	u6371
  7195  000908  EF88  F004         	goto	u6370
  7196  00090C  EF8A  F004         
  7197                           u6371:
  7198  000910                     	goto	l429
  7199  000910  EF8E  F004         u6370:
  7200  000914                     	line	1212
  7201                           	
  7202                           l5581:; BSR set to: 0
  7203  000914                     
  7204                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  7205                           	movlw	low(08h)
  7206  000914  0E08               	movwf	((sprintf@c))&0ffh
  7207  000916  6FC6               	goto	l5583
  7208  000918  EF92  F004         	line	1213
  7209                           	
  7210                           l429:; BSR set to: 0
  7211  00091C                     
  7212                           	line	1214
  7213                           ;doprnt.c: 1213: else
  7214                           ;doprnt.c: 1214: c = prec;
  7215                           	movff	(sprintf@prec),(sprintf@c)
  7216  00091C  C0C4  F0C6         	goto	l5583
  7217  000920  EF92  F004         	
  7218                           l430:; BSR set to: 0
  7219  000924                     
  7220                           	line	1215
  7221                           	
  7222                           l5583:; BSR set to: 0
  7223  000924                     
  7224                           ;doprnt.c: 1215: prec -= c;
  7225                           	movf	((sprintf@c))&0ffh,w
  7226  000924  51C6               	subwf	((sprintf@prec))&0ffh
  7227  000926  5FC4               	movlw	0
  7228  000928  0E00               	btfsc	((sprintf@c))&0ffh,7
  7229  00092A  BFC6               	movlw	0ffh
  7230  00092C  0EFF               	subwfb	((sprintf@prec+1))&0ffh
  7231  00092E  5BC5               
  7232                           	line	1219
  7233                           	
  7234                           l5585:; BSR set to: 0
  7235  000930                     
  7236                           ;doprnt.c: 1219: if(c)
  7237                           	movf	((sprintf@c))&0ffh,w
  7238  000930  51C6               	btfsc	status,2
  7239  000932  B4D8               	goto	u6381
  7240  000934  EF9E  F004         	goto	u6380
  7241  000938  EFA0  F004         u6381:
  7242  00093C                     	goto	l5591
  7243  00093C  EFAA  F004         u6380:
  7244  000940                     	line	1221
  7245                           	
  7246                           l5587:; BSR set to: 0
  7247  000940                     
  7248                           ;doprnt.c: 1221: ((*sp++ = ('.')));
  7249                           	movff	(sprintf@sp),fsr2l
  7250  000940  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  7251  000944  C0A1  FFDA         	movlw	low(02Eh)
  7252  000948  0E2E               	movwf	indf2
  7253  00094A  6EDF               	
  7254                           l5589:; BSR set to: 0
  7255  00094C                     
  7256                           	infsnz	((sprintf@sp))&0ffh
  7257  00094C  4BA0               	incf	((sprintf@sp+1))&0ffh
  7258  00094E  2BA1               	goto	l5591
  7259  000950  EFAA  F004         	
  7260                           l431:; BSR set to: 0
  7261  000954                     
  7262                           	line	1227
  7263                           	
  7264                           l5591:; BSR set to: 0
  7265  000954                     
  7266                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7267                           	movf	((sprintf@c))&0ffh,w
  7268  000954  51C6               	
  7269                           	call	_scale
  7270  000956  ECEA  F010         	movff	0+?_scale,(_sprintf$1716)
  7271  00095A  C045  F0AC         	movff	1+?_scale,(_sprintf$1716+1)
  7272  00095E  C046  F0AD         	movff	2+?_scale,(_sprintf$1716+2)
  7273  000962  C047  F0AE         	movff	3+?_scale,(_sprintf$1716+3)
  7274  000966  C048  F0AF         	
  7275                           	
  7276                           l5593:
  7277  00096A                     ;doprnt.c: 1227: val = (long)(fval * scale(c));
  7278                           	movff	(sprintf@fval),(c:___flmul@a)
  7279  00096A  C0C0  F030         	movff	(sprintf@fval+1),(c:___flmul@a+1)
  7280  00096E  C0C1  F031         	movff	(sprintf@fval+2),(c:___flmul@a+2)
  7281  000972  C0C2  F032         	movff	(sprintf@fval+3),(c:___flmul@a+3)
  7282  000976  C0C3  F033         	movff	(_sprintf$1716),(c:___flmul@b)
  7283  00097A  C0AC  F02C         	movff	(_sprintf$1716+1),(c:___flmul@b+1)
  7284  00097E  C0AD  F02D         	movff	(_sprintf$1716+2),(c:___flmul@b+2)
  7285  000982  C0AE  F02E         	movff	(_sprintf$1716+3),(c:___flmul@b+3)
  7286  000986  C0AF  F02F         	call	___flmul	;wreg free
  7287  00098A  EC38  F013         	movff	0+?___flmul,(___fltol@f1)
  7288  00098E  C02C  F094         	movff	1+?___flmul,(___fltol@f1+1)
  7289  000992  C02D  F095         	movff	2+?___flmul,(___fltol@f1+2)
  7290  000996  C02E  F096         	movff	3+?___flmul,(___fltol@f1+3)
  7291  00099A  C02F  F097         	
  7292                           	call	___fltol	;wreg free
  7293  00099E  ECEA  F01D         	movff	0+?___fltol,(sprintf@val)
  7294  0009A2  C094  F0B6         	movff	1+?___fltol,(sprintf@val+1)
  7295  0009A6  C095  F0B7         	movff	2+?___fltol,(sprintf@val+2)
  7296  0009AA  C096  F0B8         	movff	3+?___fltol,(sprintf@val+3)
  7297  0009AE  C097  F0B9         	
  7298                           	line	1228
  7299                           ;doprnt.c: 1228: while(c--) {
  7300                           	goto	l5605
  7301  0009B2  EF4E  F005         	
  7302                           l433:
  7303  0009B6                     	line	1229
  7304                           	
  7305                           l5595:
  7306  0009B6                     ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  7307                           	movff	(sprintf@val),(c:___lldiv@dividend)
  7308  0009B6  C0B6  F01E         	movff	(sprintf@val+1),(c:___lldiv@dividend+1)
  7309  0009BA  C0B7  F01F         	movff	(sprintf@val+2),(c:___lldiv@dividend+2)
  7310  0009BE  C0B8  F020         	movff	(sprintf@val+3),(c:___lldiv@dividend+3)
  7311  0009C2  C0B9  F021         	movlb	0	; () banked
  7312  0009C6  0100               	movf	((sprintf@c))&0ffh,w
  7313  0009C8  51C6               	mullw	04h
  7314  0009CA  0D04               	movlw	low((_dpowers))
  7315  0009CC  0E43               	addwf	(prodl),c,w
  7316  0009CE  24F3               	movwf	tblptrl
  7317  0009D0  6EF6               	movlw	high((_dpowers))
  7318  0009D2  0EFF               	addwfc	(prodh),c,w
  7319  0009D4  20F4               	movwf	tblptrh
  7320  0009D6  6EF7               	if	0	;There are less than 3 active tblptr bytes
  7321  0009D8                     	clrf	tblptru
  7323                           	global __mediumconst
  7326  0009D8                     	tblrd*+
  7327  0009D8  0009               	
  7328                           	movff	tablat,(c:___lldiv@divisor)
  7329  0009DA  CFF5 F022          	tblrd*+
  7330  0009DE  0009               	
  7331                           	movff	tablat,(c:___lldiv@divisor+1)
  7332  0009E0  CFF5 F023          	tblrd*+
  7333  0009E4  0009               	
  7334                           	movff	tablat,(c:___lldiv@divisor+2)
  7335  0009E6  CFF5 F024          	tblrd*-
  7336  0009EA  000A               	
  7337                           	movff	tablat,(c:___lldiv@divisor+3)
  7338  0009EC  CFF5 F025          	call	___lldiv	;wreg free
  7339  0009F0  EC48  F020         	movff	0+?___lldiv,(sprintf@tmpval)
  7340  0009F4  C01E  F0B2         	movff	1+?___lldiv,(sprintf@tmpval+1)
  7341  0009F8  C01F  F0B3         	movff	2+?___lldiv,(sprintf@tmpval+2)
  7342  0009FC  C020  F0B4         	movff	3+?___lldiv,(sprintf@tmpval+3)
  7343  000A00  C021  F0B5         	
  7344                           	line	1230
  7345                           	
  7346                           l5597:
  7347  000A04                     ;doprnt.c: 1230: tmpval.vd %= 10;
  7348                           	movff	(sprintf@tmpval),(c:___llmod@dividend)
  7349  000A04  C0B2  F02B         	movff	(sprintf@tmpval+1),(c:___llmod@dividend+1)
  7350  000A08  C0B3  F02C         	movff	(sprintf@tmpval+2),(c:___llmod@dividend+2)
  7351  000A0C  C0B4  F02D         	movff	(sprintf@tmpval+3),(c:___llmod@dividend+3)
  7352  000A10  C0B5  F02E         	movlw	low(0Ah)
  7353  000A14  0E0A               	movwf	((c:___llmod@divisor)),c
  7354  000A16  6E2F               	movlw	high(0Ah)
  7355  000A18  0E00               	movwf	((c:___llmod@divisor+1)),c
  7356  000A1A  6E30               	movlw	low highword(0Ah)
  7357  000A1C  0E00               	movwf	((c:___llmod@divisor+2)),c
  7358  000A1E  6E31               	movlw	high highword(0Ah)
  7359  000A20  0E00               	movwf	((c:___llmod@divisor+3)),c
  7360  000A22  6E32               	call	___llmod	;wreg free
  7361  000A24  ECF8  F020         	movff	0+?___llmod,(sprintf@tmpval)
  7362  000A28  C02B  F0B2         	movff	1+?___llmod,(sprintf@tmpval+1)
  7363  000A2C  C02C  F0B3         	movff	2+?___llmod,(sprintf@tmpval+2)
  7364  000A30  C02D  F0B4         	movff	3+?___llmod,(sprintf@tmpval+3)
  7365  000A34  C02E  F0B5         	
  7366                           	line	1231
  7367                           	
  7368                           l5599:
  7369  000A38                     ;doprnt.c: 1231: ((*sp++ = ('0' + tmpval.vd)));
  7370                           	movlb	0	; () banked
  7371  000A38  0100               	movf	((sprintf@tmpval))&0ffh,w
  7372  000A3A  51B2               	addlw	low(030h)
  7373  000A3C  0F30               	movff	(sprintf@sp),fsr2l
  7374  000A3E  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  7375  000A42  C0A1  FFDA         	movwf	indf2,c
  7376  000A46  6EDF               
  7377                           	
  7378                           l5601:; BSR set to: 0
  7379  000A48                     
  7380                           	infsnz	((sprintf@sp))&0ffh
  7381  000A48  4BA0               	incf	((sprintf@sp+1))&0ffh
  7382  000A4A  2BA1               	line	1232
  7383                           	
  7384                           l5603:; BSR set to: 0
  7385  000A4C                     
  7386                           ;doprnt.c: 1232: val %= dpowers[c];
  7387                           	movff	(sprintf@val),(c:___llmod@dividend)
  7388  000A4C  C0B6  F02B         	movff	(sprintf@val+1),(c:___llmod@dividend+1)
  7389  000A50  C0B7  F02C         	movff	(sprintf@val+2),(c:___llmod@dividend+2)
  7390  000A54  C0B8  F02D         	movff	(sprintf@val+3),(c:___llmod@dividend+3)
  7391  000A58  C0B9  F02E         	movf	((sprintf@c))&0ffh,w
  7392  000A5C  51C6               	mullw	04h
  7393  000A5E  0D04               	movlw	low((_dpowers))
  7394  000A60  0E43               	addwf	(prodl),c,w
  7395  000A62  24F3               	movwf	tblptrl
  7396  000A64  6EF6               	movlw	high((_dpowers))
  7397  000A66  0EFF               	addwfc	(prodh),c,w
  7398  000A68  20F4               	movwf	tblptrh
  7399  000A6A  6EF7               	if	0	;There are less than 3 active tblptr bytes
  7400  000A6C                     	clrf	tblptru
  7402                           	global __mediumconst
  7405  000A6C                     	tblrd*+
  7406  000A6C  0009               	
  7407                           	movff	tablat,(c:___llmod@divisor)
  7408  000A6E  CFF5 F02F          	tblrd*+
  7409  000A72  0009               	
  7410                           	movff	tablat,(c:___llmod@divisor+1)
  7411  000A74  CFF5 F030          	tblrd*+
  7412  000A78  0009               	
  7413                           	movff	tablat,(c:___llmod@divisor+2)
  7414  000A7A  CFF5 F031          	tblrd*-
  7415  000A7E  000A               	
  7416                           	movff	tablat,(c:___llmod@divisor+3)
  7417  000A80  CFF5 F032          	call	___llmod	;wreg free
  7418  000A84  ECF8  F020         	movff	0+?___llmod,(sprintf@val)
  7419  000A88  C02B  F0B6         	movff	1+?___llmod,(sprintf@val+1)
  7420  000A8C  C02C  F0B7         	movff	2+?___llmod,(sprintf@val+2)
  7421  000A90  C02D  F0B8         	movff	3+?___llmod,(sprintf@val+3)
  7422  000A94  C02E  F0B9         	
  7423                           	goto	l5605
  7424  000A98  EF4E  F005         	line	1233
  7425                           	
  7426                           l432:
  7427  000A9C                     	line	1228
  7428                           	
  7429                           l5605:
  7430  000A9C                     	movlb	0	; () banked
  7431  000A9C  0100               	decf	((sprintf@c))&0ffh
  7432  000A9E  07C6               		incf	((sprintf@c))&0ffh,w
  7433  000AA0  29C6               	btfss	status,2
  7434  000AA2  A4D8               	goto	u6391
  7435  000AA4  EF56  F005         	goto	u6390
  7436  000AA8  EF58  F005         
  7437                           u6391:
  7438  000AAC                     	goto	l5595
  7439  000AAC  EFDB  F004         u6390:
  7440  000AB0                     	goto	l5613
  7441  000AB0  EF69  F005         	
  7442                           l434:; BSR set to: 0
  7443  000AB4                     
  7444                           	line	1235
  7445                           ;doprnt.c: 1233: }
  7446                           ;doprnt.c: 1235: while(prec) {
  7447                           	goto	l5613
  7448  000AB4  EF69  F005         	
  7449                           l436:; BSR set to: 0
  7450  000AB8                     
  7451                           	line	1236
  7452                           	
  7453                           l5607:; BSR set to: 0
  7454  000AB8                     
  7455                           ;doprnt.c: 1236: ((*sp++ = ('0')));
  7456                           	movff	(sprintf@sp),fsr2l
  7457  000AB8  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  7458  000ABC  C0A1  FFDA         	movlw	low(030h)
  7459  000AC0  0E30               	movwf	indf2
  7460  000AC2  6EDF               	
  7461                           l5609:; BSR set to: 0
  7462  000AC4                     
  7463                           	infsnz	((sprintf@sp))&0ffh
  7464  000AC4  4BA0               	incf	((sprintf@sp+1))&0ffh
  7465  000AC6  2BA1               	line	1237
  7466                           	
  7467                           l5611:; BSR set to: 0
  7468  000AC8                     
  7469                           ;doprnt.c: 1237: prec--;
  7470                           	decf	((sprintf@prec))&0ffh
  7471  000AC8  07C4               	btfss	status,0
  7472  000ACA  A0D8               	decf	((sprintf@prec+1))&0ffh
  7473  000ACC  07C5               	goto	l5613
  7474  000ACE  EF69  F005         	line	1238
  7475                           	
  7476                           l435:; BSR set to: 0
  7477  000AD2                     
  7478                           	line	1235
  7479                           	
  7480                           l5613:; BSR set to: 0
  7481  000AD2                     
  7482                           	movf	((sprintf@prec))&0ffh,w
  7483  000AD2  51C4               iorwf	((sprintf@prec+1))&0ffh,w
  7484  000AD4  11C5               	btfss	status,2
  7485  000AD6  A4D8               	goto	u6401
  7486  000AD8  EF70  F005         	goto	u6400
  7487  000ADC  EF72  F005         
  7488                           u6401:
  7489  000AE0                     	goto	l5607
  7490  000AE0  EF5C  F005         u6400:
  7491  000AE4                     	goto	l5711
  7492  000AE4  EF54  F007         	
  7493                           l437:; BSR set to: 0
  7494  000AE8                     
  7495                           	line	1245
  7496                           ;doprnt.c: 1238: }
  7497                           ;doprnt.c: 1245: continue;
  7498                           	goto	l5711
  7499  000AE8  EF54  F007         	line	1246
  7500                           	
  7501                           l389:; BSR set to: 0
  7502  000AEC                     
  7503                           	line	1259
  7504                           	
  7505                           l5615:; BSR set to: 0
  7506  000AEC                     
  7507                           ;doprnt.c: 1246: }
  7508                           ;doprnt.c: 1253: {
  7509                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  7510                           	movff	(sprintf@ap),fsr2l
  7511  000AEC  C0B0  FFD9         	movff	(sprintf@ap+1),fsr2h
  7512  000AF0  C0B1  FFDA         	movff	postinc2,(sprintf@val)
  7513  000AF4  CFDE F0B6          	movff	postdec2,(sprintf@val+1)
  7514  000AF8  CFDD F0B7          	movlw	0
  7515  000AFC  0E00               	btfsc	((sprintf@val+1))&0ffh,7
  7516  000AFE  BFB7               	movlw	-1
  7517  000B00  0EFF               	movwf	((sprintf@val+2))&0ffh
  7518  000B02  6FB8               	movwf	((sprintf@val+3))&0ffh
  7519  000B04  6FB9               	
  7520                           l5617:; BSR set to: 0
  7521  000B06                     
  7522                           	movlw	02h
  7523  000B06  0E02               	addwf	((sprintf@ap))&0ffh
  7524  000B08  27B0               	movlw	0
  7525  000B0A  0E00               	addwfc	((sprintf@ap+1))&0ffh
  7526  000B0C  23B1               	line	1261
  7527                           	
  7528                           l5619:; BSR set to: 0
  7529  000B0E                     
  7530                           ;doprnt.c: 1261: if((long)val < 0) {
  7531                           	btfsc	((sprintf@val+3))&0ffh,7
  7532  000B0E  BFB9               	goto	u6410
  7533  000B10  EF8E  F005         	goto	u6411
  7534  000B14  EF8C  F005         
  7535                           u6411:
  7536  000B18                     	goto	l5625
  7537  000B18  EF9A  F005         u6410:
  7538  000B1C                     	line	1262
  7539                           	
  7540                           l5621:; BSR set to: 0
  7541  000B1C                     
  7542                           ;doprnt.c: 1262: flag |= 0x03;
  7543                           	movlw	03h
  7544  000B1C  0E03               	iorwf	((sprintf@flag))&0ffh
  7545  000B1E  13BC               	line	1263
  7546                           	
  7547                           l5623:; BSR set to: 0
  7548  000B20                     
  7549                           ;doprnt.c: 1263: val = -val;
  7550                           	comf	((sprintf@val+3))&0ffh
  7551  000B20  1FB9               	comf	((sprintf@val+2))&0ffh
  7552  000B22  1FB8               	comf	((sprintf@val+1))&0ffh
  7553  000B24  1FB7               	negf	((sprintf@val))&0ffh
  7554  000B26  6DB6               	movlw	0
  7555  000B28  0E00               	addwfc	((sprintf@val+1))&0ffh
  7556  000B2A  23B7               	addwfc	((sprintf@val+2))&0ffh
  7557  000B2C  23B8               	addwfc	((sprintf@val+3))&0ffh
  7558  000B2E  23B9               	goto	l5625
  7559  000B30  EF9A  F005         	line	1264
  7560                           	
  7561                           l438:; BSR set to: 0
  7562  000B34                     
  7563                           	line	1290
  7564                           	
  7565                           l5625:; BSR set to: 0
  7566  000B34                     
  7567                           ;doprnt.c: 1264: }
  7568                           ;doprnt.c: 1266: }
  7569                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  7570                           	movf	((sprintf@prec))&0ffh,w
  7571  000B34  51C4               iorwf	((sprintf@prec+1))&0ffh,w
  7572  000B36  11C5               	btfss	status,2
  7573  000B38  A4D8               	goto	u6421
  7574  000B3A  EFA1  F005         	goto	u6420
  7575  000B3E  EFA3  F005         
  7576                           u6421:
  7577  000B42                     	goto	l5631
  7578  000B42  EFB2  F005         u6420:
  7579  000B46                     	
  7580                           l5627:; BSR set to: 0
  7581  000B46                     
  7582                           	movf	((sprintf@val))&0ffh,w
  7583  000B46  51B6               iorwf	((sprintf@val+1))&0ffh,w
  7584  000B48  11B7               iorwf	((sprintf@val+2))&0ffh,w
  7585  000B4A  11B8               iorwf	((sprintf@val+3))&0ffh,w
  7586  000B4C  11B9               	btfss	status,2
  7587  000B4E  A4D8               	goto	u6431
  7588  000B50  EFAC  F005         	goto	u6430
  7589  000B54  EFAE  F005         
  7590                           u6431:
  7591  000B58                     	goto	l5631
  7592  000B58  EFB2  F005         u6430:
  7593  000B5C                     	line	1291
  7594                           	
  7595                           l5629:; BSR set to: 0
  7596  000B5C                     
  7597                           ;doprnt.c: 1291: prec++;
  7598                           	infsnz	((sprintf@prec))&0ffh
  7599  000B5C  4BC4               	incf	((sprintf@prec+1))&0ffh
  7600  000B5E  2BC5               	goto	l5631
  7601  000B60  EFB2  F005         	
  7602                           l439:; BSR set to: 0
  7603  000B64                     
  7604                           	line	1305
  7605                           	
  7606                           l5631:; BSR set to: 0
  7607  000B64                     
  7608                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  7609                           	movlw	low(01h)
  7610  000B64  0E01               	movwf	((sprintf@c))&0ffh
  7611  000B66  6FC6               	
  7612                           l5633:; BSR set to: 0
  7613  000B68                     
  7614                           		movlw	10
  7615  000B68  0E0A               	xorwf	((sprintf@c))&0ffh,w
  7616  000B6A  19C6               	btfss	status,2
  7617  000B6C  A4D8               	goto	u6441
  7618  000B6E  EFBB  F005         	goto	u6440
  7619  000B72  EFBD  F005         
  7620                           u6441:
  7621  000B76                     	goto	l5637
  7622  000B76  EFC1  F005         u6440:
  7623  000B7A                     	goto	l5645
  7624  000B7A  EFEC  F005         	
  7625                           l5635:; BSR set to: 0
  7626  000B7E                     
  7627                           	goto	l5645
  7628  000B7E  EFEC  F005         	line	1306
  7629                           	
  7630                           l440:; BSR set to: 0
  7631  000B82                     
  7632                           	
  7633                           l5637:; BSR set to: 0
  7634  000B82                     
  7635                           ;doprnt.c: 1306: if(val < dpowers[c])
  7636                           	movf	((sprintf@c))&0ffh,w
  7637  000B82  51C6               	mullw	04h
  7638  000B84  0D04               	movlw	low((_dpowers))
  7639  000B86  0E43               	addwf	(prodl),c,w
  7640  000B88  24F3               	movwf	tblptrl
  7641  000B8A  6EF6               	movlw	high((_dpowers))
  7642  000B8C  0EFF               	addwfc	(prodh),c,w
  7643  000B8E  20F4               	movwf	tblptrh
  7644  000B90  6EF7               	if	0	;There are less than 3 active tblptr bytes
  7645  000B92                     	clrf	tblptru
  7647                           	global __mediumconst
  7650  000B92                     		tblrd	*+
  7651  000B92  0009               	movf	tablat,w
  7652  000B94  50F5               	subwf	((sprintf@val))&0ffh,w
  7653  000B96  5DB6               	tblrd	*+
  7654  000B98  0009               	movf	tablat,w
  7655  000B9A  50F5               	subwfb	((sprintf@val+1))&0ffh,w
  7656  000B9C  59B7               	tblrd	*+
  7657  000B9E  0009               	movf	tablat,w
  7658  000BA0  50F5               	subwfb	((sprintf@val+2))&0ffh,w
  7659  000BA2  59B8               	tblrd	*+
  7660  000BA4  0009               	movf	tablat,w
  7661  000BA6  50F5               	subwfb	((sprintf@val+3))&0ffh,w
  7662  000BA8  59B9               	btfsc	status,0
  7663  000BAA  B0D8               	goto	u6451
  7664  000BAC  EFDA  F005         	goto	u6450
  7665  000BB0  EFDC  F005         
  7666                           u6451:
  7667  000BB4                     	goto	l5641
  7668  000BB4  EFE0  F005         u6450:
  7669  000BB8                     	goto	l5645
  7670  000BB8  EFEC  F005         	line	1307
  7671                           	
  7672                           l5639:; BSR set to: 0
  7673  000BBC                     
  7674                           ;doprnt.c: 1307: break;
  7675                           	goto	l5645
  7676  000BBC  EFEC  F005         	
  7677                           l442:; BSR set to: 0
  7678  000BC0                     
  7679                           	line	1305
  7680                           	
  7681                           l5641:; BSR set to: 0
  7682  000BC0                     
  7683                           	incf	((sprintf@c))&0ffh
  7684  000BC0  2BC6               	
  7685                           l5643:; BSR set to: 0
  7686  000BC2                     
  7687                           		movlw	10
  7688  000BC2  0E0A               	xorwf	((sprintf@c))&0ffh,w
  7689  000BC4  19C6               	btfss	status,2
  7690  000BC6  A4D8               	goto	u6461
  7691  000BC8  EFE8  F005         	goto	u6460
  7692  000BCC  EFEA  F005         
  7693                           u6461:
  7694  000BD0                     	goto	l5637
  7695  000BD0  EFC1  F005         u6460:
  7696  000BD4                     	goto	l5645
  7697  000BD4  EFEC  F005         	
  7698                           l441:; BSR set to: 0
  7699  000BD8                     
  7700                           	line	1339
  7701                           	
  7702                           l5645:; BSR set to: 0
  7703  000BD8                     
  7704                           ;doprnt.c: 1339: if(c < prec)
  7705                           	movlw	080h
  7706  000BD8  0E80               	btfsc	((sprintf@c))&0ffh,7
  7707  000BDA  BFC6               	movlw	07fh
  7708  000BDC  0E7F               	movwf	(??_sprintf+0+0)&0ffh
  7709  000BDE  6FA8               	movf	((sprintf@prec))&0ffh,w
  7710  000BE0  51C4               	subwf	((sprintf@c))&0ffh,w
  7711  000BE2  5DC6               	movf	((sprintf@prec+1))&0ffh,w
  7712  000BE4  51C5               	xorlw	80h
  7713  000BE6  0A80               	subwfb	(??_sprintf+0+0)&0ffh,w
  7714  000BE8  59A8               	btfsc	status,0
  7715  000BEA  B0D8               	goto	u6471
  7716  000BEC  EFFA  F005         	goto	u6470
  7717  000BF0  EFFC  F005         u6471:
  7718  000BF4                     	goto	l5649
  7719  000BF4  EF00  F006         u6470:
  7720  000BF8                     	line	1340
  7721                           	
  7722                           l5647:; BSR set to: 0
  7723  000BF8                     
  7724                           ;doprnt.c: 1340: c = prec;
  7725                           	movff	(sprintf@prec),(sprintf@c)
  7726  000BF8  C0C4  F0C6         	goto	l5653
  7727  000BFC  EF19  F006         	line	1341
  7728                           	
  7729                           l443:; BSR set to: 0
  7730  000C00                     
  7731                           	
  7732                           l5649:; BSR set to: 0
  7733  000C00                     
  7734                           ;doprnt.c: 1341: else if(prec < c)
  7735                           	movf	((sprintf@prec+1))&0ffh,w
  7736  000C00  51C5               	xorlw	80h
  7737  000C02  0A80               	movwf	(??_sprintf+0+0)&0ffh
  7738  000C04  6FA8               	movf	((sprintf@c))&0ffh,w
  7739  000C06  51C6               	subwf	((sprintf@prec))&0ffh,w
  7740  000C08  5DC4               	movlw	080h
  7741  000C0A  0E80               	btfsc	((sprintf@c))&0ffh,7
  7742  000C0C  BFC6               	movlw	07fh
  7743  000C0E  0E7F               	subwfb	(??_sprintf+0+0)&0ffh,w
  7744  000C10  59A8               	btfsc	status,0
  7745  000C12  B0D8               	goto	u6481
  7746  000C14  EF0E  F006         	goto	u6480
  7747  000C18  EF10  F006         u6481:
  7748  000C1C                     	goto	l5653
  7749  000C1C  EF19  F006         u6480:
  7750  000C20                     	line	1342
  7751                           	
  7752                           l5651:; BSR set to: 0
  7753  000C20                     
  7754                           ;doprnt.c: 1342: prec = c;
  7755                           	movf	((sprintf@c))&0ffh,w
  7756  000C20  51C6               	movwf	((sprintf@prec))&0ffh
  7757  000C22  6FC4               	clrf	((sprintf@prec+1))&0ffh
  7758  000C24  6BC5               	btfsc	((sprintf@prec))&0ffh,7
  7759  000C26  BFC4               	decf	((sprintf@prec+1))&0ffh
  7760  000C28  07C5               	goto	l5653
  7761  000C2A  EF19  F006         	
  7762                           l445:; BSR set to: 0
  7763  000C2E                     
  7764                           	goto	l5653
  7765  000C2E  EF19  F006         	line	1345
  7766                           	
  7767                           l444:; BSR set to: 0
  7768  000C32                     
  7769                           	
  7770                           l5653:; BSR set to: 0
  7771  000C32                     
  7772                           ;doprnt.c: 1345: if(width && flag & 0x03)
  7773                           	movf	((sprintf@width))&0ffh,w
  7774  000C32  51BE               iorwf	((sprintf@width+1))&0ffh,w
  7775  000C34  11BF               	btfsc	status,2
  7776  000C36  B4D8               	goto	u6491
  7777  000C38  EF20  F006         	goto	u6490
  7778  000C3C  EF22  F006         
  7779                           u6491:
  7780  000C40                     	goto	l5659
  7781  000C40  EF36  F006         u6490:
  7782  000C44                     	
  7783                           l5655:; BSR set to: 0
  7784  000C44                     
  7785                           	movlw	03h
  7786  000C44  0E03               	andwf	((sprintf@flag))&0ffh,w
  7787  000C46  15BC               	movwf	(??_sprintf+0+0)&0ffh
  7788  000C48  6FA8               	movlw	0
  7789  000C4A  0E00               	andwf	((sprintf@flag+1))&0ffh,w
  7790  000C4C  15BD               	movwf	(??_sprintf+0+0+1)&0ffh
  7791  000C4E  6FA9               	movf	(??_sprintf+0+0)&0ffh,w
  7792  000C50  51A8               iorwf	(??_sprintf+0+1)&0ffh,w
  7793  000C52  11A9               	btfsc	status,2
  7794  000C54  B4D8               	goto	u6501
  7795  000C56  EF2F  F006         	goto	u6500
  7796  000C5A  EF31  F006         
  7797                           u6501:
  7798  000C5E                     	goto	l5659
  7799  000C5E  EF36  F006         u6500:
  7800  000C62                     	line	1346
  7801                           	
  7802                           l5657:; BSR set to: 0
  7803  000C62                     
  7804                           ;doprnt.c: 1346: width--;
  7805                           	decf	((sprintf@width))&0ffh
  7806  000C62  07BE               	btfss	status,0
  7807  000C64  A0D8               	decf	((sprintf@width+1))&0ffh
  7808  000C66  07BF               	goto	l5659
  7809  000C68  EF36  F006         	
  7810                           l446:; BSR set to: 0
  7811  000C6C                     
  7812                           	line	1348
  7813                           	
  7814                           l5659:; BSR set to: 0
  7815  000C6C                     
  7816                           ;doprnt.c: 1348: if(flag & 0x4000) {
  7817                           	
  7818                           	btfss	((sprintf@flag+1))&0ffh,(14)&7
  7819  000C6C  ADBD               	goto	u6511
  7820  000C6E  EF3B  F006         	goto	u6510
  7821  000C72  EF3D  F006         u6511:
  7822  000C76                     	goto	l5667
  7823  000C76  EF5A  F006         u6510:
  7824  000C7A                     	line	1349
  7825                           	
  7826                           l5661:; BSR set to: 0
  7827  000C7A                     
  7828                           ;doprnt.c: 1349: if(width > prec)
  7829                           		movf	((sprintf@width))&0ffh,w
  7830  000C7A  51BE               	subwf	((sprintf@prec))&0ffh,w
  7831  000C7C  5DC4               	movf	((sprintf@prec+1))&0ffh,w
  7832  000C7E  51C5               	xorlw	80h
  7833  000C80  0A80               	movwf	(??_sprintf+0+0)&0ffh
  7834  000C82  6FA8               	movf	((sprintf@width+1))&0ffh,w
  7835  000C84  51BF               	xorlw	80h
  7836  000C86  0A80               	subwfb	(??_sprintf+0+0)&0ffh,w
  7837  000C88  59A8               	btfsc	status,0
  7838  000C8A  B0D8               	goto	u6521
  7839  000C8C  EF4A  F006         	goto	u6520
  7840  000C90  EF4C  F006         
  7841                           u6521:
  7842  000C94                     	goto	l5665
  7843  000C94  EF52  F006         u6520:
  7844  000C98                     	line	1350
  7845                           	
  7846                           l5663:; BSR set to: 0
  7847  000C98                     
  7848                           ;doprnt.c: 1350: width -= prec;
  7849                           	movf	((sprintf@prec))&0ffh,w
  7850  000C98  51C4               	subwf	((sprintf@width))&0ffh
  7851  000C9A  5FBE               	movf	((sprintf@prec+1))&0ffh,w
  7852  000C9C  51C5               	subwfb	((sprintf@width+1))&0ffh
  7853  000C9E  5BBF               
  7854                           	goto	l5667
  7855  000CA0  EF5A  F006         	line	1351
  7856                           	
  7857                           l448:; BSR set to: 0
  7858  000CA4                     
  7859                           	line	1352
  7860                           	
  7861                           l5665:; BSR set to: 0
  7862  000CA4                     
  7863                           ;doprnt.c: 1351: else
  7864                           ;doprnt.c: 1352: width = 0;
  7865                           	movlw	high(0)
  7866  000CA4  0E00               	movwf	((sprintf@width+1))&0ffh
  7867  000CA6  6FBF               	movlw	low(0)
  7868  000CA8  0E00               	movwf	((sprintf@width))&0ffh
  7869  000CAA  6FBE               	goto	l5667
  7870  000CAC  EF5A  F006         	
  7871                           l449:; BSR set to: 0
  7872  000CB0                     
  7873                           	goto	l5667
  7874  000CB0  EF5A  F006         	line	1353
  7875                           	
  7876                           l447:; BSR set to: 0
  7877  000CB4                     
  7878                           	line	1381
  7879                           	
  7880                           l5667:; BSR set to: 0
  7881  000CB4                     
  7882                           ;doprnt.c: 1353: }
  7883                           ;doprnt.c: 1381: if(width > c)
  7884                           	movlw	080h
  7885  000CB4  0E80               	btfsc	((sprintf@c))&0ffh,7
  7886  000CB6  BFC6               	movlw	07fh
  7887  000CB8  0E7F               	movwf	(??_sprintf+0+0)&0ffh
  7888  000CBA  6FA8               	movf	((sprintf@width))&0ffh,w
  7889  000CBC  51BE               	subwf	((sprintf@c))&0ffh,w
  7890  000CBE  5DC6               	movf	((sprintf@width+1))&0ffh,w
  7891  000CC0  51BF               	xorlw	80h
  7892  000CC2  0A80               	subwfb	(??_sprintf+0+0)&0ffh,w
  7893  000CC4  59A8               	btfsc	status,0
  7894  000CC6  B0D8               	goto	u6531
  7895  000CC8  EF68  F006         	goto	u6530
  7896  000CCC  EF6A  F006         u6531:
  7897  000CD0                     	goto	l5671
  7898  000CD0  EF72  F006         u6530:
  7899  000CD4                     	line	1382
  7900                           	
  7901                           l5669:; BSR set to: 0
  7902  000CD4                     
  7903                           ;doprnt.c: 1382: width -= c;
  7904                           	movf	((sprintf@c))&0ffh,w
  7905  000CD4  51C6               	subwf	((sprintf@width))&0ffh
  7906  000CD6  5FBE               	movlw	0
  7907  000CD8  0E00               	btfsc	((sprintf@c))&0ffh,7
  7908  000CDA  BFC6               	movlw	0ffh
  7909  000CDC  0EFF               	subwfb	((sprintf@width+1))&0ffh
  7910  000CDE  5BBF               
  7911                           	goto	l5673
  7912  000CE0  EF78  F006         	line	1383
  7913                           	
  7914                           l450:; BSR set to: 0
  7915  000CE4                     
  7916                           	line	1384
  7917                           	
  7918                           l5671:; BSR set to: 0
  7919  000CE4                     
  7920                           ;doprnt.c: 1383: else
  7921                           ;doprnt.c: 1384: width = 0;
  7922                           	movlw	high(0)
  7923  000CE4  0E00               	movwf	((sprintf@width+1))&0ffh
  7924  000CE6  6FBF               	movlw	low(0)
  7925  000CE8  0E00               	movwf	((sprintf@width))&0ffh
  7926  000CEA  6FBE               	goto	l5673
  7927  000CEC  EF78  F006         	
  7928                           l451:; BSR set to: 0
  7929  000CF0                     
  7930                           	line	1387
  7931                           	
  7932                           l5673:; BSR set to: 0
  7933  000CF0                     
  7934                           ;doprnt.c: 1387: if(flag & 0x04) {
  7935                           	
  7936                           	btfss	((sprintf@flag))&0ffh,(2)&7
  7937  000CF0  A5BC               	goto	u6541
  7938  000CF2  EF7D  F006         	goto	u6540
  7939  000CF6  EF7F  F006         u6541:
  7940  000CFA                     	goto	l5689
  7941  000CFA  EFBD  F006         u6540:
  7942  000CFE                     	line	1392
  7943                           	
  7944                           l5675:; BSR set to: 0
  7945  000CFE                     
  7946                           ;doprnt.c: 1392: if(flag & 0x03)
  7947                           	movlw	03h
  7948  000CFE  0E03               	andwf	((sprintf@flag))&0ffh,w
  7949  000D00  15BC               	movwf	(??_sprintf+0+0)&0ffh
  7950  000D02  6FA8               	movlw	0
  7951  000D04  0E00               	andwf	((sprintf@flag+1))&0ffh,w
  7952  000D06  15BD               	movwf	(??_sprintf+0+0+1)&0ffh
  7953  000D08  6FA9               	movf	(??_sprintf+0+0)&0ffh,w
  7954  000D0A  51A8               iorwf	(??_sprintf+0+1)&0ffh,w
  7955  000D0C  11A9               	btfsc	status,2
  7956  000D0E  B4D8               	goto	u6551
  7957  000D10  EF8C  F006         	goto	u6550
  7958  000D14  EF8E  F006         
  7959                           u6551:
  7960  000D18                     	goto	l5681
  7961  000D18  EF98  F006         u6550:
  7962  000D1C                     	line	1393
  7963                           	
  7964                           l5677:; BSR set to: 0
  7965  000D1C                     
  7966                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  7967                           	movff	(sprintf@sp),fsr2l
  7968  000D1C  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  7969  000D20  C0A1  FFDA         	movlw	low(02Dh)
  7970  000D24  0E2D               	movwf	indf2
  7971  000D26  6EDF               	
  7972                           l5679:; BSR set to: 0
  7973  000D28                     
  7974                           	infsnz	((sprintf@sp))&0ffh
  7975  000D28  4BA0               	incf	((sprintf@sp+1))&0ffh
  7976  000D2A  2BA1               	goto	l5681
  7977  000D2C  EF98  F006         	
  7978                           l453:; BSR set to: 0
  7979  000D30                     
  7980                           	line	1415
  7981                           	
  7982                           l5681:; BSR set to: 0
  7983  000D30                     
  7984                           ;doprnt.c: 1415: if(width)
  7985                           	movf	((sprintf@width))&0ffh,w
  7986  000D30  51BE               iorwf	((sprintf@width+1))&0ffh,w
  7987  000D32  11BF               	btfsc	status,2
  7988  000D34  B4D8               	goto	u6561
  7989  000D36  EF9F  F006         	goto	u6560
  7990  000D3A  EFA1  F006         
  7991                           u6561:
  7992  000D3E                     	goto	l5709
  7993  000D3E  EF43  F007         u6560:
  7994  000D42                     	goto	l5683
  7995  000D42  EFA3  F006         	line	1416
  7996                           ;doprnt.c: 1416: do
  7997                           	
  7998                           l455:; BSR set to: 0
  7999  000D46                     
  8000                           	line	1417
  8001                           	
  8002                           l5683:; BSR set to: 0
  8003  000D46                     
  8004                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  8005                           	movff	(sprintf@sp),fsr2l
  8006  000D46  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  8007  000D4A  C0A1  FFDA         	movlw	low(030h)
  8008  000D4E  0E30               	movwf	indf2
  8009  000D50  6EDF               	
  8010                           l5685:; BSR set to: 0
  8011  000D52                     
  8012                           	infsnz	((sprintf@sp))&0ffh
  8013  000D52  4BA0               	incf	((sprintf@sp+1))&0ffh
  8014  000D54  2BA1               	line	1418
  8015                           	
  8016                           l5687:; BSR set to: 0
  8017  000D56                     
  8018                           ;doprnt.c: 1418: while(--width);
  8019                           	decf	((sprintf@width))&0ffh
  8020  000D56  07BE               	btfss	status,0
  8021  000D58  A0D8               	decf	((sprintf@width+1))&0ffh
  8022  000D5A  07BF               	movf	((sprintf@width))&0ffh,w
  8023  000D5C  51BE               iorwf	((sprintf@width+1))&0ffh,w
  8024  000D5E  11BF               	btfss	status,2
  8025  000D60  A4D8               	goto	u6571
  8026  000D62  EFB5  F006         	goto	u6570
  8027  000D66  EFB7  F006         
  8028                           u6571:
  8029  000D6A                     	goto	l5683
  8030  000D6A  EFA3  F006         u6570:
  8031  000D6E                     	goto	l5709
  8032  000D6E  EF43  F007         	
  8033                           l456:; BSR set to: 0
  8034  000D72                     
  8035                           	goto	l5709
  8036  000D72  EF43  F007         	
  8037                           l454:; BSR set to: 0
  8038  000D76                     
  8039                           	line	1420
  8040                           ;doprnt.c: 1420: } else
  8041                           	goto	l5709
  8042  000D76  EF43  F007         	
  8043                           l452:; BSR set to: 0
  8044  000D7A                     
  8045                           	line	1428
  8046                           	
  8047                           l5689:; BSR set to: 0
  8048  000D7A                     
  8049                           ;doprnt.c: 1422: {
  8050                           ;doprnt.c: 1424: if(width
  8051                           ;doprnt.c: 1428: )
  8052                           	movf	((sprintf@width))&0ffh,w
  8053  000D7A  51BE               iorwf	((sprintf@width+1))&0ffh,w
  8054  000D7C  11BF               	btfsc	status,2
  8055  000D7E  B4D8               	goto	u6581
  8056  000D80  EFC4  F006         	goto	u6580
  8057  000D84  EFC6  F006         
  8058                           u6581:
  8059  000D88                     	goto	l5697
  8060  000D88  EFE0  F006         u6580:
  8061  000D8C                     	goto	l5691
  8062  000D8C  EFC8  F006         	line	1429
  8063                           ;doprnt.c: 1429: do
  8064                           	
  8065                           l459:; BSR set to: 0
  8066  000D90                     
  8067                           	line	1430
  8068                           	
  8069                           l5691:; BSR set to: 0
  8070  000D90                     
  8071                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  8072                           	movff	(sprintf@sp),fsr2l
  8073  000D90  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  8074  000D94  C0A1  FFDA         	movlw	low(020h)
  8075  000D98  0E20               	movwf	indf2
  8076  000D9A  6EDF               	
  8077                           l5693:; BSR set to: 0
  8078  000D9C                     
  8079                           	infsnz	((sprintf@sp))&0ffh
  8080  000D9C  4BA0               	incf	((sprintf@sp+1))&0ffh
  8081  000D9E  2BA1               	line	1431
  8082                           	
  8083                           l5695:; BSR set to: 0
  8084  000DA0                     
  8085                           ;doprnt.c: 1431: while(--width);
  8086                           	decf	((sprintf@width))&0ffh
  8087  000DA0  07BE               	btfss	status,0
  8088  000DA2  A0D8               	decf	((sprintf@width+1))&0ffh
  8089  000DA4  07BF               	movf	((sprintf@width))&0ffh,w
  8090  000DA6  51BE               iorwf	((sprintf@width+1))&0ffh,w
  8091  000DA8  11BF               	btfss	status,2
  8092  000DAA  A4D8               	goto	u6591
  8093  000DAC  EFDA  F006         	goto	u6590
  8094  000DB0  EFDC  F006         
  8095                           u6591:
  8096  000DB4                     	goto	l5691
  8097  000DB4  EFC8  F006         u6590:
  8098  000DB8                     	goto	l5697
  8099  000DB8  EFE0  F006         	
  8100                           l460:; BSR set to: 0
  8101  000DBC                     
  8102                           	goto	l5697
  8103  000DBC  EFE0  F006         	
  8104                           l458:; BSR set to: 0
  8105  000DC0                     
  8106                           	line	1438
  8107                           	
  8108                           l5697:; BSR set to: 0
  8109  000DC0                     
  8110                           ;doprnt.c: 1438: if(flag & 0x03)
  8111                           	movlw	03h
  8112  000DC0  0E03               	andwf	((sprintf@flag))&0ffh,w
  8113  000DC2  15BC               	movwf	(??_sprintf+0+0)&0ffh
  8114  000DC4  6FA8               	movlw	0
  8115  000DC6  0E00               	andwf	((sprintf@flag+1))&0ffh,w
  8116  000DC8  15BD               	movwf	(??_sprintf+0+0+1)&0ffh
  8117  000DCA  6FA9               	movf	(??_sprintf+0+0)&0ffh,w
  8118  000DCC  51A8               iorwf	(??_sprintf+0+1)&0ffh,w
  8119  000DCE  11A9               	btfsc	status,2
  8120  000DD0  B4D8               	goto	u6601
  8121  000DD2  EFED  F006         	goto	u6600
  8122  000DD6  EFEF  F006         
  8123                           u6601:
  8124  000DDA                     	goto	l5709
  8125  000DDA  EF43  F007         u6600:
  8126  000DDE                     	line	1439
  8127                           	
  8128                           l5699:; BSR set to: 0
  8129  000DDE                     
  8130                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  8131                           	movff	(sprintf@sp),fsr2l
  8132  000DDE  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  8133  000DE2  C0A1  FFDA         	movlw	low(02Dh)
  8134  000DE6  0E2D               	movwf	indf2
  8135  000DE8  6EDF               	
  8136                           l5701:; BSR set to: 0
  8137  000DEA                     
  8138                           	infsnz	((sprintf@sp))&0ffh
  8139  000DEA  4BA0               	incf	((sprintf@sp+1))&0ffh
  8140  000DEC  2BA1               	goto	l5709
  8141  000DEE  EF43  F007         	
  8142                           l461:; BSR set to: 0
  8143  000DF2                     
  8144                           	goto	l5709
  8145  000DF2  EF43  F007         	line	1469
  8146                           	
  8147                           l457:; BSR set to: 0
  8148  000DF6                     
  8149                           	line	1474
  8150                           ;doprnt.c: 1469: }
  8151                           ;doprnt.c: 1474: while(prec--) {
  8152                           	goto	l5709
  8153  000DF6  EF43  F007         	
  8154                           l463:; BSR set to: 0
  8155  000DFA                     
  8156                           	line	1489
  8157                           	
  8158                           l5703:; BSR set to: 0
  8159  000DFA                     
  8160                           ;doprnt.c: 1478: {
  8161                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8162                           	movff	(sprintf@prec),??_sprintf+0+0
  8163  000DFA  C0C4  F0A8         	movff	(sprintf@prec+1),??_sprintf+0+0+1
  8164  000DFE  C0C5  F0A9         	bcf	status,0
  8165  000E02  90D8               	rlcf	(??_sprintf+0+0)&0ffh
  8166  000E04  37A8               	rlcf	(??_sprintf+0+1)&0ffh
  8167  000E06  37A9               	bcf	status,0
  8168  000E08  90D8               	rlcf	(??_sprintf+0+0)&0ffh
  8169  000E0A  37A8               	rlcf	(??_sprintf+0+1)&0ffh
  8170  000E0C  37A9               	movlw	low((_dpowers))
  8171  000E0E  0E43               	addwf	(??_sprintf+0+0)&0ffh,w
  8172  000E10  25A8               	movwf	tblptrl
  8173  000E12  6EF6               	movlw	high((_dpowers))
  8174  000E14  0EFF               	addwfc	(??_sprintf+0+1)&0ffh,w
  8175  000E16  21A9               	movwf	tblptrh
  8176  000E18  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8177  000E1A                     	clrf	tblptru
  8179                           	global __mediumconst
  8182  000E1A                     	tblrd*+
  8183  000E1A  0009               	
  8184                           	movff	tablat,(c:___lldiv@divisor)
  8185  000E1C  CFF5 F022          	tblrd*+
  8186  000E20  0009               	
  8187                           	movff	tablat,(c:___lldiv@divisor+1)
  8188  000E22  CFF5 F023          	tblrd*+
  8189  000E26  0009               	
  8190                           	movff	tablat,(c:___lldiv@divisor+2)
  8191  000E28  CFF5 F024          	tblrd*-
  8192  000E2C  000A               	
  8193                           	movff	tablat,(c:___lldiv@divisor+3)
  8194  000E2E  CFF5 F025          	movff	(sprintf@val),(c:___lldiv@dividend)
  8195  000E32  C0B6  F01E         	movff	(sprintf@val+1),(c:___lldiv@dividend+1)
  8196  000E36  C0B7  F01F         	movff	(sprintf@val+2),(c:___lldiv@dividend+2)
  8197  000E3A  C0B8  F020         	movff	(sprintf@val+3),(c:___lldiv@dividend+3)
  8198  000E3E  C0B9  F021         	call	___lldiv	;wreg free
  8199  000E42  EC48  F020         	movff	0+?___lldiv,(c:___llmod@dividend)
  8200  000E46  C01E  F02B         	movff	1+?___lldiv,(c:___llmod@dividend+1)
  8201  000E4A  C01F  F02C         	movff	2+?___lldiv,(c:___llmod@dividend+2)
  8202  000E4E  C020  F02D         	movff	3+?___lldiv,(c:___llmod@dividend+3)
  8203  000E52  C021  F02E         	
  8204                           	movlw	low(0Ah)
  8205  000E56  0E0A               	movwf	((c:___llmod@divisor)),c
  8206  000E58  6E2F               	movlw	high(0Ah)
  8207  000E5A  0E00               	movwf	((c:___llmod@divisor+1)),c
  8208  000E5C  6E30               	movlw	low highword(0Ah)
  8209  000E5E  0E00               	movwf	((c:___llmod@divisor+2)),c
  8210  000E60  6E31               	movlw	high highword(0Ah)
  8211  000E62  0E00               	movwf	((c:___llmod@divisor+3)),c
  8212  000E64  6E32               	call	___llmod	;wreg free
  8213  000E66  ECF8  F020         	movf	(0+?___llmod),c,w
  8214  000E6A  502B               	addlw	low(030h)
  8215  000E6C  0F30               	movlb	0	; () banked
  8216  000E6E  0100               	movwf	((sprintf@c))&0ffh
  8217  000E70  6FC6               	line	1524
  8218                           	
  8219                           l5705:; BSR set to: 0
  8220  000E72                     
  8221                           ;doprnt.c: 1523: }
  8222                           ;doprnt.c: 1524: ((*sp++ = (c)));
  8223                           	movff	(sprintf@sp),fsr2l
  8224  000E72  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  8225  000E76  C0A1  FFDA         	movff	(sprintf@c),indf2
  8226  000E7A  C0C6  FFDF         
  8227                           	
  8228                           l5707:; BSR set to: 0
  8229  000E7E                     
  8230                           	infsnz	((sprintf@sp))&0ffh
  8231  000E7E  4BA0               	incf	((sprintf@sp+1))&0ffh
  8232  000E80  2BA1               	goto	l5709
  8233  000E82  EF43  F007         	line	1525
  8234                           	
  8235                           l462:; BSR set to: 0
  8236  000E86                     
  8237                           	line	1474
  8238                           	
  8239                           l5709:; BSR set to: 0
  8240  000E86                     
  8241                           	decf	((sprintf@prec))&0ffh
  8242  000E86  07C4               	btfss	status,0
  8243  000E88  A0D8               	decf	((sprintf@prec+1))&0ffh
  8244  000E8A  07C5               		incf	((sprintf@prec))&0ffh,w
  8245  000E8C  29C4               	bnz	u6611
  8246  000E8E  E106               	incf	((sprintf@prec+1))&0ffh,w
  8247  000E90  29C5               	btfss	status,2
  8248  000E92  A4D8               	goto	u6611
  8249  000E94  EF4E  F007         	goto	u6610
  8250  000E98  EF50  F007         
  8251                           u6611:
  8252  000E9C                     	goto	l5703
  8253  000E9C  EFFD  F006         u6610:
  8254  000EA0                     	goto	l5711
  8255  000EA0  EF54  F007         	
  8256                           l464:; BSR set to: 0
  8257  000EA4                     
  8258                           	goto	l5711
  8259  000EA4  EF54  F007         	line	1533
  8260                           	
  8261                           l364:; BSR set to: 0
  8262  000EA8                     
  8263                           	line	536
  8264                           	
  8265                           l5711:; BSR set to: 0
  8266  000EA8                     
  8267                           	movff	(sprintf@f),tblptrl
  8268  000EA8  C0A2  FFF6         	movff	(sprintf@f+1),tblptrh
  8269  000EAC  C0A3  FFF7         	infsnz	((sprintf@f))&0ffh
  8270  000EB0  4BA2               	incf	((sprintf@f+1))&0ffh
  8271  000EB2  2BA3               	if	0	;tblptru may be non-zero
  8272  000EB4                     	clrf	tblptru
  8274  000EB4                     	if	0	;tblptru may be non-zero
  8275  000EB4                     	global __mediumconst
  8276                           movlw	low highword(__mediumconst)
  8279  000EB4                     	tblrd	*
  8280  000EB4  0008               	
  8281                           	movff	tablat,(sprintf@c)
  8282  000EB6  CFF5 F0C6          	movf	((sprintf@c))&0ffh,w
  8283  000EBA  51C6               	btfss	status,2
  8284  000EBC  A4D8               	goto	u6621
  8285  000EBE  EF63  F007         	goto	u6620
  8286  000EC2  EF65  F007         u6621:
  8287  000EC6                     	goto	l5387
  8288  000EC6  EF10  F000         u6620:
  8289  000ECA                     	goto	l5713
  8290  000ECA  EF69  F007         	
  8291                           l465:; BSR set to: 0
  8292  000ECE                     
  8293                           	goto	l5713
  8294  000ECE  EF69  F007         	line	1535
  8295                           ;doprnt.c: 1525: }
  8296                           ;doprnt.c: 1533: }
  8297                           ;doprnt.c: 1535: alldone:
  8298                           	
  8299                           l383:; BSR set to: 0
  8300  000ED2                     
  8301                           	line	1538
  8302                           	
  8303                           l5713:; BSR set to: 0
  8304  000ED2                     
  8305                           ;doprnt.c: 1538: *sp = 0;
  8306                           	movff	(sprintf@sp),fsr2l
  8307  000ED2  C0A0  FFD9         	movff	(sprintf@sp+1),fsr2h
  8308  000ED6  C0A1  FFDA         	movlw	low(0)
  8309  000EDA  0E00               	movwf	indf2
  8310  000EDC  6EDF               	goto	l466
  8311  000EDE  EF71  F007         	line	1540
  8312                           	
  8313                           l5715:; BSR set to: 0
  8314  000EE2                     
  8315                           	line	1541
  8316                           ;doprnt.c: 1540: return 0;
  8317                           ;	Return value of _sprintf is never used
  8318                           	
  8319                           l466:; BSR set to: 0
  8320  000EE2                     
  8321                           	return	;funcret
  8322  000EE2  0012               	opt stack 0
  8323                           GLOBAL	__end_of_sprintf
  8324                           	__end_of_sprintf:
  8325  000EE4                     	signat	_sprintf,4698
  8326                           	global	_scale
  8327                           
  8328 ;; *************** function _scale *****************
  8329 ;; Defined at:
  8330 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8331 ;; Parameters:    Size  Location     Type
  8332 ;;  scl             1    wreg     char 
  8333 ;; Auto vars:     Size  Location     Type
  8334 ;;  scl             1   76[COMRAM] char 
  8335 ;; Return value:  Size  Location     Type
  8336 ;;                  4   68[COMRAM] char 
  8337 ;; Registers used:
  8338 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8339 ;; Tracked objects:
  8340 ;;		On entry : 0/0
  8341 ;;		On exit  : 0/0
  8342 ;;		Unchanged: 0/0
  8343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  8344 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  8345 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  8346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  8347 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  8348 ;;Total ram usage:        9 bytes
  8349 ;; Hardware stack levels used:    1
  8350 ;; Hardware stack levels required when called:    4
  8351 ;; This function calls:
  8352 ;;		___awdiv
  8353 ;;		___awmod
  8354 ;;		___flmul
  8355 ;; This function is called by:
  8356 ;;		_sprintf
  8357 ;; This function uses a non-reentrant model
  8358 ;;
  8359                           psect	text2,class=CODE,space=0,reloc=2,group=0
  8360                           	line	425
  8361                           global __ptext2
  8362                           __ptext2:
  8363  0021D4                     psect	text2
  8364                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  8365                           	line	425
  8366                           	global	__size_of_scale
  8367                           	__size_of_scale	equ	__end_of_scale-_scale
  8368  0000                     	
  8369                           _scale:; BSR set to: 0
  8370  0021D4                     
  8371                           ;incstack = 0
  8372                           	opt	stack 25
  8373                           ;scale@scl stored from wreg
  8374                           	movwf	((c:scale@scl)),c
  8375  0021D4  6E4D               	line	428
  8376                           	
  8377                           l3575:
  8378  0021D6                     ;doprnt.c: 428: if(scl < 0) {
  8379                           	btfsc	((c:scale@scl)),c,7
  8380  0021D6  BE4D               	goto	u3460
  8381  0021D8  EFF2  F010         	goto	u3461
  8382  0021DC  EFF0  F010         
  8383                           u3461:
  8384  0021E0                     	goto	l3595
  8385  0021E0  EF16  F012         u3460:
  8386  0021E4                     	line	429
  8387                           	
  8388                           l3577:
  8389  0021E4                     ;doprnt.c: 429: scl = -scl;
  8390                           	negf	((c:scale@scl)),c
  8391  0021E4  6C4D               	line	430
  8392                           ;doprnt.c: 430: if(scl>=110)
  8393                           		movf	((c:scale@scl)),c,w
  8394  0021E6  504D               	xorlw	80h
  8395  0021E8  0A80               	addlw	-(80h^06Eh)
  8396  0021EA  0F12               	btfss	status,0
  8397  0021EC  A0D8               	goto	u3471
  8398  0021EE  EFFB  F010         	goto	u3470
  8399  0021F2  EFFD  F010         
  8400                           u3471:
  8401  0021F6                     	goto	l3585
  8402  0021F6  EF9A  F011         u3470:
  8403  0021FA                     	line	431
  8404                           	
  8405                           l3579:
  8406  0021FA                     ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
                                 %10];
  8407                           	movlw	high(0Ah)
  8408  0021FA  0E00               	movwf	((c:___awdiv@divisor+1)),c
  8409  0021FC  6E27               	movlw	low(0Ah)
  8410  0021FE  0E0A               	movwf	((c:___awdiv@divisor)),c
  8411  002200  6E26               	movlw	high(064h)
  8412  002202  0E00               	movwf	((c:___awmod@divisor+1)),c
  8413  002204  6E21               	movlw	low(064h)
  8414  002206  0E64               	movwf	((c:___awmod@divisor)),c
  8415  002208  6E20               	movf	((c:scale@scl)),c,w
  8416  00220A  504D               	movwf	((c:___awmod@dividend)),c
  8417  00220C  6E1E               	clrf	((c:___awmod@dividend+1)),c
  8418  00220E  6A1F               	btfsc	((c:___awmod@dividend)),c,7
  8419  002210  BE1E               	decf	((c:___awmod@dividend+1)),c
  8420  002212  061F               	call	___awmod	;wreg free
  8421  002214  EC0A  F01F         	movff	0+?___awmod,(c:___awdiv@dividend)
  8422  002218  C01E  F024         	movff	1+?___awmod,(c:___awdiv@dividend+1)
  8423  00221C  C01F  F025         	call	___awdiv	;wreg free
  8424  002220  EC94  F01E         	bcf	status,0
  8425  002224  90D8               	rlcf	(0+?___awdiv),c
  8426  002226  3624               	rlcf	(1+?___awdiv),c
  8427  002228  3625               	bcf	status,0
  8428  00222A  90D8               	rlcf	(0+?___awdiv),c
  8429  00222C  3624               	rlcf	(1+?___awdiv),c
  8430  00222E  3625               	movlw	024h
  8431  002230  0E24               	addwf	(0+?___awdiv),c
  8432  002232  2624               	movlw	0
  8433  002234  0E00               	addwfc	(1+?___awdiv),c
  8434  002236  2225               	movlw	low((__npowers_))
  8435  002238  0E0F               	addwf	(0+?___awdiv),c,w
  8436  00223A  2424               	movwf	tblptrl
  8437  00223C  6EF6               	movlw	high((__npowers_))
  8438  00223E  0EFF               	addwfc	(1+?___awdiv),c,w
  8439  002240  2025               	movwf	tblptrh
  8440  002242  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8441  002244                     	clrf	tblptru
  8443                           	global __mediumconst
  8446  002244                     	tblrd*+
  8447  002244  0009               	
  8448                           	movff	tablat,(c:___flmul@a)
  8449  002246  CFF5 F030          	tblrd*+
  8450  00224A  0009               	
  8451                           	movff	tablat,(c:___flmul@a+1)
  8452  00224C  CFF5 F031          	tblrd*+
  8453  002250  0009               	
  8454                           	movff	tablat,(c:___flmul@a+2)
  8455  002252  CFF5 F032          	tblrd*-
  8456  002256  000A               	
  8457                           	movff	tablat,(c:___flmul@a+3)
  8458  002258  CFF5 F033          	movlw	high(064h)
  8459  00225C  0E00               	movwf	((c:___awdiv@divisor+1)),c
  8460  00225E  6E27               	movlw	low(064h)
  8461  002260  0E64               	movwf	((c:___awdiv@divisor)),c
  8462  002262  6E26               	movf	((c:scale@scl)),c,w
  8463  002264  504D               	movwf	((c:___awdiv@dividend)),c
  8464  002266  6E24               	clrf	((c:___awdiv@dividend+1)),c
  8465  002268  6A25               	btfsc	((c:___awdiv@dividend)),c,7
  8466  00226A  BE24               	decf	((c:___awdiv@dividend+1)),c
  8467  00226C  0625               	call	___awdiv	;wreg free
  8468  00226E  EC94  F01E         	bcf	status,0
  8469  002272  90D8               	rlcf	(0+?___awdiv),c
  8470  002274  3624               	rlcf	(1+?___awdiv),c
  8471  002276  3625               	bcf	status,0
  8472  002278  90D8               	rlcf	(0+?___awdiv),c
  8473  00227A  3624               	rlcf	(1+?___awdiv),c
  8474  00227C  3625               	movlw	048h
  8475  00227E  0E48               	addwf	(0+?___awdiv),c
  8476  002280  2624               	movlw	0
  8477  002282  0E00               	addwfc	(1+?___awdiv),c
  8478  002284  2225               	movlw	low((__npowers_))
  8479  002286  0E0F               	addwf	(0+?___awdiv),c,w
  8480  002288  2424               	movwf	tblptrl
  8481  00228A  6EF6               	movlw	high((__npowers_))
  8482  00228C  0EFF               	addwfc	(1+?___awdiv),c,w
  8483  00228E  2025               	movwf	tblptrh
  8484  002290  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8485  002292                     	clrf	tblptru
  8487                           	global __mediumconst
  8490  002292                     	tblrd*+
  8491  002292  0009               	
  8492                           	movff	tablat,(c:___flmul@b)
  8493  002294  CFF5 F02C          	tblrd*+
  8494  002298  0009               	
  8495                           	movff	tablat,(c:___flmul@b+1)
  8496  00229A  CFF5 F02D          	tblrd*+
  8497  00229E  0009               	
  8498                           	movff	tablat,(c:___flmul@b+2)
  8499  0022A0  CFF5 F02E          	tblrd*-
  8500  0022A4  000A               	
  8501                           	movff	tablat,(c:___flmul@b+3)
  8502  0022A6  CFF5 F02F          	call	___flmul	;wreg free
  8503  0022AA  EC38  F013         	movff	0+?___flmul,(c:_scale$1715)
  8504  0022AE  C02C  F049         	movff	1+?___flmul,(c:_scale$1715+1)
  8505  0022B2  C02D  F04A         	movff	2+?___flmul,(c:_scale$1715+2)
  8506  0022B6  C02E  F04B         	movff	3+?___flmul,(c:_scale$1715+3)
  8507  0022BA  C02F  F04C         	
  8508                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
                                 %10];
  8509                           	movff	(c:_scale$1715),(c:___flmul@b)
  8510  0022BE  C049  F02C         	movff	(c:_scale$1715+1),(c:___flmul@b+1)
  8511  0022C2  C04A  F02D         	movff	(c:_scale$1715+2),(c:___flmul@b+2)
  8512  0022C6  C04B  F02E         	movff	(c:_scale$1715+3),(c:___flmul@b+3)
  8513  0022CA  C04C  F02F         	movlw	high(0Ah)
  8514  0022CE  0E00               	movwf	((c:___awmod@divisor+1)),c
  8515  0022D0  6E21               	movlw	low(0Ah)
  8516  0022D2  0E0A               	movwf	((c:___awmod@divisor)),c
  8517  0022D4  6E20               	movf	((c:scale@scl)),c,w
  8518  0022D6  504D               	movwf	((c:___awmod@dividend)),c
  8519  0022D8  6E1E               	clrf	((c:___awmod@dividend+1)),c
  8520  0022DA  6A1F               	btfsc	((c:___awmod@dividend)),c,7
  8521  0022DC  BE1E               	decf	((c:___awmod@dividend+1)),c
  8522  0022DE  061F               	call	___awmod	;wreg free
  8523  0022E0  EC0A  F01F         	bcf	status,0
  8524  0022E4  90D8               	rlcf	(0+?___awmod),c
  8525  0022E6  361E               	rlcf	(1+?___awmod),c
  8526  0022E8  361F               	bcf	status,0
  8527  0022EA  90D8               	rlcf	(0+?___awmod),c
  8528  0022EC  361E               	rlcf	(1+?___awmod),c
  8529  0022EE  361F               	movlw	low((__npowers_))
  8530  0022F0  0E0F               	addwf	(0+?___awmod),c,w
  8531  0022F2  241E               	movwf	tblptrl
  8532  0022F4  6EF6               	movlw	high((__npowers_))
  8533  0022F6  0EFF               	addwfc	(1+?___awmod),c,w
  8534  0022F8  201F               	movwf	tblptrh
  8535  0022FA  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8536  0022FC                     	clrf	tblptru
  8538                           	global __mediumconst
  8541  0022FC                     	tblrd*+
  8542  0022FC  0009               	
  8543                           	movff	tablat,(c:___flmul@a)
  8544  0022FE  CFF5 F030          	tblrd*+
  8545  002302  0009               	
  8546                           	movff	tablat,(c:___flmul@a+1)
  8547  002304  CFF5 F031          	tblrd*+
  8548  002308  0009               	
  8549                           	movff	tablat,(c:___flmul@a+2)
  8550  00230A  CFF5 F032          	tblrd*-
  8551  00230E  000A               	
  8552                           	movff	tablat,(c:___flmul@a+3)
  8553  002310  CFF5 F033          	call	___flmul	;wreg free
  8554  002314  EC38  F013         	movff	0+?___flmul,(c:?_scale)
  8555  002318  C02C  F045         	movff	1+?___flmul,(c:?_scale+1)
  8556  00231C  C02D  F046         	movff	2+?___flmul,(c:?_scale+2)
  8557  002320  C02E  F047         	movff	3+?___flmul,(c:?_scale+3)
  8558  002324  C02F  F048         	
  8559                           	goto	l356
  8560  002328  EF37  F013         	
  8561                           l3581:
  8562  00232C                     	goto	l356
  8563  00232C  EF37  F013         	
  8564                           l3583:
  8565  002330                     	goto	l3591
  8566  002330  EFFE  F011         	line	432
  8567                           	
  8568                           l355:
  8569  002334                     	
  8570                           l3585:
  8571  002334                     ;doprnt.c: 432: else if(scl > 10)
  8572                           		movf	((c:scale@scl)),c,w
  8573  002334  504D               	xorlw	80h
  8574  002336  0A80               	addlw	-(80h^0Bh)
  8575  002338  0F75               	btfss	status,0
  8576  00233A  A0D8               	goto	u3481
  8577  00233C  EFA2  F011         	goto	u3480
  8578  002340  EFA4  F011         
  8579                           u3481:
  8580  002344                     	goto	l3591
  8581  002344  EFFE  F011         u3480:
  8582  002348                     	line	433
  8583                           	
  8584                           l3587:
  8585  002348                     ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  8586                           	movlw	high(0Ah)
  8587  002348  0E00               	movwf	((c:___awdiv@divisor+1)),c
  8588  00234A  6E27               	movlw	low(0Ah)
  8589  00234C  0E0A               	movwf	((c:___awdiv@divisor)),c
  8590  00234E  6E26               	movf	((c:scale@scl)),c,w
  8591  002350  504D               	movwf	((c:___awdiv@dividend)),c
  8592  002352  6E24               	clrf	((c:___awdiv@dividend+1)),c
  8593  002354  6A25               	btfsc	((c:___awdiv@dividend)),c,7
  8594  002356  BE24               	decf	((c:___awdiv@dividend+1)),c
  8595  002358  0625               	call	___awdiv	;wreg free
  8596  00235A  EC94  F01E         	bcf	status,0
  8597  00235E  90D8               	rlcf	(0+?___awdiv),c
  8598  002360  3624               	rlcf	(1+?___awdiv),c
  8599  002362  3625               	bcf	status,0
  8600  002364  90D8               	rlcf	(0+?___awdiv),c
  8601  002366  3624               	rlcf	(1+?___awdiv),c
  8602  002368  3625               	movlw	024h
  8603  00236A  0E24               	addwf	(0+?___awdiv),c
  8604  00236C  2624               	movlw	0
  8605  00236E  0E00               	addwfc	(1+?___awdiv),c
  8606  002370  2225               	movlw	low((__npowers_))
  8607  002372  0E0F               	addwf	(0+?___awdiv),c,w
  8608  002374  2424               	movwf	tblptrl
  8609  002376  6EF6               	movlw	high((__npowers_))
  8610  002378  0EFF               	addwfc	(1+?___awdiv),c,w
  8611  00237A  2025               	movwf	tblptrh
  8612  00237C  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8613  00237E                     	clrf	tblptru
  8615                           	global __mediumconst
  8618  00237E                     	tblrd*+
  8619  00237E  0009               	
  8620                           	movff	tablat,(c:___flmul@b)
  8621  002380  CFF5 F02C          	tblrd*+
  8622  002384  0009               	
  8623                           	movff	tablat,(c:___flmul@b+1)
  8624  002386  CFF5 F02D          	tblrd*+
  8625  00238A  0009               	
  8626                           	movff	tablat,(c:___flmul@b+2)
  8627  00238C  CFF5 F02E          	tblrd*-
  8628  002390  000A               	
  8629                           	movff	tablat,(c:___flmul@b+3)
  8630  002392  CFF5 F02F          	movlw	high(0Ah)
  8631  002396  0E00               	movwf	((c:___awmod@divisor+1)),c
  8632  002398  6E21               	movlw	low(0Ah)
  8633  00239A  0E0A               	movwf	((c:___awmod@divisor)),c
  8634  00239C  6E20               	movf	((c:scale@scl)),c,w
  8635  00239E  504D               	movwf	((c:___awmod@dividend)),c
  8636  0023A0  6E1E               	clrf	((c:___awmod@dividend+1)),c
  8637  0023A2  6A1F               	btfsc	((c:___awmod@dividend)),c,7
  8638  0023A4  BE1E               	decf	((c:___awmod@dividend+1)),c
  8639  0023A6  061F               	call	___awmod	;wreg free
  8640  0023A8  EC0A  F01F         	bcf	status,0
  8641  0023AC  90D8               	rlcf	(0+?___awmod),c
  8642  0023AE  361E               	rlcf	(1+?___awmod),c
  8643  0023B0  361F               	bcf	status,0
  8644  0023B2  90D8               	rlcf	(0+?___awmod),c
  8645  0023B4  361E               	rlcf	(1+?___awmod),c
  8646  0023B6  361F               	movlw	low((__npowers_))
  8647  0023B8  0E0F               	addwf	(0+?___awmod),c,w
  8648  0023BA  241E               	movwf	tblptrl
  8649  0023BC  6EF6               	movlw	high((__npowers_))
  8650  0023BE  0EFF               	addwfc	(1+?___awmod),c,w
  8651  0023C0  201F               	movwf	tblptrh
  8652  0023C2  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8653  0023C4                     	clrf	tblptru
  8655                           	global __mediumconst
  8658  0023C4                     	tblrd*+
  8659  0023C4  0009               	
  8660                           	movff	tablat,(c:___flmul@a)
  8661  0023C6  CFF5 F030          	tblrd*+
  8662  0023CA  0009               	
  8663                           	movff	tablat,(c:___flmul@a+1)
  8664  0023CC  CFF5 F031          	tblrd*+
  8665  0023D0  0009               	
  8666                           	movff	tablat,(c:___flmul@a+2)
  8667  0023D2  CFF5 F032          	tblrd*-
  8668  0023D6  000A               	
  8669                           	movff	tablat,(c:___flmul@a+3)
  8670  0023D8  CFF5 F033          	call	___flmul	;wreg free
  8671  0023DC  EC38  F013         	movff	0+?___flmul,(c:?_scale)
  8672  0023E0  C02C  F045         	movff	1+?___flmul,(c:?_scale+1)
  8673  0023E4  C02D  F046         	movff	2+?___flmul,(c:?_scale+2)
  8674  0023E8  C02E  F047         	movff	3+?___flmul,(c:?_scale+3)
  8675  0023EC  C02F  F048         	
  8676                           	goto	l356
  8677  0023F0  EF37  F013         	
  8678                           l3589:
  8679  0023F4                     	goto	l356
  8680  0023F4  EF37  F013         	
  8681                           l358:
  8682  0023F8                     	goto	l3591
  8683  0023F8  EFFE  F011         	line	434
  8684                           	
  8685                           l357:
  8686  0023FC                     	
  8687                           l3591:
  8688  0023FC                     ;doprnt.c: 434: return _npowers_[scl];
  8689                           	movf	((c:scale@scl)),c,w
  8690  0023FC  504D               	mullw	04h
  8691  0023FE  0D04               	movlw	low((__npowers_))
  8692  002400  0E0F               	addwf	(prodl),c,w
  8693  002402  24F3               	movwf	tblptrl
  8694  002404  6EF6               	movlw	high((__npowers_))
  8695  002406  0EFF               	addwfc	(prodh),c,w
  8696  002408  20F4               	movwf	tblptrh
  8697  00240A  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8698  00240C                     	clrf	tblptru
  8700                           	global __mediumconst
  8703  00240C                     	tblrd*+
  8704  00240C  0009               	
  8705                           	movff	tablat,(c:?_scale)
  8706  00240E  CFF5 F045          	tblrd*+
  8707  002412  0009               	
  8708                           	movff	tablat,(c:?_scale+1)
  8709  002414  CFF5 F046          	tblrd*+
  8710  002418  0009               	
  8711                           	movff	tablat,(c:?_scale+2)
  8712  00241A  CFF5 F047          	tblrd*-
  8713  00241E  000A               	
  8714                           	movff	tablat,(c:?_scale+3)
  8715  002420  CFF5 F048          	goto	l356
  8716  002424  EF37  F013         	
  8717                           l3593:
  8718  002428                     	goto	l356
  8719  002428  EF37  F013         	line	435
  8720                           	
  8721                           l354:
  8722  00242C                     	line	436
  8723                           	
  8724                           l3595:
  8725  00242C                     ;doprnt.c: 435: }
  8726                           ;doprnt.c: 436: if(scl>=110)
  8727                           		movf	((c:scale@scl)),c,w
  8728  00242C  504D               	xorlw	80h
  8729  00242E  0A80               	addlw	-(80h^06Eh)
  8730  002430  0F12               	btfss	status,0
  8731  002432  A0D8               	goto	u3491
  8732  002434  EF1E  F012         	goto	u3490
  8733  002438  EF20  F012         
  8734                           u3491:
  8735  00243C                     	goto	l3603
  8736  00243C  EFBD  F012         u3490:
  8737  002440                     	line	437
  8738                           	
  8739                           l3597:
  8740  002440                     ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
                                 ];
  8741                           	movlw	high(0Ah)
  8742  002440  0E00               	movwf	((c:___awdiv@divisor+1)),c
  8743  002442  6E27               	movlw	low(0Ah)
  8744  002444  0E0A               	movwf	((c:___awdiv@divisor)),c
  8745  002446  6E26               	movlw	high(064h)
  8746  002448  0E00               	movwf	((c:___awmod@divisor+1)),c
  8747  00244A  6E21               	movlw	low(064h)
  8748  00244C  0E64               	movwf	((c:___awmod@divisor)),c
  8749  00244E  6E20               	movf	((c:scale@scl)),c,w
  8750  002450  504D               	movwf	((c:___awmod@dividend)),c
  8751  002452  6E1E               	clrf	((c:___awmod@dividend+1)),c
  8752  002454  6A1F               	btfsc	((c:___awmod@dividend)),c,7
  8753  002456  BE1E               	decf	((c:___awmod@dividend+1)),c
  8754  002458  061F               	call	___awmod	;wreg free
  8755  00245A  EC0A  F01F         	movff	0+?___awmod,(c:___awdiv@dividend)
  8756  00245E  C01E  F024         	movff	1+?___awmod,(c:___awdiv@dividend+1)
  8757  002462  C01F  F025         	call	___awdiv	;wreg free
  8758  002466  EC94  F01E         	bcf	status,0
  8759  00246A  90D8               	rlcf	(0+?___awdiv),c
  8760  00246C  3624               	rlcf	(1+?___awdiv),c
  8761  00246E  3625               	bcf	status,0
  8762  002470  90D8               	rlcf	(0+?___awdiv),c
  8763  002472  3624               	rlcf	(1+?___awdiv),c
  8764  002474  3625               	movlw	024h
  8765  002476  0E24               	addwf	(0+?___awdiv),c
  8766  002478  2624               	movlw	0
  8767  00247A  0E00               	addwfc	(1+?___awdiv),c
  8768  00247C  2225               	movlw	low((__powers_))
  8769  00247E  0EDB               	addwf	(0+?___awdiv),c,w
  8770  002480  2424               	movwf	tblptrl
  8771  002482  6EF6               	movlw	high((__powers_))
  8772  002484  0EFE               	addwfc	(1+?___awdiv),c,w
  8773  002486  2025               	movwf	tblptrh
  8774  002488  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8775  00248A                     	clrf	tblptru
  8777                           	global __mediumconst
  8780  00248A                     	tblrd*+
  8781  00248A  0009               	
  8782                           	movff	tablat,(c:___flmul@a)
  8783  00248C  CFF5 F030          	tblrd*+
  8784  002490  0009               	
  8785                           	movff	tablat,(c:___flmul@a+1)
  8786  002492  CFF5 F031          	tblrd*+
  8787  002496  0009               	
  8788                           	movff	tablat,(c:___flmul@a+2)
  8789  002498  CFF5 F032          	tblrd*-
  8790  00249C  000A               	
  8791                           	movff	tablat,(c:___flmul@a+3)
  8792  00249E  CFF5 F033          	movlw	high(064h)
  8793  0024A2  0E00               	movwf	((c:___awdiv@divisor+1)),c
  8794  0024A4  6E27               	movlw	low(064h)
  8795  0024A6  0E64               	movwf	((c:___awdiv@divisor)),c
  8796  0024A8  6E26               	movf	((c:scale@scl)),c,w
  8797  0024AA  504D               	movwf	((c:___awdiv@dividend)),c
  8798  0024AC  6E24               	clrf	((c:___awdiv@dividend+1)),c
  8799  0024AE  6A25               	btfsc	((c:___awdiv@dividend)),c,7
  8800  0024B0  BE24               	decf	((c:___awdiv@dividend+1)),c
  8801  0024B2  0625               	call	___awdiv	;wreg free
  8802  0024B4  EC94  F01E         	bcf	status,0
  8803  0024B8  90D8               	rlcf	(0+?___awdiv),c
  8804  0024BA  3624               	rlcf	(1+?___awdiv),c
  8805  0024BC  3625               	bcf	status,0
  8806  0024BE  90D8               	rlcf	(0+?___awdiv),c
  8807  0024C0  3624               	rlcf	(1+?___awdiv),c
  8808  0024C2  3625               	movlw	048h
  8809  0024C4  0E48               	addwf	(0+?___awdiv),c
  8810  0024C6  2624               	movlw	0
  8811  0024C8  0E00               	addwfc	(1+?___awdiv),c
  8812  0024CA  2225               	movlw	low((__powers_))
  8813  0024CC  0EDB               	addwf	(0+?___awdiv),c,w
  8814  0024CE  2424               	movwf	tblptrl
  8815  0024D0  6EF6               	movlw	high((__powers_))
  8816  0024D2  0EFE               	addwfc	(1+?___awdiv),c,w
  8817  0024D4  2025               	movwf	tblptrh
  8818  0024D6  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8819  0024D8                     	clrf	tblptru
  8821                           	global __mediumconst
  8824  0024D8                     	tblrd*+
  8825  0024D8  0009               	
  8826                           	movff	tablat,(c:___flmul@b)
  8827  0024DA  CFF5 F02C          	tblrd*+
  8828  0024DE  0009               	
  8829                           	movff	tablat,(c:___flmul@b+1)
  8830  0024E0  CFF5 F02D          	tblrd*+
  8831  0024E4  0009               	
  8832                           	movff	tablat,(c:___flmul@b+2)
  8833  0024E6  CFF5 F02E          	tblrd*-
  8834  0024EA  000A               	
  8835                           	movff	tablat,(c:___flmul@b+3)
  8836  0024EC  CFF5 F02F          	call	___flmul	;wreg free
  8837  0024F0  EC38  F013         	movff	0+?___flmul,(c:_scale$1715)
  8838  0024F4  C02C  F049         	movff	1+?___flmul,(c:_scale$1715+1)
  8839  0024F8  C02D  F04A         	movff	2+?___flmul,(c:_scale$1715+2)
  8840  0024FC  C02E  F04B         	movff	3+?___flmul,(c:_scale$1715+3)
  8841  002500  C02F  F04C         	
  8842                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
                                 ];
  8843                           	movff	(c:_scale$1715),(c:___flmul@b)
  8844  002504  C049  F02C         	movff	(c:_scale$1715+1),(c:___flmul@b+1)
  8845  002508  C04A  F02D         	movff	(c:_scale$1715+2),(c:___flmul@b+2)
  8846  00250C  C04B  F02E         	movff	(c:_scale$1715+3),(c:___flmul@b+3)
  8847  002510  C04C  F02F         	movlw	high(0Ah)
  8848  002514  0E00               	movwf	((c:___awmod@divisor+1)),c
  8849  002516  6E21               	movlw	low(0Ah)
  8850  002518  0E0A               	movwf	((c:___awmod@divisor)),c
  8851  00251A  6E20               	movf	((c:scale@scl)),c,w
  8852  00251C  504D               	movwf	((c:___awmod@dividend)),c
  8853  00251E  6E1E               	clrf	((c:___awmod@dividend+1)),c
  8854  002520  6A1F               	btfsc	((c:___awmod@dividend)),c,7
  8855  002522  BE1E               	decf	((c:___awmod@dividend+1)),c
  8856  002524  061F               	call	___awmod	;wreg free
  8857  002526  EC0A  F01F         	bcf	status,0
  8858  00252A  90D8               	rlcf	(0+?___awmod),c
  8859  00252C  361E               	rlcf	(1+?___awmod),c
  8860  00252E  361F               	bcf	status,0
  8861  002530  90D8               	rlcf	(0+?___awmod),c
  8862  002532  361E               	rlcf	(1+?___awmod),c
  8863  002534  361F               	movlw	low((__powers_))
  8864  002536  0EDB               	addwf	(0+?___awmod),c,w
  8865  002538  241E               	movwf	tblptrl
  8866  00253A  6EF6               	movlw	high((__powers_))
  8867  00253C  0EFE               	addwfc	(1+?___awmod),c,w
  8868  00253E  201F               	movwf	tblptrh
  8869  002540  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8870  002542                     	clrf	tblptru
  8872                           	global __mediumconst
  8875  002542                     	tblrd*+
  8876  002542  0009               	
  8877                           	movff	tablat,(c:___flmul@a)
  8878  002544  CFF5 F030          	tblrd*+
  8879  002548  0009               	
  8880                           	movff	tablat,(c:___flmul@a+1)
  8881  00254A  CFF5 F031          	tblrd*+
  8882  00254E  0009               	
  8883                           	movff	tablat,(c:___flmul@a+2)
  8884  002550  CFF5 F032          	tblrd*-
  8885  002554  000A               	
  8886                           	movff	tablat,(c:___flmul@a+3)
  8887  002556  CFF5 F033          	call	___flmul	;wreg free
  8888  00255A  EC38  F013         	movff	0+?___flmul,(c:?_scale)
  8889  00255E  C02C  F045         	movff	1+?___flmul,(c:?_scale+1)
  8890  002562  C02D  F046         	movff	2+?___flmul,(c:?_scale+2)
  8891  002566  C02E  F047         	movff	3+?___flmul,(c:?_scale+3)
  8892  00256A  C02F  F048         	
  8893                           	goto	l356
  8894  00256E  EF37  F013         	
  8895                           l3599:
  8896  002572                     	goto	l356
  8897  002572  EF37  F013         	
  8898                           l3601:
  8899  002576                     	goto	l3609
  8900  002576  EF21  F013         	line	438
  8901                           	
  8902                           l359:
  8903  00257A                     	
  8904                           l3603:
  8905  00257A                     ;doprnt.c: 438: else if(scl > 10)
  8906                           		movf	((c:scale@scl)),c,w
  8907  00257A  504D               	xorlw	80h
  8908  00257C  0A80               	addlw	-(80h^0Bh)
  8909  00257E  0F75               	btfss	status,0
  8910  002580  A0D8               	goto	u3501
  8911  002582  EFC5  F012         	goto	u3500
  8912  002586  EFC7  F012         
  8913                           u3501:
  8914  00258A                     	goto	l3609
  8915  00258A  EF21  F013         u3500:
  8916  00258E                     	line	439
  8917                           	
  8918                           l3605:
  8919  00258E                     ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  8920                           	movlw	high(0Ah)
  8921  00258E  0E00               	movwf	((c:___awdiv@divisor+1)),c
  8922  002590  6E27               	movlw	low(0Ah)
  8923  002592  0E0A               	movwf	((c:___awdiv@divisor)),c
  8924  002594  6E26               	movf	((c:scale@scl)),c,w
  8925  002596  504D               	movwf	((c:___awdiv@dividend)),c
  8926  002598  6E24               	clrf	((c:___awdiv@dividend+1)),c
  8927  00259A  6A25               	btfsc	((c:___awdiv@dividend)),c,7
  8928  00259C  BE24               	decf	((c:___awdiv@dividend+1)),c
  8929  00259E  0625               	call	___awdiv	;wreg free
  8930  0025A0  EC94  F01E         	bcf	status,0
  8931  0025A4  90D8               	rlcf	(0+?___awdiv),c
  8932  0025A6  3624               	rlcf	(1+?___awdiv),c
  8933  0025A8  3625               	bcf	status,0
  8934  0025AA  90D8               	rlcf	(0+?___awdiv),c
  8935  0025AC  3624               	rlcf	(1+?___awdiv),c
  8936  0025AE  3625               	movlw	024h
  8937  0025B0  0E24               	addwf	(0+?___awdiv),c
  8938  0025B2  2624               	movlw	0
  8939  0025B4  0E00               	addwfc	(1+?___awdiv),c
  8940  0025B6  2225               	movlw	low((__powers_))
  8941  0025B8  0EDB               	addwf	(0+?___awdiv),c,w
  8942  0025BA  2424               	movwf	tblptrl
  8943  0025BC  6EF6               	movlw	high((__powers_))
  8944  0025BE  0EFE               	addwfc	(1+?___awdiv),c,w
  8945  0025C0  2025               	movwf	tblptrh
  8946  0025C2  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8947  0025C4                     	clrf	tblptru
  8949                           	global __mediumconst
  8952  0025C4                     	tblrd*+
  8953  0025C4  0009               	
  8954                           	movff	tablat,(c:___flmul@b)
  8955  0025C6  CFF5 F02C          	tblrd*+
  8956  0025CA  0009               	
  8957                           	movff	tablat,(c:___flmul@b+1)
  8958  0025CC  CFF5 F02D          	tblrd*+
  8959  0025D0  0009               	
  8960                           	movff	tablat,(c:___flmul@b+2)
  8961  0025D2  CFF5 F02E          	tblrd*-
  8962  0025D6  000A               	
  8963                           	movff	tablat,(c:___flmul@b+3)
  8964  0025D8  CFF5 F02F          	movlw	high(0Ah)
  8965  0025DC  0E00               	movwf	((c:___awmod@divisor+1)),c
  8966  0025DE  6E21               	movlw	low(0Ah)
  8967  0025E0  0E0A               	movwf	((c:___awmod@divisor)),c
  8968  0025E2  6E20               	movf	((c:scale@scl)),c,w
  8969  0025E4  504D               	movwf	((c:___awmod@dividend)),c
  8970  0025E6  6E1E               	clrf	((c:___awmod@dividend+1)),c
  8971  0025E8  6A1F               	btfsc	((c:___awmod@dividend)),c,7
  8972  0025EA  BE1E               	decf	((c:___awmod@dividend+1)),c
  8973  0025EC  061F               	call	___awmod	;wreg free
  8974  0025EE  EC0A  F01F         	bcf	status,0
  8975  0025F2  90D8               	rlcf	(0+?___awmod),c
  8976  0025F4  361E               	rlcf	(1+?___awmod),c
  8977  0025F6  361F               	bcf	status,0
  8978  0025F8  90D8               	rlcf	(0+?___awmod),c
  8979  0025FA  361E               	rlcf	(1+?___awmod),c
  8980  0025FC  361F               	movlw	low((__powers_))
  8981  0025FE  0EDB               	addwf	(0+?___awmod),c,w
  8982  002600  241E               	movwf	tblptrl
  8983  002602  6EF6               	movlw	high((__powers_))
  8984  002604  0EFE               	addwfc	(1+?___awmod),c,w
  8985  002606  201F               	movwf	tblptrh
  8986  002608  6EF7               	if	0	;There are less than 3 active tblptr bytes
  8987  00260A                     	clrf	tblptru
  8989                           	global __mediumconst
  8992  00260A                     	tblrd*+
  8993  00260A  0009               	
  8994                           	movff	tablat,(c:___flmul@a)
  8995  00260C  CFF5 F030          	tblrd*+
  8996  002610  0009               	
  8997                           	movff	tablat,(c:___flmul@a+1)
  8998  002612  CFF5 F031          	tblrd*+
  8999  002616  0009               	
  9000                           	movff	tablat,(c:___flmul@a+2)
  9001  002618  CFF5 F032          	tblrd*-
  9002  00261C  000A               	
  9003                           	movff	tablat,(c:___flmul@a+3)
  9004  00261E  CFF5 F033          	call	___flmul	;wreg free
  9005  002622  EC38  F013         	movff	0+?___flmul,(c:?_scale)
  9006  002626  C02C  F045         	movff	1+?___flmul,(c:?_scale+1)
  9007  00262A  C02D  F046         	movff	2+?___flmul,(c:?_scale+2)
  9008  00262E  C02E  F047         	movff	3+?___flmul,(c:?_scale+3)
  9009  002632  C02F  F048         	
  9010                           	goto	l356
  9011  002636  EF37  F013         	
  9012                           l3607:
  9013  00263A                     	goto	l356
  9014  00263A  EF37  F013         	
  9015                           l361:
  9016  00263E                     	goto	l3609
  9017  00263E  EF21  F013         	line	440
  9018                           	
  9019                           l360:
  9020  002642                     	
  9021                           l3609:
  9022  002642                     ;doprnt.c: 440: return _powers_[scl];
  9023                           	movf	((c:scale@scl)),c,w
  9024  002642  504D               	mullw	04h
  9025  002644  0D04               	movlw	low((__powers_))
  9026  002646  0EDB               	addwf	(prodl),c,w
  9027  002648  24F3               	movwf	tblptrl
  9028  00264A  6EF6               	movlw	high((__powers_))
  9029  00264C  0EFE               	addwfc	(prodh),c,w
  9030  00264E  20F4               	movwf	tblptrh
  9031  002650  6EF7               	if	0	;There are less than 3 active tblptr bytes
  9032  002652                     	clrf	tblptru
  9034                           	global __mediumconst
  9037  002652                     	tblrd*+
  9038  002652  0009               	
  9039                           	movff	tablat,(c:?_scale)
  9040  002654  CFF5 F045          	tblrd*+
  9041  002658  0009               	
  9042                           	movff	tablat,(c:?_scale+1)
  9043  00265A  CFF5 F046          	tblrd*+
  9044  00265E  0009               	
  9045                           	movff	tablat,(c:?_scale+2)
  9046  002660  CFF5 F047          	tblrd*-
  9047  002664  000A               	
  9048                           	movff	tablat,(c:?_scale+3)
  9049  002666  CFF5 F048          	goto	l356
  9050  00266A  EF37  F013         	
  9051                           l3611:
  9052  00266E                     	line	441
  9053                           	
  9054                           l356:
  9055  00266E                     	return	;funcret
  9056  00266E  0012               	opt stack 0
  9057                           GLOBAL	__end_of_scale
  9058                           	__end_of_scale:
  9059  002670                     	signat	_scale,4220
  9060                           	global	_isdigit
  9061                           
  9062 ;; *************** function _isdigit *****************
  9063 ;; Defined at:
  9064 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  c               1    wreg     unsigned char 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;  c               1   31[COMRAM] unsigned char 
  9069 ;; Return value:  Size  Location     Type
  9070 ;;		None               void
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  9078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9079 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9080 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9081 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9082 ;;Total ram usage:        3 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:    3
  9085 ;; This function calls:
  9086 ;;		Nothing
  9087 ;; This function is called by:
  9088 ;;		_sprintf
  9089 ;; This function uses a non-reentrant model
  9090 ;;
  9091                           psect	text3,class=CODE,space=0,reloc=2,group=1
  9092                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9093                           	line	8
  9094                           global __ptext3
  9095                           __ptext3:
  9096  0046BC                     psect	text3
  9097                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  9098                           	line	8
  9099                           	global	__size_of_isdigit
  9100                           	__size_of_isdigit	equ	__end_of_isdigit-_isdigit
  9101  0000                     	
  9102                           _isdigit:
  9103  0046BC                     ;incstack = 0
  9104                           	opt	stack 26
  9105                           ;isdigit@c stored from wreg
  9106                           	movwf	((c:isdigit@c)),c
  9107  0046BC  6E20               	line	14
  9108                           	
  9109                           l3613:
  9110  0046BE                     	movlw	low(0)
  9111  0046BE  0E00               	movwf	((c:_isdigit$1331)),c
  9112  0046C0  6E1F               	
  9113                           l3615:
  9114  0046C2                     		movlw	03Ah-0
  9115  0046C2  0E3A               	cpfslt	((c:isdigit@c)),c
  9116  0046C4  6020               	goto	u3511
  9117  0046C6  EF67  F023         	goto	u3510
  9118  0046CA  EF69  F023         
  9119                           u3511:
  9120  0046CE                     	goto	l3621
  9121  0046CE  EF75  F023         u3510:
  9122  0046D2                     	
  9123                           l3617:
  9124  0046D2                     		movlw	030h-1
  9125  0046D2  0E2F               	cpfsgt	((c:isdigit@c)),c
  9126  0046D4  6420               	goto	u3521
  9127  0046D6  EF6F  F023         	goto	u3520
  9128  0046DA  EF71  F023         
  9129                           u3521:
  9130  0046DE                     	goto	l3621
  9131  0046DE  EF75  F023         u3520:
  9132  0046E2                     	
  9133                           l3619:
  9134  0046E2                     	movlw	low(01h)
  9135  0046E2  0E01               	movwf	((c:_isdigit$1331)),c
  9136  0046E4  6E1F               	goto	l3621
  9137  0046E6  EF75  F023         	
  9138                           l830:
  9139  0046EA                     	
  9140                           l3621:
  9141  0046EA                     	movff	(c:_isdigit$1331),??_isdigit+0+0
  9142  0046EA  C01F  F01E         	rrcf	(??_isdigit+0+0),c,w
  9143  0046EE  301E               	goto	l831
  9144  0046F0  EF7A  F023         	
  9145                           l3623:
  9146  0046F4                     	line	15
  9147                           	
  9148                           l831:
  9149  0046F4                     	return	;funcret
  9150  0046F4  0012               	opt stack 0
  9151                           GLOBAL	__end_of_isdigit
  9152                           	__end_of_isdigit:
  9153  0046F6                     	signat	_isdigit,4216
  9154                           	global	_fround
  9155                           
  9156 ;; *************** function _fround *****************
  9157 ;; Defined at:
  9158 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  9159 ;; Parameters:    Size  Location     Type
  9160 ;;  prec            1    wreg     unsigned char 
  9161 ;; Auto vars:     Size  Location     Type
  9162 ;;  prec            1   80[COMRAM] unsigned char 
  9163 ;; Return value:  Size  Location     Type
  9164 ;;                  4   68[COMRAM] unsigned char 
  9165 ;; Registers used:
  9166 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9167 ;; Tracked objects:
  9168 ;;		On entry : 0/0
  9169 ;;		On exit  : 0/0
  9170 ;;		Unchanged: 0/0
  9171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  9172 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9173 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9175 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9176 ;;Total ram usage:       13 bytes
  9177 ;; Hardware stack levels used:    1
  9178 ;; Hardware stack levels required when called:    4
  9179 ;; This function calls:
  9180 ;;		___awdiv
  9181 ;;		___awmod
  9182 ;;		___flmul
  9183 ;; This function is called by:
  9184 ;;		_sprintf
  9185 ;; This function uses a non-reentrant model
  9186 ;;
  9187                           psect	text4,class=CODE,space=0,reloc=2,group=0
  9188                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  9189                           	line	409
  9190                           global __ptext4
  9191                           __ptext4:
  9192  003274                     psect	text4
  9193                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  9194                           	line	409
  9195                           	global	__size_of_fround
  9196                           	__size_of_fround	equ	__end_of_fround-_fround
  9197  0000                     	
  9198                           _fround:
  9199  003274                     ;incstack = 0
  9200                           	opt	stack 25
  9201                           ;fround@prec stored from wreg
  9202                           	movwf	((c:fround@prec)),c
  9203  003274  6E51               	line	413
  9204                           	
  9205                           l3553:
  9206  003276                     ;doprnt.c: 413: if(prec>=110)
  9207                           		movlw	06Eh-1
  9208  003276  0E6D               	cpfsgt	((c:fround@prec)),c
  9209  003278  6451               	goto	u3441
  9210  00327A  EF41  F019         	goto	u3440
  9211  00327E  EF43  F019         
  9212                           u3441:
  9213  003282                     	goto	l3563
  9214  003282  EFF4  F019         u3440:
  9215  003286                     	line	414
  9216                           	
  9217                           l3555:
  9218  003286                     ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
                                 ers_[prec%10];
  9219                           	movlw	high(0Ah)
  9220  003286  0E00               	movwf	((c:___awdiv@divisor+1)),c
  9221  003288  6E27               	movlw	low(0Ah)
  9222  00328A  0E0A               	movwf	((c:___awdiv@divisor)),c
  9223  00328C  6E26               	movlw	high(064h)
  9224  00328E  0E00               	movwf	((c:___awmod@divisor+1)),c
  9225  003290  6E21               	movlw	low(064h)
  9226  003292  0E64               	movwf	((c:___awmod@divisor)),c
  9227  003294  6E20               	movff	(c:fround@prec),(c:___awmod@dividend)
  9228  003296  C051  F01E         	clrf	((c:___awmod@dividend+1)),c
  9229  00329A  6A1F               	call	___awmod	;wreg free
  9230  00329C  EC0A  F01F         	movff	0+?___awmod,(c:___awdiv@dividend)
  9231  0032A0  C01E  F024         	movff	1+?___awmod,(c:___awdiv@dividend+1)
  9232  0032A4  C01F  F025         	call	___awdiv	;wreg free
  9233  0032A8  EC94  F01E         	bcf	status,0
  9234  0032AC  90D8               	rlcf	(0+?___awdiv),c
  9235  0032AE  3624               	rlcf	(1+?___awdiv),c
  9236  0032B0  3625               	bcf	status,0
  9237  0032B2  90D8               	rlcf	(0+?___awdiv),c
  9238  0032B4  3624               	rlcf	(1+?___awdiv),c
  9239  0032B6  3625               	movlw	024h
  9240  0032B8  0E24               	addwf	(0+?___awdiv),c
  9241  0032BA  2624               	movlw	0
  9242  0032BC  0E00               	addwfc	(1+?___awdiv),c
  9243  0032BE  2225               	movlw	low((__npowers_))
  9244  0032C0  0E0F               	addwf	(0+?___awdiv),c,w
  9245  0032C2  2424               	movwf	tblptrl
  9246  0032C4  6EF6               	movlw	high((__npowers_))
  9247  0032C6  0EFF               	addwfc	(1+?___awdiv),c,w
  9248  0032C8  2025               	movwf	tblptrh
  9249  0032CA  6EF7               	if	0	;There are less than 3 active tblptr bytes
  9250  0032CC                     	clrf	tblptru
  9252                           	global __mediumconst
  9255  0032CC                     	tblrd*+
  9256  0032CC  0009               	
  9257                           	movff	tablat,(c:___flmul@a)
  9258  0032CE  CFF5 F030          	tblrd*+
  9259  0032D2  0009               	
  9260                           	movff	tablat,(c:___flmul@a+1)
  9261  0032D4  CFF5 F031          	tblrd*+
  9262  0032D8  0009               	
  9263                           	movff	tablat,(c:___flmul@a+2)
  9264  0032DA  CFF5 F032          	tblrd*-
  9265  0032DE  000A               	
  9266                           	movff	tablat,(c:___flmul@a+3)
  9267  0032E0  CFF5 F033          	movlw	high(064h)
  9268  0032E4  0E00               	movwf	((c:___awdiv@divisor+1)),c
  9269  0032E6  6E27               	movlw	low(064h)
  9270  0032E8  0E64               	movwf	((c:___awdiv@divisor)),c
  9271  0032EA  6E26               	movff	(c:fround@prec),(c:___awdiv@dividend)
  9272  0032EC  C051  F024         	clrf	((c:___awdiv@dividend+1)),c
  9273  0032F0  6A25               	call	___awdiv	;wreg free
  9274  0032F2  EC94  F01E         	bcf	status,0
  9275  0032F6  90D8               	rlcf	(0+?___awdiv),c
  9276  0032F8  3624               	rlcf	(1+?___awdiv),c
  9277  0032FA  3625               	bcf	status,0
  9278  0032FC  90D8               	rlcf	(0+?___awdiv),c
  9279  0032FE  3624               	rlcf	(1+?___awdiv),c
  9280  003300  3625               	movlw	048h
  9281  003302  0E48               	addwf	(0+?___awdiv),c
  9282  003304  2624               	movlw	0
  9283  003306  0E00               	addwfc	(1+?___awdiv),c
  9284  003308  2225               	movlw	low((__npowers_))
  9285  00330A  0E0F               	addwf	(0+?___awdiv),c,w
  9286  00330C  2424               	movwf	tblptrl
  9287  00330E  6EF6               	movlw	high((__npowers_))
  9288  003310  0EFF               	addwfc	(1+?___awdiv),c,w
  9289  003312  2025               	movwf	tblptrh
  9290  003314  6EF7               	if	0	;There are less than 3 active tblptr bytes
  9291  003316                     	clrf	tblptru
  9293                           	global __mediumconst
  9296  003316                     	tblrd*+
  9297  003316  0009               	
  9298                           	movff	tablat,(c:___flmul@b)
  9299  003318  CFF5 F02C          	tblrd*+
  9300  00331C  0009               	
  9301                           	movff	tablat,(c:___flmul@b+1)
  9302  00331E  CFF5 F02D          	tblrd*+
  9303  003322  0009               	
  9304                           	movff	tablat,(c:___flmul@b+2)
  9305  003324  CFF5 F02E          	tblrd*-
  9306  003328  000A               	
  9307                           	movff	tablat,(c:___flmul@b+3)
  9308  00332A  CFF5 F02F          	call	___flmul	;wreg free
  9309  00332E  EC38  F013         	movff	0+?___flmul,(c:_fround$1713)
  9310  003332  C02C  F04D         	movff	1+?___flmul,(c:_fround$1713+1)
  9311  003336  C02D  F04E         	movff	2+?___flmul,(c:_fround$1713+2)
  9312  00333A  C02E  F04F         	movff	3+?___flmul,(c:_fround$1713+3)
  9313  00333E  C02F  F050         	
  9314                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
                                 ers_[prec%10];
  9315                           	movlw	high(0Ah)
  9316  003342  0E00               	movwf	((c:___awmod@divisor+1)),c
  9317  003344  6E21               	movlw	low(0Ah)
  9318  003346  0E0A               	movwf	((c:___awmod@divisor)),c
  9319  003348  6E20               	movff	(c:fround@prec),(c:___awmod@dividend)
  9320  00334A  C051  F01E         	clrf	((c:___awmod@dividend+1)),c
  9321  00334E  6A1F               	call	___awmod	;wreg free
  9322  003350  EC0A  F01F         	bcf	status,0
  9323  003354  90D8               	rlcf	(0+?___awmod),c
  9324  003356  361E               	rlcf	(1+?___awmod),c
  9325  003358  361F               	bcf	status,0
  9326  00335A  90D8               	rlcf	(0+?___awmod),c
  9327  00335C  361E               	rlcf	(1+?___awmod),c
  9328  00335E  361F               	movlw	low((__npowers_))
  9329  003360  0E0F               	addwf	(0+?___awmod),c,w
  9330  003362  241E               	movwf	tblptrl
  9331  003364  6EF6               	movlw	high((__npowers_))
  9332  003366  0EFF               	addwfc	(1+?___awmod),c,w
  9333  003368  201F               	movwf	tblptrh
  9334  00336A  6EF7               	if	0	;There are less than 3 active tblptr bytes
  9335  00336C                     	clrf	tblptru
  9337                           	global __mediumconst
  9340  00336C                     	tblrd*+
  9341  00336C  0009               	
  9342                           	movff	tablat,(c:___flmul@a)
  9343  00336E  CFF5 F030          	tblrd*+
  9344  003372  0009               	
  9345                           	movff	tablat,(c:___flmul@a+1)
  9346  003374  CFF5 F031          	tblrd*+
  9347  003378  0009               	
  9348                           	movff	tablat,(c:___flmul@a+2)
  9349  00337A  CFF5 F032          	tblrd*-
  9350  00337E  000A               	
  9351                           	movff	tablat,(c:___flmul@a+3)
  9352  003380  CFF5 F033          	movff	(c:_fround$1713),(c:___flmul@b)
  9353  003384  C04D  F02C         	movff	(c:_fround$1713+1),(c:___flmul@b+1)
  9354  003388  C04E  F02D         	movff	(c:_fround$1713+2),(c:___flmul@b+2)
  9355  00338C  C04F  F02E         	movff	(c:_fround$1713+3),(c:___flmul@b+3)
  9356  003390  C050  F02F         	call	___flmul	;wreg free
  9357  003394  EC38  F013         	movff	0+?___flmul,(c:_fround$1714)
  9358  003398  C02C  F049         	movff	1+?___flmul,(c:_fround$1714+1)
  9359  00339C  C02D  F04A         	movff	2+?___flmul,(c:_fround$1714+2)
  9360  0033A0  C02E  F04B         	movff	3+?___flmul,(c:_fround$1714+3)
  9361  0033A4  C02F  F04C         	
  9362                           	
  9363                           l3557:
  9364  0033A8                     ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
                                 ers_[prec%10];
  9365                           	movff	(c:_fround$1714),(c:___flmul@b)
  9366  0033A8  C049  F02C         	movff	(c:_fround$1714+1),(c:___flmul@b+1)
  9367  0033AC  C04A  F02D         	movff	(c:_fround$1714+2),(c:___flmul@b+2)
  9368  0033B0  C04B  F02E         	movff	(c:_fround$1714+3),(c:___flmul@b+3)
  9369  0033B4  C04C  F02F         	movlw	low(normalize32(0.50000000000000000))
  9370  0033B8  0E00               	movwf	((c:___flmul@a)),c
  9371  0033BA  6E30               	movlw	high(normalize32(0.50000000000000000))
  9372  0033BC  0E00               	movwf	((c:___flmul@a+1)),c
  9373  0033BE  6E31               	movlw	low highword(normalize32(0.50000000000000000))
  9374  0033C0  0E00               	movwf	((c:___flmul@a+2)),c
  9375  0033C2  6E32               	movlw	high highword(normalize32(0.50000000000000000))
  9376  0033C4  0E3F               	movwf	((c:___flmul@a+3)),c
  9377  0033C6  6E33               	call	___flmul	;wreg free
  9378  0033C8  EC38  F013         	movff	0+?___flmul,(c:?_fround)
  9379  0033CC  C02C  F045         	movff	1+?___flmul,(c:?_fround+1)
  9380  0033D0  C02D  F046         	movff	2+?___flmul,(c:?_fround+2)
  9381  0033D4  C02E  F047         	movff	3+?___flmul,(c:?_fround+3)
  9382  0033D8  C02F  F048         	
  9383                           	goto	l349
  9384  0033DC  EF94  F01A         	
  9385                           l3559:
  9386  0033E0                     	goto	l349
  9387  0033E0  EF94  F01A         	
  9388                           l3561:
  9389  0033E4                     	goto	l3571
  9390  0033E4  EF6C  F01A         	line	415
  9391                           	
  9392                           l348:
  9393  0033E8                     	
  9394                           l3563:
  9395  0033E8                     ;doprnt.c: 415: else if(prec > 10)
  9396                           		movlw	0Bh-1
  9397  0033E8  0E0A               	cpfsgt	((c:fround@prec)),c
  9398  0033EA  6451               	goto	u3451
  9399  0033EC  EFFA  F019         	goto	u3450
  9400  0033F0  EFFC  F019         
  9401                           u3451:
  9402  0033F4                     	goto	l3571
  9403  0033F4  EF6C  F01A         u3450:
  9404  0033F8                     	line	416
  9405                           	
  9406                           l3565:
  9407  0033F8                     ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9408                           	movlw	high(0Ah)
  9409  0033F8  0E00               	movwf	((c:___awmod@divisor+1)),c
  9410  0033FA  6E21               	movlw	low(0Ah)
  9411  0033FC  0E0A               	movwf	((c:___awmod@divisor)),c
  9412  0033FE  6E20               	movff	(c:fround@prec),(c:___awmod@dividend)
  9413  003400  C051  F01E         	clrf	((c:___awmod@dividend+1)),c
  9414  003404  6A1F               	call	___awmod	;wreg free
  9415  003406  EC0A  F01F         	bcf	status,0
  9416  00340A  90D8               	rlcf	(0+?___awmod),c
  9417  00340C  361E               	rlcf	(1+?___awmod),c
  9418  00340E  361F               	bcf	status,0
  9419  003410  90D8               	rlcf	(0+?___awmod),c
  9420  003412  361E               	rlcf	(1+?___awmod),c
  9421  003414  361F               	movlw	low((__npowers_))
  9422  003416  0E0F               	addwf	(0+?___awmod),c,w
  9423  003418  241E               	movwf	tblptrl
  9424  00341A  6EF6               	movlw	high((__npowers_))
  9425  00341C  0EFF               	addwfc	(1+?___awmod),c,w
  9426  00341E  201F               	movwf	tblptrh
  9427  003420  6EF7               	if	0	;There are less than 3 active tblptr bytes
  9428  003422                     	clrf	tblptru
  9430                           	global __mediumconst
  9433  003422                     	tblrd*+
  9434  003422  0009               	
  9435                           	movff	tablat,(c:___flmul@a)
  9436  003424  CFF5 F030          	tblrd*+
  9437  003428  0009               	
  9438                           	movff	tablat,(c:___flmul@a+1)
  9439  00342A  CFF5 F031          	tblrd*+
  9440  00342E  0009               	
  9441                           	movff	tablat,(c:___flmul@a+2)
  9442  003430  CFF5 F032          	tblrd*-
  9443  003434  000A               	
  9444                           	movff	tablat,(c:___flmul@a+3)
  9445  003436  CFF5 F033          	movlw	high(0Ah)
  9446  00343A  0E00               	movwf	((c:___awdiv@divisor+1)),c
  9447  00343C  6E27               	movlw	low(0Ah)
  9448  00343E  0E0A               	movwf	((c:___awdiv@divisor)),c
  9449  003440  6E26               	movff	(c:fround@prec),(c:___awdiv@dividend)
  9450  003442  C051  F024         	clrf	((c:___awdiv@dividend+1)),c
  9451  003446  6A25               	call	___awdiv	;wreg free
  9452  003448  EC94  F01E         	bcf	status,0
  9453  00344C  90D8               	rlcf	(0+?___awdiv),c
  9454  00344E  3624               	rlcf	(1+?___awdiv),c
  9455  003450  3625               	bcf	status,0
  9456  003452  90D8               	rlcf	(0+?___awdiv),c
  9457  003454  3624               	rlcf	(1+?___awdiv),c
  9458  003456  3625               	movlw	024h
  9459  003458  0E24               	addwf	(0+?___awdiv),c
  9460  00345A  2624               	movlw	0
  9461  00345C  0E00               	addwfc	(1+?___awdiv),c
  9462  00345E  2225               	movlw	low((__npowers_))
  9463  003460  0E0F               	addwf	(0+?___awdiv),c,w
  9464  003462  2424               	movwf	tblptrl
  9465  003464  6EF6               	movlw	high((__npowers_))
  9466  003466  0EFF               	addwfc	(1+?___awdiv),c,w
  9467  003468  2025               	movwf	tblptrh
  9468  00346A  6EF7               	if	0	;There are less than 3 active tblptr bytes
  9469  00346C                     	clrf	tblptru
  9471                           	global __mediumconst
  9474  00346C                     	tblrd*+
  9475  00346C  0009               	
  9476                           	movff	tablat,(c:___flmul@b)
  9477  00346E  CFF5 F02C          	tblrd*+
  9478  003472  0009               	
  9479                           	movff	tablat,(c:___flmul@b+1)
  9480  003474  CFF5 F02D          	tblrd*+
  9481  003478  0009               	
  9482                           	movff	tablat,(c:___flmul@b+2)
  9483  00347A  CFF5 F02E          	tblrd*-
  9484  00347E  000A               	
  9485                           	movff	tablat,(c:___flmul@b+3)
  9486  003480  CFF5 F02F          	call	___flmul	;wreg free
  9487  003484  EC38  F013         	movff	0+?___flmul,(c:_fround$1713)
  9488  003488  C02C  F04D         	movff	1+?___flmul,(c:_fround$1713+1)
  9489  00348C  C02D  F04E         	movff	2+?___flmul,(c:_fround$1713+2)
  9490  003490  C02E  F04F         	movff	3+?___flmul,(c:_fround$1713+3)
  9491  003494  C02F  F050         	
  9492                           	
  9493                           l3567:
  9494  003498                     ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  9495                           	movff	(c:_fround$1713),(c:___flmul@b)
  9496  003498  C04D  F02C         	movff	(c:_fround$1713+1),(c:___flmul@b+1)
  9497  00349C  C04E  F02D         	movff	(c:_fround$1713+2),(c:___flmul@b+2)
  9498  0034A0  C04F  F02E         	movff	(c:_fround$1713+3),(c:___flmul@b+3)
  9499  0034A4  C050  F02F         	movlw	low(normalize32(0.50000000000000000))
  9500  0034A8  0E00               	movwf	((c:___flmul@a)),c
  9501  0034AA  6E30               	movlw	high(normalize32(0.50000000000000000))
  9502  0034AC  0E00               	movwf	((c:___flmul@a+1)),c
  9503  0034AE  6E31               	movlw	low highword(normalize32(0.50000000000000000))
  9504  0034B0  0E00               	movwf	((c:___flmul@a+2)),c
  9505  0034B2  6E32               	movlw	high highword(normalize32(0.50000000000000000))
  9506  0034B4  0E3F               	movwf	((c:___flmul@a+3)),c
  9507  0034B6  6E33               	call	___flmul	;wreg free
  9508  0034B8  EC38  F013         	movff	0+?___flmul,(c:?_fround)
  9509  0034BC  C02C  F045         	movff	1+?___flmul,(c:?_fround+1)
  9510  0034C0  C02D  F046         	movff	2+?___flmul,(c:?_fround+2)
  9511  0034C4  C02E  F047         	movff	3+?___flmul,(c:?_fround+3)
  9512  0034C8  C02F  F048         	
  9513                           	goto	l349
  9514  0034CC  EF94  F01A         	
  9515                           l3569:
  9516  0034D0                     	goto	l349
  9517  0034D0  EF94  F01A         	
  9518                           l351:
  9519  0034D4                     	goto	l3571
  9520  0034D4  EF6C  F01A         	line	417
  9521                           	
  9522                           l350:
  9523  0034D8                     	
  9524                           l3571:
  9525  0034D8                     ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  9526                           	movf	((c:fround@prec)),c,w
  9527  0034D8  5051               	mullw	04h
  9528  0034DA  0D04               	movlw	low((__npowers_))
  9529  0034DC  0E0F               	addwf	(prodl),c,w
  9530  0034DE  24F3               	movwf	tblptrl
  9531  0034E0  6EF6               	movlw	high((__npowers_))
  9532  0034E2  0EFF               	addwfc	(prodh),c,w
  9533  0034E4  20F4               	movwf	tblptrh
  9534  0034E6  6EF7               	if	0	;There are less than 3 active tblptr bytes
  9535  0034E8                     	clrf	tblptru
  9537                           	global __mediumconst
  9540  0034E8                     	tblrd*+
  9541  0034E8  0009               	
  9542                           	movff	tablat,(c:___flmul@b)
  9543  0034EA  CFF5 F02C          	tblrd*+
  9544  0034EE  0009               	
  9545                           	movff	tablat,(c:___flmul@b+1)
  9546  0034F0  CFF5 F02D          	tblrd*+
  9547  0034F4  0009               	
  9548                           	movff	tablat,(c:___flmul@b+2)
  9549  0034F6  CFF5 F02E          	tblrd*-
  9550  0034FA  000A               	
  9551                           	movff	tablat,(c:___flmul@b+3)
  9552  0034FC  CFF5 F02F          	movlw	low(normalize32(0.50000000000000000))
  9553  003500  0E00               	movwf	((c:___flmul@a)),c
  9554  003502  6E30               	movlw	high(normalize32(0.50000000000000000))
  9555  003504  0E00               	movwf	((c:___flmul@a+1)),c
  9556  003506  6E31               	movlw	low highword(normalize32(0.50000000000000000))
  9557  003508  0E00               	movwf	((c:___flmul@a+2)),c
  9558  00350A  6E32               	movlw	high highword(normalize32(0.50000000000000000))
  9559  00350C  0E3F               	movwf	((c:___flmul@a+3)),c
  9560  00350E  6E33               	call	___flmul	;wreg free
  9561  003510  EC38  F013         	movff	0+?___flmul,(c:?_fround)
  9562  003514  C02C  F045         	movff	1+?___flmul,(c:?_fround+1)
  9563  003518  C02D  F046         	movff	2+?___flmul,(c:?_fround+2)
  9564  00351C  C02E  F047         	movff	3+?___flmul,(c:?_fround+3)
  9565  003520  C02F  F048         	
  9566                           	goto	l349
  9567  003524  EF94  F01A         	
  9568                           l3573:
  9569  003528                     	line	418
  9570                           	
  9571                           l349:
  9572  003528                     	return	;funcret
  9573  003528  0012               	opt stack 0
  9574                           GLOBAL	__end_of_fround
  9575                           	__end_of_fround:
  9576  00352A                     	signat	_fround,4220
  9577                           	global	___awdiv
  9578                           
  9579 ;; *************** function ___awdiv *****************
  9580 ;; Defined at:
  9581 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9582 ;; Parameters:    Size  Location     Type
  9583 ;;  dividend        2   35[COMRAM] int 
  9584 ;;  divisor         2   37[COMRAM] int 
  9585 ;; Auto vars:     Size  Location     Type
  9586 ;;  quotient        2   41[COMRAM] int 
  9587 ;;  sign            1   40[COMRAM] unsigned char 
  9588 ;;  counter         1   39[COMRAM] unsigned char 
  9589 ;; Return value:  Size  Location     Type
  9590 ;;                  2   35[COMRAM] int 
  9591 ;; Registers used:
  9592 ;;		wreg, status,2, status,0
  9593 ;; Tracked objects:
  9594 ;;		On entry : 0/0
  9595 ;;		On exit  : 0/0
  9596 ;;		Unchanged: 0/0
  9597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  9598 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9599 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9601 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9602 ;;Total ram usage:        8 bytes
  9603 ;; Hardware stack levels used:    1
  9604 ;; Hardware stack levels required when called:    3
  9605 ;; This function calls:
  9606 ;;		Nothing
  9607 ;; This function is called by:
  9608 ;;		_main
  9609 ;;		_fround
  9610 ;;		_scale
  9611 ;;		_sprintf
  9612 ;; This function uses a non-reentrant model
  9613 ;;
  9614                           psect	text5,class=CODE,space=0,reloc=2,group=1
  9615                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9616                           	line	8
  9617                           global __ptext5
  9618                           __ptext5:
  9619  003D28                     psect	text5
  9620                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awdiv.c"
  9621                           	line	8
  9622                           	global	__size_of___awdiv
  9623                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  9624  0000                     	
  9625                           ___awdiv:
  9626  003D28                     ;incstack = 0
  9627                           	opt	stack 25
  9628                           	line	14
  9629                           	
  9630                           l3447:
  9631  003D28                     	movlw	low(0)
  9632  003D28  0E00               	movwf	((c:___awdiv@sign)),c
  9633  003D2A  6E29               	line	15
  9634                           	
  9635                           l3449:
  9636  003D2C                     	btfsc	((c:___awdiv@divisor+1)),c,7
  9637  003D2C  BE27               	goto	u3310
  9638  003D2E  EF9D  F01E         	goto	u3311
  9639  003D32  EF9B  F01E         
  9640                           u3311:
  9641  003D36                     	goto	l3455
  9642  003D36  EFA5  F01E         u3310:
  9643  003D3A                     	line	16
  9644                           	
  9645                           l3451:
  9646  003D3A                     	negf	((c:___awdiv@divisor)),c
  9647  003D3A  6C26               	comf	((c:___awdiv@divisor+1)),c
  9648  003D3C  1E27               	btfsc	status,0
  9649  003D3E  B0D8               	incf	((c:___awdiv@divisor+1)),c
  9650  003D40  2A27               	line	17
  9651                           	
  9652                           l3453:
  9653  003D42                     	movlw	low(01h)
  9654  003D42  0E01               	movwf	((c:___awdiv@sign)),c
  9655  003D44  6E29               	goto	l3455
  9656  003D46  EFA5  F01E         	line	18
  9657                           	
  9658                           l634:
  9659  003D4A                     	line	19
  9660                           	
  9661                           l3455:
  9662  003D4A                     	btfsc	((c:___awdiv@dividend+1)),c,7
  9663  003D4A  BE25               	goto	u3320
  9664  003D4C  EFAC  F01E         	goto	u3321
  9665  003D50  EFAA  F01E         
  9666                           u3321:
  9667  003D54                     	goto	l3461
  9668  003D54  EFB4  F01E         u3320:
  9669  003D58                     	line	20
  9670                           	
  9671                           l3457:
  9672  003D58                     	negf	((c:___awdiv@dividend)),c
  9673  003D58  6C24               	comf	((c:___awdiv@dividend+1)),c
  9674  003D5A  1E25               	btfsc	status,0
  9675  003D5C  B0D8               	incf	((c:___awdiv@dividend+1)),c
  9676  003D5E  2A25               	line	21
  9677                           	
  9678                           l3459:
  9679  003D60                     	movlw	(01h)&0ffh
  9680  003D60  0E01               	xorwf	((c:___awdiv@sign)),c
  9681  003D62  1A29               	goto	l3461
  9682  003D64  EFB4  F01E         	line	22
  9683                           	
  9684                           l635:
  9685  003D68                     	line	23
  9686                           	
  9687                           l3461:
  9688  003D68                     	movlw	high(0)
  9689  003D68  0E00               	movwf	((c:___awdiv@quotient+1)),c
  9690  003D6A  6E2B               	movlw	low(0)
  9691  003D6C  0E00               	movwf	((c:___awdiv@quotient)),c
  9692  003D6E  6E2A               	line	24
  9693                           	
  9694                           l3463:
  9695  003D70                     	movf	((c:___awdiv@divisor)),c,w
  9696  003D70  5026               iorwf	((c:___awdiv@divisor+1)),c,w
  9697  003D72  1027               	btfsc	status,2
  9698  003D74  B4D8               	goto	u3331
  9699  003D76  EFBF  F01E         	goto	u3330
  9700  003D7A  EFC1  F01E         
  9701                           u3331:
  9702  003D7E                     	goto	l3483
  9703  003D7E  EFF5  F01E         u3330:
  9704  003D82                     	line	25
  9705                           	
  9706                           l3465:
  9707  003D82                     	movlw	low(01h)
  9708  003D82  0E01               	movwf	((c:___awdiv@counter)),c
  9709  003D84  6E28               	line	26
  9710                           	goto	l3469
  9711  003D86  EFCB  F01E         	
  9712                           l638:
  9713  003D8A                     	line	27
  9714                           	
  9715                           l3467:
  9716  003D8A                     	bcf	status,0
  9717  003D8A  90D8               	rlcf	((c:___awdiv@divisor)),c
  9718  003D8C  3626               	rlcf	((c:___awdiv@divisor+1)),c
  9719  003D8E  3627               	line	28
  9720                           	incf	((c:___awdiv@counter)),c
  9721  003D90  2A28               	goto	l3469
  9722  003D92  EFCB  F01E         	line	29
  9723                           	
  9724                           l637:
  9725  003D96                     	line	26
  9726                           	
  9727                           l3469:
  9728  003D96                     	
  9729                           	btfss	((c:___awdiv@divisor+1)),c,(15)&7
  9730  003D96  AE27               	goto	u3341
  9731  003D98  EFD0  F01E         	goto	u3340
  9732  003D9C  EFD2  F01E         u3341:
  9733  003DA0                     	goto	l3467
  9734  003DA0  EFC5  F01E         u3340:
  9735  003DA4                     	goto	l3471
  9736  003DA4  EFD6  F01E         	
  9737                           l639:
  9738  003DA8                     	goto	l3471
  9739  003DA8  EFD6  F01E         	line	30
  9740                           	
  9741                           l640:
  9742  003DAC                     	line	31
  9743                           	
  9744                           l3471:
  9745  003DAC                     	bcf	status,0
  9746  003DAC  90D8               	rlcf	((c:___awdiv@quotient)),c
  9747  003DAE  362A               	rlcf	((c:___awdiv@quotient+1)),c
  9748  003DB0  362B               	line	32
  9749                           	
  9750                           l3473:
  9751  003DB2                     		movf	((c:___awdiv@divisor)),c,w
  9752  003DB2  5026               	subwf	((c:___awdiv@dividend)),c,w
  9753  003DB4  5C24               	movf	((c:___awdiv@divisor+1)),c,w
  9754  003DB6  5027               	subwfb	((c:___awdiv@dividend+1)),c,w
  9755  003DB8  5825               	btfss	status,0
  9756  003DBA  A0D8               	goto	u3351
  9757  003DBC  EFE2  F01E         	goto	u3350
  9758  003DC0  EFE4  F01E         
  9759                           u3351:
  9760  003DC4                     	goto	l3479
  9761  003DC4  EFEB  F01E         u3350:
  9762  003DC8                     	line	33
  9763                           	
  9764                           l3475:
  9765  003DC8                     	movf	((c:___awdiv@divisor)),c,w
  9766  003DC8  5026               	subwf	((c:___awdiv@dividend)),c
  9767  003DCA  5E24               	movf	((c:___awdiv@divisor+1)),c,w
  9768  003DCC  5027               	subwfb	((c:___awdiv@dividend+1)),c
  9769  003DCE  5A25               
  9770                           	line	34
  9771                           	
  9772                           l3477:
  9773  003DD0                     	bsf	(0+(0/8)+(c:___awdiv@quotient)),c,(0)&7
  9774  003DD0  802A               	goto	l3479
  9775  003DD2  EFEB  F01E         	line	35
  9776                           	
  9777                           l641:
  9778  003DD6                     	line	36
  9779                           	
  9780                           l3479:
  9781  003DD6                     	bcf	status,0
  9782  003DD6  90D8               	rrcf	((c:___awdiv@divisor+1)),c
  9783  003DD8  3227               	rrcf	((c:___awdiv@divisor)),c
  9784  003DDA  3226               	line	37
  9785                           	
  9786                           l3481:
  9787  003DDC                     	decfsz	((c:___awdiv@counter)),c
  9788  003DDC  2E28               	
  9789                           	goto	l3471
  9790  003DDE  EFD6  F01E         	goto	l3483
  9791  003DE2  EFF5  F01E         	
  9792                           l642:
  9793  003DE6                     	goto	l3483
  9794  003DE6  EFF5  F01E         	line	38
  9795                           	
  9796                           l636:
  9797  003DEA                     	line	39
  9798                           	
  9799                           l3483:
  9800  003DEA                     	movf	((c:___awdiv@sign)),c,w
  9801  003DEA  5029               	btfsc	status,2
  9802  003DEC  B4D8               	goto	u3361
  9803  003DEE  EFFB  F01E         	goto	u3360
  9804  003DF2  EFFD  F01E         u3361:
  9805  003DF6                     	goto	l3487
  9806  003DF6  EF03  F01F         u3360:
  9807  003DFA                     	line	40
  9808                           	
  9809                           l3485:
  9810  003DFA                     	negf	((c:___awdiv@quotient)),c
  9811  003DFA  6C2A               	comf	((c:___awdiv@quotient+1)),c
  9812  003DFC  1E2B               	btfsc	status,0
  9813  003DFE  B0D8               	incf	((c:___awdiv@quotient+1)),c
  9814  003E00  2A2B               	goto	l3487
  9815  003E02  EF03  F01F         	
  9816                           l643:
  9817  003E06                     	line	41
  9818                           	
  9819                           l3487:
  9820  003E06                     	movff	(c:___awdiv@quotient),(c:?___awdiv)
  9821  003E06  C02A  F024         	movff	(c:___awdiv@quotient+1),(c:?___awdiv+1)
  9822  003E0A  C02B  F025         	goto	l644
  9823  003E0E  EF09  F01F         	
  9824                           l3489:
  9825  003E12                     	line	42
  9826                           	
  9827                           l644:
  9828  003E12                     	return	;funcret
  9829  003E12  0012               	opt stack 0
  9830                           GLOBAL	__end_of___awdiv
  9831                           	__end_of___awdiv:
  9832  003E14                     	signat	___awdiv,8314
  9833                           	global	__tdiv_to_l_
  9834                           
  9835 ;; *************** function __tdiv_to_l_ *****************
  9836 ;; Defined at:
  9837 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;  f1              4   29[COMRAM] float 
  9840 ;;  f2              4   33[COMRAM] float 
  9841 ;; Auto vars:     Size  Location     Type
  9842 ;;  quot            4   40[COMRAM] unsigned long 
  9843 ;;  exp1            1   45[COMRAM] unsigned char 
  9844 ;;  cntr            1   44[COMRAM] unsigned char 
  9845 ;; Return value:  Size  Location     Type
  9846 ;;                  4   29[COMRAM] unsigned long 
  9847 ;; Registers used:
  9848 ;;		wreg, status,2, status,0
  9849 ;; Tracked objects:
  9850 ;;		On entry : 0/0
  9851 ;;		On exit  : 0/0
  9852 ;;		Unchanged: 0/0
  9853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
  9854 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9855 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9856 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9857 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
  9858 ;;Total ram usage:       17 bytes
  9859 ;; Hardware stack levels used:    1
  9860 ;; Hardware stack levels required when called:    3
  9861 ;; This function calls:
  9862 ;;		Nothing
  9863 ;; This function is called by:
  9864 ;;		_sprintf
  9865 ;; This function uses a non-reentrant model
  9866 ;;
  9867                           psect	text6,class=CODE,space=0,reloc=2,group=1
  9868                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  9869                           	line	60
  9870                           global __ptext6
  9871                           __ptext6:
  9872  003710                     psect	text6
  9873                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\ftdivl.c"
  9874                           	line	60
  9875                           	global	__size_of__tdiv_to_l_
  9876                           	__size_of__tdiv_to_l_	equ	__end_of__tdiv_to_l_-__tdiv_to_l_
  9877  0000                     	
  9878                           __tdiv_to_l_:
  9879  003710                     ;incstack = 0
  9880                           	opt	stack 26
  9881                           	line	66
  9882                           	
  9883                           l3625:
  9884  003710                     	movff	(c:__tdiv_to_l_@f1+2),??__tdiv_to_l_+0+0
  9885  003710  C020  F026         	clrf	(??__tdiv_to_l_+0+0+1)&0ffh,c
  9886  003714  6A27               	clrf	(??__tdiv_to_l_+0+0+2)&0ffh,c
  9887  003716  6A28               	rlcf	((c:__tdiv_to_l_@f1+1)),c,w
  9888  003718  341F               	rlcf	(??__tdiv_to_l_+0+0)&0ffh,c
  9889  00371A  3626               	bnc	u3531
  9890  00371C  E301               	bsf	(??__tdiv_to_l_+0+0+1)&0ffh,c,0
  9891  00371E  8027               u3531:
  9892  003720                     	movf	(??__tdiv_to_l_+0+0),c,w
  9893  003720  5026               	movwf	((c:__tdiv_to_l_@exp1)),c
  9894  003722  6E2E               	movf	((c:__tdiv_to_l_@exp1)),c,w
  9895  003724  502E               	btfss	status,2
  9896  003726  A4D8               	goto	u3541
  9897  003728  EF98  F01B         	goto	u3540
  9898  00372C  EF9A  F01B         u3541:
  9899  003730                     	goto	l3631
  9900  003730  EFA6  F01B         u3540:
  9901  003734                     	line	67
  9902                           	
  9903                           l3627:
  9904  003734                     	movlw	low(0)
  9905  003734  0E00               	movwf	((c:?__tdiv_to_l_)),c
  9906  003736  6E1E               	movlw	high(0)
  9907  003738  0E00               	movwf	((c:?__tdiv_to_l_+1)),c
  9908  00373A  6E1F               	movlw	low highword(0)
  9909  00373C  0E00               	movwf	((c:?__tdiv_to_l_+2)),c
  9910  00373E  6E20               	movlw	high highword(0)
  9911  003740  0E00               	movwf	((c:?__tdiv_to_l_+3)),c
  9912  003742  6E21               	goto	l771
  9913  003744  EF5E  F01C         	
  9914                           l3629:
  9915  003748                     	goto	l771
  9916  003748  EF5E  F01C         	
  9917                           l770:
  9918  00374C                     	line	68
  9919                           	
  9920                           l3631:
  9921  00374C                     	movff	(c:__tdiv_to_l_@f2+2),??__tdiv_to_l_+0+0
  9922  00374C  C024  F026         	clrf	(??__tdiv_to_l_+0+0+1)&0ffh,c
  9923  003750  6A27               	clrf	(??__tdiv_to_l_+0+0+2)&0ffh,c
  9924  003752  6A28               	rlcf	((c:__tdiv_to_l_@f2+1)),c,w
  9925  003754  3423               	rlcf	(??__tdiv_to_l_+0+0)&0ffh,c
  9926  003756  3626               	bnc	u3551
  9927  003758  E301               	bsf	(??__tdiv_to_l_+0+0+1)&0ffh,c,0
  9928  00375A  8027               u3551:
  9929  00375C                     	movf	(??__tdiv_to_l_+0+0),c,w
  9930  00375C  5026               	movwf	((c:__tdiv_to_l_@cntr)),c
  9931  00375E  6E2D               	movf	((c:__tdiv_to_l_@cntr)),c,w
  9932  003760  502D               	btfss	status,2
  9933  003762  A4D8               	goto	u3561
  9934  003764  EFB6  F01B         	goto	u3560
  9935  003768  EFB8  F01B         u3561:
  9936  00376C                     	goto	l3637
  9937  00376C  EFC4  F01B         u3560:
  9938  003770                     	line	69
  9939                           	
  9940                           l3633:
  9941  003770                     	movlw	low(0)
  9942  003770  0E00               	movwf	((c:?__tdiv_to_l_)),c
  9943  003772  6E1E               	movlw	high(0)
  9944  003774  0E00               	movwf	((c:?__tdiv_to_l_+1)),c
  9945  003776  6E1F               	movlw	low highword(0)
  9946  003778  0E00               	movwf	((c:?__tdiv_to_l_+2)),c
  9947  00377A  6E20               	movlw	high highword(0)
  9948  00377C  0E00               	movwf	((c:?__tdiv_to_l_+3)),c
  9949  00377E  6E21               	goto	l771
  9950  003780  EF5E  F01C         	
  9951                           l3635:
  9952  003784                     	goto	l771
  9953  003784  EF5E  F01C         	
  9954                           l772:
  9955  003788                     	line	70
  9956                           	
  9957                           l3637:
  9958  003788                     	bsf	(0+(15/8)+(c:__tdiv_to_l_@f1)),c,(15)&7
  9959  003788  8E1F               	line	71
  9960                           	
  9961                           l3639:
  9962  00378A                     	movlw	low(0FFFFh)
  9963  00378A  0EFF               	andwf	((c:__tdiv_to_l_@f1)),c
  9964  00378C  161E               	movlw	high(0FFFFh)
  9965  00378E  0EFF               	andwf	((c:__tdiv_to_l_@f1+1)),c
  9966  003790  161F               	movlw	low highword(0FFFFh)
  9967  003792  0E00               	andwf	((c:__tdiv_to_l_@f1+2)),c
  9968  003794  1620               
  9969                           	line	72
  9970                           	bsf	(0+(15/8)+(c:__tdiv_to_l_@f2)),c,(15)&7
  9971  003796  8E23               	line	73
  9972                           	
  9973                           l3641:
  9974  003798                     	movlw	low(0FFFFh)
  9975  003798  0EFF               	andwf	((c:__tdiv_to_l_@f2)),c
  9976  00379A  1622               	movlw	high(0FFFFh)
  9977  00379C  0EFF               	andwf	((c:__tdiv_to_l_@f2+1)),c
  9978  00379E  1623               	movlw	low highword(0FFFFh)
  9979  0037A0  0E00               	andwf	((c:__tdiv_to_l_@f2+2)),c
  9980  0037A2  1624               
  9981                           	line	74
  9982                           	
  9983                           l3643:
  9984  0037A4                     	movlw	low(0)
  9985  0037A4  0E00               	movwf	((c:__tdiv_to_l_@quot)),c
  9986  0037A6  6E29               	movlw	high(0)
  9987  0037A8  0E00               	movwf	((c:__tdiv_to_l_@quot+1)),c
  9988  0037AA  6E2A               	movlw	low highword(0)
  9989  0037AC  0E00               	movwf	((c:__tdiv_to_l_@quot+2)),c
  9990  0037AE  6E2B               	movlw	high highword(0)
  9991  0037B0  0E00               	movwf	((c:__tdiv_to_l_@quot+3)),c
  9992  0037B2  6E2C               	line	75
  9993                           	
  9994                           l3645:
  9995  0037B4                     	movlw	(07Fh)&0ffh
  9996  0037B4  0E7F               	subwf	((c:__tdiv_to_l_@exp1)),c
  9997  0037B6  5E2E               	line	76
  9998                           	
  9999                           l3647:
 10000  0037B8                     	movf	((c:__tdiv_to_l_@cntr)),c,w
 10001  0037B8  502D               	addlw	low(098h)
 10002  0037BA  0F98               	subwf	((c:__tdiv_to_l_@exp1)),c
 10003  0037BC  5E2E               	line	77
 10004                           	
 10005                           l3649:
 10006  0037BE                     	movlw	low(018h)
 10007  0037BE  0E18               	movwf	((c:__tdiv_to_l_@cntr)),c
 10008  0037C0  6E2D               	line	78
 10009                           	
 10010                           l773:
 10011  0037C2                     	line	79
 10012                           	bcf	status,0
 10013  0037C2  90D8               	rlcf	((c:__tdiv_to_l_@quot)),c
 10014  0037C4  3629               	rlcf	((c:__tdiv_to_l_@quot+1)),c
 10015  0037C6  362A               	rlcf	((c:__tdiv_to_l_@quot+2)),c
 10016  0037C8  362B               	rlcf	((c:__tdiv_to_l_@quot+3)),c
 10017  0037CA  362C               	line	80
 10018                           	
 10019                           l3651:
 10020  0037CC                     		movf	((c:__tdiv_to_l_@f2)),c,w
 10021  0037CC  5022               	subwf	((c:__tdiv_to_l_@f1)),c,w
 10022  0037CE  5C1E               	movf	((c:__tdiv_to_l_@f2+1)),c,w
 10023  0037D0  5023               	subwfb	((c:__tdiv_to_l_@f1+1)),c,w
 10024  0037D2  581F               	movf	((c:__tdiv_to_l_@f2+2)),c,w
 10025  0037D4  5024               	subwfb	((c:__tdiv_to_l_@f1+2)),c,w
 10026  0037D6  5820               	btfss	status,0
 10027  0037D8  A0D8               	goto	u3571
 10028  0037DA  EFF1  F01B         	goto	u3570
 10029  0037DE  EFF3  F01B         
 10030                           u3571:
 10031  0037E2                     	goto	l774
 10032  0037E2  EFFA  F01B         u3570:
 10033  0037E6                     	line	81
 10034                           	
 10035                           l3653:
 10036  0037E6                     	movf	((c:__tdiv_to_l_@f2)),c,w
 10037  0037E6  5022               	subwf	((c:__tdiv_to_l_@f1)),c
 10038  0037E8  5E1E               	movf	((c:__tdiv_to_l_@f2+1)),c,w
 10039  0037EA  5023               	subwfb	((c:__tdiv_to_l_@f1+1)),c
 10040  0037EC  5A1F               	movf	((c:__tdiv_to_l_@f2+2)),c,w
 10041  0037EE  5024               	subwfb	((c:__tdiv_to_l_@f1+2)),c
 10042  0037F0  5A20               
 10043                           	line	82
 10044                           	
 10045                           l3655:
 10046  0037F2                     	bsf	(0+(0/8)+(c:__tdiv_to_l_@quot)),c,(0)&7
 10047  0037F2  8029               	line	83
 10048                           	
 10049                           l774:
 10050  0037F4                     	line	84
 10051                           	bcf	status,0
 10052  0037F4  90D8               	rlcf	((c:__tdiv_to_l_@f1)),c
 10053  0037F6  361E               	rlcf	((c:__tdiv_to_l_@f1+1)),c
 10054  0037F8  361F               	rlcf	((c:__tdiv_to_l_@f1+2)),c
 10055  0037FA  3620               	line	85
 10056                           	
 10057                           l3657:
 10058  0037FC                     	decfsz	((c:__tdiv_to_l_@cntr)),c
 10059  0037FC  2E2D               	
 10060                           	goto	l773
 10061  0037FE  EFE1  F01B         	goto	l3659
 10062  003802  EF03  F01C         	
 10063                           l775:
 10064  003806                     	line	86
 10065                           	
 10066                           l3659:
 10067  003806                     	btfsc	((c:__tdiv_to_l_@exp1)),c,7
 10068  003806  BE2E               	goto	u3580
 10069  003808  EF0A  F01C         	goto	u3581
 10070  00380C  EF08  F01C         
 10071                           u3581:
 10072  003810                     	goto	l3671
 10073  003810  EF2E  F01C         u3580:
 10074  003814                     	line	87
 10075                           	
 10076                           l3661:
 10077  003814                     		movf	((c:__tdiv_to_l_@exp1)),c,w
 10078  003814  502E               	xorlw	80h
 10079  003816  0A80               	addlw	-(80h^-23)
 10080  003818  0F97               	btfsc	status,0
 10081  00381A  B0D8               	goto	u3591
 10082  00381C  EF12  F01C         	goto	u3590
 10083  003820  EF14  F01C         
 10084                           u3591:
 10085  003824                     	goto	l3667
 10086  003824  EF22  F01C         u3590:
 10087  003828                     	line	88
 10088                           	
 10089                           l3663:
 10090  003828                     	movlw	low(0)
 10091  003828  0E00               	movwf	((c:?__tdiv_to_l_)),c
 10092  00382A  6E1E               	movlw	high(0)
 10093  00382C  0E00               	movwf	((c:?__tdiv_to_l_+1)),c
 10094  00382E  6E1F               	movlw	low highword(0)
 10095  003830  0E00               	movwf	((c:?__tdiv_to_l_+2)),c
 10096  003832  6E20               	movlw	high highword(0)
 10097  003834  0E00               	movwf	((c:?__tdiv_to_l_+3)),c
 10098  003836  6E21               	goto	l771
 10099  003838  EF5E  F01C         	
 10100                           l3665:
 10101  00383C                     	goto	l771
 10102  00383C  EF5E  F01C         	
 10103                           l777:
 10104  003840                     	goto	l3667
 10105  003840  EF22  F01C         	line	89
 10106                           	
 10107                           l778:
 10108  003844                     	line	90
 10109                           	
 10110                           l3667:
 10111  003844                     	bcf	status,0
 10112  003844  90D8               	rrcf	((c:__tdiv_to_l_@quot+3)),c
 10113  003846  322C               	rrcf	((c:__tdiv_to_l_@quot+2)),c
 10114  003848  322B               	rrcf	((c:__tdiv_to_l_@quot+1)),c
 10115  00384A  322A               	rrcf	((c:__tdiv_to_l_@quot)),c
 10116  00384C  3229               	line	91
 10117                           	
 10118                           l3669:
 10119  00384E                     	incfsz	((c:__tdiv_to_l_@exp1)),c
 10120  00384E  3E2E               	
 10121                           	goto	l3667
 10122  003850  EF22  F01C         	goto	l780
 10123  003854  EF56  F01C         	
 10124                           l779:
 10125  003858                     	line	92
 10126                           	goto	l780
 10127  003858  EF56  F01C         	
 10128                           l776:
 10129  00385C                     	line	93
 10130                           	
 10131                           l3671:
 10132  00385C                     		movlw	018h-1
 10133  00385C  0E17               	cpfsgt	((c:__tdiv_to_l_@exp1)),c
 10134  00385E  642E               	goto	u3601
 10135  003860  EF34  F01C         	goto	u3600
 10136  003864  EF36  F01C         
 10137                           u3601:
 10138  003868                     	goto	l3679
 10139  003868  EF4C  F01C         u3600:
 10140  00386C                     	line	94
 10141                           	
 10142                           l3673:
 10143  00386C                     	movlw	low(0)
 10144  00386C  0E00               	movwf	((c:?__tdiv_to_l_)),c
 10145  00386E  6E1E               	movlw	high(0)
 10146  003870  0E00               	movwf	((c:?__tdiv_to_l_+1)),c
 10147  003872  6E1F               	movlw	low highword(0)
 10148  003874  0E00               	movwf	((c:?__tdiv_to_l_+2)),c
 10149  003876  6E20               	movlw	high highword(0)
 10150  003878  0E00               	movwf	((c:?__tdiv_to_l_+3)),c
 10151  00387A  6E21               	goto	l771
 10152  00387C  EF5E  F01C         	
 10153                           l3675:
 10154  003880                     	goto	l771
 10155  003880  EF5E  F01C         	
 10156                           l781:
 10157  003884                     	line	95
 10158                           	goto	l3679
 10159  003884  EF4C  F01C         	
 10160                           l783:
 10161  003888                     	line	96
 10162                           	
 10163                           l3677:
 10164  003888                     	bcf	status,0
 10165  003888  90D8               	rlcf	((c:__tdiv_to_l_@quot)),c
 10166  00388A  3629               	rlcf	((c:__tdiv_to_l_@quot+1)),c
 10167  00388C  362A               	rlcf	((c:__tdiv_to_l_@quot+2)),c
 10168  00388E  362B               	rlcf	((c:__tdiv_to_l_@quot+3)),c
 10169  003890  362C               	line	97
 10170                           	decf	((c:__tdiv_to_l_@exp1)),c
 10171  003892  062E               	goto	l3679
 10172  003894  EF4C  F01C         	line	98
 10173                           	
 10174                           l782:
 10175  003898                     	line	95
 10176                           	
 10177                           l3679:
 10178  003898                     	movf	((c:__tdiv_to_l_@exp1)),c,w
 10179  003898  502E               	btfss	status,2
 10180  00389A  A4D8               	goto	u3611
 10181  00389C  EF52  F01C         	goto	u3610
 10182  0038A0  EF54  F01C         u3611:
 10183  0038A4                     	goto	l3677
 10184  0038A4  EF44  F01C         u3610:
 10185  0038A8                     	goto	l780
 10186  0038A8  EF56  F01C         	
 10187                           l784:
 10188  0038AC                     	line	99
 10189                           	
 10190                           l780:
 10191  0038AC                     	line	100
 10192                           	movff	(c:__tdiv_to_l_@quot),(c:?__tdiv_to_l_)
 10193  0038AC  C029  F01E         	movff	(c:__tdiv_to_l_@quot+1),(c:?__tdiv_to_l_+1)
 10194  0038B0  C02A  F01F         	movff	(c:__tdiv_to_l_@quot+2),(c:?__tdiv_to_l_+2)
 10195  0038B4  C02B  F020         	movff	(c:__tdiv_to_l_@quot+3),(c:?__tdiv_to_l_+3)
 10196  0038B8  C02C  F021         	line	101
 10197                           	
 10198                           l771:
 10199  0038BC                     	return	;funcret
 10200  0038BC  0012               	opt stack 0
 10201                           GLOBAL	__end_of__tdiv_to_l_
 10202                           	__end_of__tdiv_to_l_:
 10203  0038BE                     	signat	__tdiv_to_l_,8316
 10204                           	global	__div_to_l_
 10205                           
 10206 ;; *************** function __div_to_l_ *****************
 10207 ;; Defined at:
 10208 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 10209 ;; Parameters:    Size  Location     Type
 10210 ;;  f1              4   29[COMRAM] unsigned long 
 10211 ;;  f2              4   33[COMRAM] unsigned long 
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;  quot            4   37[COMRAM] unsigned long 
 10214 ;;  exp1            1   42[COMRAM] unsigned char 
 10215 ;;  cntr            1   41[COMRAM] unsigned char 
 10216 ;; Return value:  Size  Location     Type
 10217 ;;                  4   29[COMRAM] unsigned long 
 10218 ;; Registers used:
 10219 ;;		wreg, status,2, status,0
 10220 ;; Tracked objects:
 10221 ;;		On entry : 0/0
 10222 ;;		On exit  : 0/0
 10223 ;;		Unchanged: 0/0
 10224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 10225 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10226 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10228 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10229 ;;Total ram usage:       14 bytes
 10230 ;; Hardware stack levels used:    1
 10231 ;; Hardware stack levels required when called:    3
 10232 ;; This function calls:
 10233 ;;		Nothing
 10234 ;; This function is called by:
 10235 ;;		_sprintf
 10236 ;; This function uses a non-reentrant model
 10237 ;;
 10238                           psect	text7,class=CODE,space=0,reloc=2,group=1
 10239                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 10240                           	line	60
 10241                           global __ptext7
 10242                           __ptext7:
 10243  0038BE                     psect	text7
 10244                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fldivl.c"
 10245                           	line	60
 10246                           	global	__size_of__div_to_l_
 10247                           	__size_of__div_to_l_	equ	__end_of__div_to_l_-__div_to_l_
 10248  0000                     	
 10249                           __div_to_l_:
 10250  0038BE                     ;incstack = 0
 10251                           	opt	stack 26
 10252                           	line	66
 10253                           	
 10254                           l3681:
 10255  0038BE                     	rlcf	((c:__div_to_l_@f1+2)),c,w
 10256  0038BE  3420               	rlcf	((c:__div_to_l_@f1+3)),c,w
 10257  0038C0  3421               	movwf	((c:__div_to_l_@exp1)),c
 10258  0038C2  6E2B               	movf	((c:__div_to_l_@exp1)),c,w
 10259  0038C4  502B               	btfss	status,2
 10260  0038C6  A4D8               	goto	u3621
 10261  0038C8  EF68  F01C         	goto	u3620
 10262  0038CC  EF6A  F01C         u3621:
 10263  0038D0                     	goto	l3687
 10264  0038D0  EF76  F01C         u3620:
 10265  0038D4                     	line	67
 10266                           	
 10267                           l3683:
 10268  0038D4                     	movlw	low(0)
 10269  0038D4  0E00               	movwf	((c:?__div_to_l_)),c
 10270  0038D6  6E1E               	movlw	high(0)
 10271  0038D8  0E00               	movwf	((c:?__div_to_l_+1)),c
 10272  0038DA  6E1F               	movlw	low highword(0)
 10273  0038DC  0E00               	movwf	((c:?__div_to_l_+2)),c
 10274  0038DE  6E20               	movlw	high highword(0)
 10275  0038E0  0E00               	movwf	((c:?__div_to_l_+3)),c
 10276  0038E2  6E21               	goto	l667
 10277  0038E4  EF34  F01D         	
 10278                           l3685:
 10279  0038E8                     	goto	l667
 10280  0038E8  EF34  F01D         	
 10281                           l666:
 10282  0038EC                     	line	68
 10283                           	
 10284                           l3687:
 10285  0038EC                     	rlcf	((c:__div_to_l_@f2+2)),c,w
 10286  0038EC  3424               	rlcf	((c:__div_to_l_@f2+3)),c,w
 10287  0038EE  3425               	movwf	((c:__div_to_l_@cntr)),c
 10288  0038F0  6E2A               	movf	((c:__div_to_l_@cntr)),c,w
 10289  0038F2  502A               	btfss	status,2
 10290  0038F4  A4D8               	goto	u3631
 10291  0038F6  EF7F  F01C         	goto	u3630
 10292  0038FA  EF81  F01C         u3631:
 10293  0038FE                     	goto	l3693
 10294  0038FE  EF8D  F01C         u3630:
 10295  003902                     	line	69
 10296                           	
 10297                           l3689:
 10298  003902                     	movlw	low(0)
 10299  003902  0E00               	movwf	((c:?__div_to_l_)),c
 10300  003904  6E1E               	movlw	high(0)
 10301  003906  0E00               	movwf	((c:?__div_to_l_+1)),c
 10302  003908  6E1F               	movlw	low highword(0)
 10303  00390A  0E00               	movwf	((c:?__div_to_l_+2)),c
 10304  00390C  6E20               	movlw	high highword(0)
 10305  00390E  0E00               	movwf	((c:?__div_to_l_+3)),c
 10306  003910  6E21               	goto	l667
 10307  003912  EF34  F01D         	
 10308                           l3691:
 10309  003916                     	goto	l667
 10310  003916  EF34  F01D         	
 10311                           l668:
 10312  00391A                     	line	70
 10313                           	
 10314                           l3693:
 10315  00391A                     	bsf	(0+(23/8)+(c:__div_to_l_@f1)),c,(23)&7
 10316  00391A  8E20               	line	71
 10317                           	
 10318                           l3695:
 10319  00391C                     	movlw	0FFh
 10320  00391C  0EFF               	andwf	((c:__div_to_l_@f1)),c
 10321  00391E  161E               	movlw	0FFh
 10322  003920  0EFF               	andwf	((c:__div_to_l_@f1+1)),c
 10323  003922  161F               	movlw	0FFh
 10324  003924  0EFF               	andwf	((c:__div_to_l_@f1+2)),c
 10325  003926  1620               	movlw	0
 10326  003928  0E00               	andwf	((c:__div_to_l_@f1+3)),c
 10327  00392A  1621               	line	72
 10328                           	
 10329                           l3697:
 10330  00392C                     	bsf	(0+(23/8)+(c:__div_to_l_@f2)),c,(23)&7
 10331  00392C  8E24               	line	73
 10332                           	movlw	0FFh
 10333  00392E  0EFF               	andwf	((c:__div_to_l_@f2)),c
 10334  003930  1622               	movlw	0FFh
 10335  003932  0EFF               	andwf	((c:__div_to_l_@f2+1)),c
 10336  003934  1623               	movlw	0FFh
 10337  003936  0EFF               	andwf	((c:__div_to_l_@f2+2)),c
 10338  003938  1624               	movlw	0
 10339  00393A  0E00               	andwf	((c:__div_to_l_@f2+3)),c
 10340  00393C  1625               	line	74
 10341                           	
 10342                           l3699:
 10343  00393E                     	movlw	low(0)
 10344  00393E  0E00               	movwf	((c:__div_to_l_@quot)),c
 10345  003940  6E26               	movlw	high(0)
 10346  003942  0E00               	movwf	((c:__div_to_l_@quot+1)),c
 10347  003944  6E27               	movlw	low highword(0)
 10348  003946  0E00               	movwf	((c:__div_to_l_@quot+2)),c
 10349  003948  6E28               	movlw	high highword(0)
 10350  00394A  0E00               	movwf	((c:__div_to_l_@quot+3)),c
 10351  00394C  6E29               	line	75
 10352                           	
 10353                           l3701:
 10354  00394E                     	movlw	(07Fh)&0ffh
 10355  00394E  0E7F               	subwf	((c:__div_to_l_@exp1)),c
 10356  003950  5E2B               	line	76
 10357                           	
 10358                           l3703:
 10359  003952                     	movf	((c:__div_to_l_@cntr)),c,w
 10360  003952  502A               	addlw	low(0A0h)
 10361  003954  0FA0               	subwf	((c:__div_to_l_@exp1)),c
 10362  003956  5E2B               	line	77
 10363                           	
 10364                           l3705:
 10365  003958                     	movlw	low(020h)
 10366  003958  0E20               	movwf	((c:__div_to_l_@cntr)),c
 10367  00395A  6E2A               	goto	l3707
 10368  00395C  EFB0  F01C         	line	78
 10369                           	
 10370                           l669:
 10371  003960                     	line	79
 10372                           	
 10373                           l3707:
 10374  003960                     	bcf	status,0
 10375  003960  90D8               	rlcf	((c:__div_to_l_@quot)),c
 10376  003962  3626               	rlcf	((c:__div_to_l_@quot+1)),c
 10377  003964  3627               	rlcf	((c:__div_to_l_@quot+2)),c
 10378  003966  3628               	rlcf	((c:__div_to_l_@quot+3)),c
 10379  003968  3629               	line	80
 10380                           	
 10381                           l3709:
 10382  00396A                     		movf	((c:__div_to_l_@f2)),c,w
 10383  00396A  5022               	subwf	((c:__div_to_l_@f1)),c,w
 10384  00396C  5C1E               	movf	((c:__div_to_l_@f2+1)),c,w
 10385  00396E  5023               	subwfb	((c:__div_to_l_@f1+1)),c,w
 10386  003970  581F               	movf	((c:__div_to_l_@f2+2)),c,w
 10387  003972  5024               	subwfb	((c:__div_to_l_@f1+2)),c,w
 10388  003974  5820               	movf	((c:__div_to_l_@f2+3)),c,w
 10389  003976  5025               	subwfb	((c:__div_to_l_@f1+3)),c,w
 10390  003978  5821               	btfss	status,0
 10391  00397A  A0D8               	goto	u3641
 10392  00397C  EFC2  F01C         	goto	u3640
 10393  003980  EFC4  F01C         
 10394                           u3641:
 10395  003984                     	goto	l3715
 10396  003984  EFCF  F01C         u3640:
 10397  003988                     	line	81
 10398                           	
 10399                           l3711:
 10400  003988                     	movf	((c:__div_to_l_@f2)),c,w
 10401  003988  5022               	subwf	((c:__div_to_l_@f1)),c
 10402  00398A  5E1E               	movf	((c:__div_to_l_@f2+1)),c,w
 10403  00398C  5023               	subwfb	((c:__div_to_l_@f1+1)),c
 10404  00398E  5A1F               	movf	((c:__div_to_l_@f2+2)),c,w
 10405  003990  5024               	subwfb	((c:__div_to_l_@f1+2)),c
 10406  003992  5A20               	movf	((c:__div_to_l_@f2+3)),c,w
 10407  003994  5025               	subwfb	((c:__div_to_l_@f1+3)),c
 10408  003996  5A21               	line	82
 10409                           	
 10410                           l3713:
 10411  003998                     	bsf	(0+(0/8)+(c:__div_to_l_@quot)),c,(0)&7
 10412  003998  8026               	goto	l3715
 10413  00399A  EFCF  F01C         	line	83
 10414                           	
 10415                           l670:
 10416  00399E                     	line	84
 10417                           	
 10418                           l3715:
 10419  00399E                     	bcf	status,0
 10420  00399E  90D8               	rlcf	((c:__div_to_l_@f1)),c
 10421  0039A0  361E               	rlcf	((c:__div_to_l_@f1+1)),c
 10422  0039A2  361F               	rlcf	((c:__div_to_l_@f1+2)),c
 10423  0039A4  3620               	rlcf	((c:__div_to_l_@f1+3)),c
 10424  0039A6  3621               	line	85
 10425                           	
 10426                           l3717:
 10427  0039A8                     	decfsz	((c:__div_to_l_@cntr)),c
 10428  0039A8  2E2A               	
 10429                           	goto	l3707
 10430  0039AA  EFB0  F01C         	goto	l3719
 10431  0039AE  EFD9  F01C         	
 10432                           l671:
 10433  0039B2                     	line	86
 10434                           	
 10435                           l3719:
 10436  0039B2                     	btfsc	((c:__div_to_l_@exp1)),c,7
 10437  0039B2  BE2B               	goto	u3650
 10438  0039B4  EFE0  F01C         	goto	u3651
 10439  0039B8  EFDE  F01C         
 10440                           u3651:
 10441  0039BC                     	goto	l3731
 10442  0039BC  EF04  F01D         u3650:
 10443  0039C0                     	line	87
 10444                           	
 10445                           l3721:
 10446  0039C0                     		movf	((c:__div_to_l_@exp1)),c,w
 10447  0039C0  502B               	xorlw	80h
 10448  0039C2  0A80               	addlw	-(80h^-31)
 10449  0039C4  0F9F               	btfsc	status,0
 10450  0039C6  B0D8               	goto	u3661
 10451  0039C8  EFE8  F01C         	goto	u3660
 10452  0039CC  EFEA  F01C         
 10453                           u3661:
 10454  0039D0                     	goto	l3727
 10455  0039D0  EFF8  F01C         u3660:
 10456  0039D4                     	line	88
 10457                           	
 10458                           l3723:
 10459  0039D4                     	movlw	low(0)
 10460  0039D4  0E00               	movwf	((c:?__div_to_l_)),c
 10461  0039D6  6E1E               	movlw	high(0)
 10462  0039D8  0E00               	movwf	((c:?__div_to_l_+1)),c
 10463  0039DA  6E1F               	movlw	low highword(0)
 10464  0039DC  0E00               	movwf	((c:?__div_to_l_+2)),c
 10465  0039DE  6E20               	movlw	high highword(0)
 10466  0039E0  0E00               	movwf	((c:?__div_to_l_+3)),c
 10467  0039E2  6E21               	goto	l667
 10468  0039E4  EF34  F01D         	
 10469                           l3725:
 10470  0039E8                     	goto	l667
 10471  0039E8  EF34  F01D         	
 10472                           l673:
 10473  0039EC                     	goto	l3727
 10474  0039EC  EFF8  F01C         	line	89
 10475                           	
 10476                           l674:
 10477  0039F0                     	line	90
 10478                           	
 10479                           l3727:
 10480  0039F0                     	bcf	status,0
 10481  0039F0  90D8               	rrcf	((c:__div_to_l_@quot+3)),c
 10482  0039F2  3229               	rrcf	((c:__div_to_l_@quot+2)),c
 10483  0039F4  3228               	rrcf	((c:__div_to_l_@quot+1)),c
 10484  0039F6  3227               	rrcf	((c:__div_to_l_@quot)),c
 10485  0039F8  3226               	line	91
 10486                           	
 10487                           l3729:
 10488  0039FA                     	incfsz	((c:__div_to_l_@exp1)),c
 10489  0039FA  3E2B               	
 10490                           	goto	l3727
 10491  0039FC  EFF8  F01C         	goto	l676
 10492  003A00  EF2C  F01D         	
 10493                           l675:
 10494  003A04                     	line	92
 10495                           	goto	l676
 10496  003A04  EF2C  F01D         	
 10497                           l672:
 10498  003A08                     	line	93
 10499                           	
 10500                           l3731:
 10501  003A08                     		movlw	020h-1
 10502  003A08  0E1F               	cpfsgt	((c:__div_to_l_@exp1)),c
 10503  003A0A  642B               	goto	u3671
 10504  003A0C  EF0A  F01D         	goto	u3670
 10505  003A10  EF0C  F01D         
 10506                           u3671:
 10507  003A14                     	goto	l3739
 10508  003A14  EF22  F01D         u3670:
 10509  003A18                     	line	94
 10510                           	
 10511                           l3733:
 10512  003A18                     	movlw	low(0)
 10513  003A18  0E00               	movwf	((c:?__div_to_l_)),c
 10514  003A1A  6E1E               	movlw	high(0)
 10515  003A1C  0E00               	movwf	((c:?__div_to_l_+1)),c
 10516  003A1E  6E1F               	movlw	low highword(0)
 10517  003A20  0E00               	movwf	((c:?__div_to_l_+2)),c
 10518  003A22  6E20               	movlw	high highword(0)
 10519  003A24  0E00               	movwf	((c:?__div_to_l_+3)),c
 10520  003A26  6E21               	goto	l667
 10521  003A28  EF34  F01D         	
 10522                           l3735:
 10523  003A2C                     	goto	l667
 10524  003A2C  EF34  F01D         	
 10525                           l677:
 10526  003A30                     	line	95
 10527                           	goto	l3739
 10528  003A30  EF22  F01D         	
 10529                           l679:
 10530  003A34                     	line	96
 10531                           	
 10532                           l3737:
 10533  003A34                     	bcf	status,0
 10534  003A34  90D8               	rlcf	((c:__div_to_l_@quot)),c
 10535  003A36  3626               	rlcf	((c:__div_to_l_@quot+1)),c
 10536  003A38  3627               	rlcf	((c:__div_to_l_@quot+2)),c
 10537  003A3A  3628               	rlcf	((c:__div_to_l_@quot+3)),c
 10538  003A3C  3629               	line	97
 10539                           	decf	((c:__div_to_l_@exp1)),c
 10540  003A3E  062B               	goto	l3739
 10541  003A40  EF22  F01D         	line	98
 10542                           	
 10543                           l678:
 10544  003A44                     	line	95
 10545                           	
 10546                           l3739:
 10547  003A44                     	movf	((c:__div_to_l_@exp1)),c,w
 10548  003A44  502B               	btfss	status,2
 10549  003A46  A4D8               	goto	u3681
 10550  003A48  EF28  F01D         	goto	u3680
 10551  003A4C  EF2A  F01D         u3681:
 10552  003A50                     	goto	l3737
 10553  003A50  EF1A  F01D         u3680:
 10554  003A54                     	goto	l676
 10555  003A54  EF2C  F01D         	
 10556                           l680:
 10557  003A58                     	line	99
 10558                           	
 10559                           l676:
 10560  003A58                     	line	100
 10561                           	movff	(c:__div_to_l_@quot),(c:?__div_to_l_)
 10562  003A58  C026  F01E         	movff	(c:__div_to_l_@quot+1),(c:?__div_to_l_+1)
 10563  003A5C  C027  F01F         	movff	(c:__div_to_l_@quot+2),(c:?__div_to_l_+2)
 10564  003A60  C028  F020         	movff	(c:__div_to_l_@quot+3),(c:?__div_to_l_+3)
 10565  003A64  C029  F021         	line	101
 10566                           	
 10567                           l667:
 10568  003A68                     	return	;funcret
 10569  003A68  0012               	opt stack 0
 10570                           GLOBAL	__end_of__div_to_l_
 10571                           	__end_of__div_to_l_:
 10572  003A6A                     	signat	__div_to_l_,8316
 10573                           	global	___llmod
 10574                           
 10575 ;; *************** function ___llmod *****************
 10576 ;; Defined at:
 10577 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 10578 ;; Parameters:    Size  Location     Type
 10579 ;;  dividend        4   42[COMRAM] unsigned long 
 10580 ;;  divisor         4   46[COMRAM] unsigned long 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;  counter         1   50[COMRAM] unsigned char 
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  4   42[COMRAM] unsigned long 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 10592 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10593 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10595 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10596 ;;Total ram usage:        9 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    3
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_sprintf
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           psect	text8,class=CODE,space=0,reloc=2,group=1
 10606                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 10607                           	line	8
 10608                           global __ptext8
 10609                           __ptext8:
 10610  0041F0                     psect	text8
 10611                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\llmod.c"
 10612                           	line	8
 10613                           	global	__size_of___llmod
 10614                           	__size_of___llmod	equ	__end_of___llmod-___llmod
 10615  0000                     	
 10616                           ___llmod:
 10617  0041F0                     ;incstack = 0
 10618                           	opt	stack 26
 10619                           	line	13
 10620                           	
 10621                           l3985:
 10622  0041F0                     	movf	((c:___llmod@divisor)),c,w
 10623  0041F0  502F               iorwf	((c:___llmod@divisor+1)),c,w
 10624  0041F2  1030               iorwf	((c:___llmod@divisor+2)),c,w
 10625  0041F4  1031               iorwf	((c:___llmod@divisor+3)),c,w
 10626  0041F6  1032               	btfsc	status,2
 10627  0041F8  B4D8               	goto	u4081
 10628  0041FA  EF01  F021         	goto	u4080
 10629  0041FE  EF03  F021         
 10630                           u4081:
 10631  004202                     	goto	l865
 10632  004202  EF3D  F021         u4080:
 10633  004206                     	line	14
 10634                           	
 10635                           l3987:
 10636  004206                     	movlw	low(01h)
 10637  004206  0E01               	movwf	((c:___llmod@counter)),c
 10638  004208  6E33               	line	15
 10639                           	goto	l3991
 10640  00420A  EF0F  F021         	
 10641                           l867:
 10642  00420E                     	line	16
 10643                           	
 10644                           l3989:
 10645  00420E                     	bcf	status,0
 10646  00420E  90D8               	rlcf	((c:___llmod@divisor)),c
 10647  004210  362F               	rlcf	((c:___llmod@divisor+1)),c
 10648  004212  3630               	rlcf	((c:___llmod@divisor+2)),c
 10649  004214  3631               	rlcf	((c:___llmod@divisor+3)),c
 10650  004216  3632               	line	17
 10651                           	incf	((c:___llmod@counter)),c
 10652  004218  2A33               	goto	l3991
 10653  00421A  EF0F  F021         	line	18
 10654                           	
 10655                           l866:
 10656  00421E                     	line	15
 10657                           	
 10658                           l3991:
 10659  00421E                     	
 10660                           	btfss	((c:___llmod@divisor+3)),c,(31)&7
 10661  00421E  AE32               	goto	u4091
 10662  004220  EF14  F021         	goto	u4090
 10663  004224  EF16  F021         u4091:
 10664  004228                     	goto	l3989
 10665  004228  EF07  F021         u4090:
 10666  00422C                     	goto	l3993
 10667  00422C  EF1A  F021         	
 10668                           l868:
 10669  004230                     	goto	l3993
 10670  004230  EF1A  F021         	line	19
 10671                           	
 10672                           l869:
 10673  004234                     	line	20
 10674                           	
 10675                           l3993:
 10676  004234                     		movf	((c:___llmod@divisor)),c,w
 10677  004234  502F               	subwf	((c:___llmod@dividend)),c,w
 10678  004236  5C2B               	movf	((c:___llmod@divisor+1)),c,w
 10679  004238  5030               	subwfb	((c:___llmod@dividend+1)),c,w
 10680  00423A  582C               	movf	((c:___llmod@divisor+2)),c,w
 10681  00423C  5031               	subwfb	((c:___llmod@dividend+2)),c,w
 10682  00423E  582D               	movf	((c:___llmod@divisor+3)),c,w
 10683  004240  5032               	subwfb	((c:___llmod@dividend+3)),c,w
 10684  004242  582E               	btfss	status,0
 10685  004244  A0D8               	goto	u4101
 10686  004246  EF27  F021         	goto	u4100
 10687  00424A  EF29  F021         
 10688                           u4101:
 10689  00424E                     	goto	l3997
 10690  00424E  EF33  F021         u4100:
 10691  004252                     	line	21
 10692                           	
 10693                           l3995:
 10694  004252                     	movf	((c:___llmod@divisor)),c,w
 10695  004252  502F               	subwf	((c:___llmod@dividend)),c
 10696  004254  5E2B               	movf	((c:___llmod@divisor+1)),c,w
 10697  004256  5030               	subwfb	((c:___llmod@dividend+1)),c
 10698  004258  5A2C               	movf	((c:___llmod@divisor+2)),c,w
 10699  00425A  5031               	subwfb	((c:___llmod@dividend+2)),c
 10700  00425C  5A2D               	movf	((c:___llmod@divisor+3)),c,w
 10701  00425E  5032               	subwfb	((c:___llmod@dividend+3)),c
 10702  004260  5A2E               	goto	l3997
 10703  004262  EF33  F021         	
 10704                           l870:
 10705  004266                     	line	22
 10706                           	
 10707                           l3997:
 10708  004266                     	bcf	status,0
 10709  004266  90D8               	rrcf	((c:___llmod@divisor+3)),c
 10710  004268  3232               	rrcf	((c:___llmod@divisor+2)),c
 10711  00426A  3231               	rrcf	((c:___llmod@divisor+1)),c
 10712  00426C  3230               	rrcf	((c:___llmod@divisor)),c
 10713  00426E  322F               	line	23
 10714                           	
 10715                           l3999:
 10716  004270                     	decfsz	((c:___llmod@counter)),c
 10717  004270  2E33               	
 10718                           	goto	l3993
 10719  004272  EF1A  F021         	goto	l865
 10720  004276  EF3D  F021         	
 10721                           l871:
 10722  00427A                     	line	24
 10723                           	
 10724                           l865:
 10725  00427A                     	line	25
 10726                           	movff	(c:___llmod@dividend),(c:?___llmod)
 10727  00427A  C02B  F02B         	movff	(c:___llmod@dividend+1),(c:?___llmod+1)
 10728  00427E  C02C  F02C         	movff	(c:___llmod@dividend+2),(c:?___llmod+2)
 10729  004282  C02D  F02D         	movff	(c:___llmod@dividend+3),(c:?___llmod+3)
 10730  004286  C02E  F02E         	line	26
 10731                           	
 10732                           l872:
 10733  00428A                     	return	;funcret
 10734  00428A  0012               	opt stack 0
 10735                           GLOBAL	__end_of___llmod
 10736                           	__end_of___llmod:
 10737  00428C                     	signat	___llmod,8316
 10738                           	global	___lldiv
 10739                           
 10740 ;; *************** function ___lldiv *****************
 10741 ;; Defined at:
 10742 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 10743 ;; Parameters:    Size  Location     Type
 10744 ;;  dividend        4   29[COMRAM] unsigned long 
 10745 ;;  divisor         4   33[COMRAM] unsigned long 
 10746 ;; Auto vars:     Size  Location     Type
 10747 ;;  quotient        4   37[COMRAM] unsigned long 
 10748 ;;  counter         1   41[COMRAM] unsigned char 
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  4   29[COMRAM] unsigned long 
 10751 ;; Registers used:
 10752 ;;		wreg, status,2, status,0
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/0
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 10758 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10759 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10761 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10762 ;;Total ram usage:       13 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; Hardware stack levels required when called:    3
 10765 ;; This function calls:
 10766 ;;		Nothing
 10767 ;; This function is called by:
 10768 ;;		_sprintf
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           psect	text9,class=CODE,space=0,reloc=2,group=1
 10772                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 10773                           	line	8
 10774                           global __ptext9
 10775                           __ptext9:
 10776  004090                     psect	text9
 10777                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
 10778                           	line	8
 10779                           	global	__size_of___lldiv
 10780                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
 10781  0000                     	
 10782                           ___lldiv:
 10783  004090                     ;incstack = 0
 10784                           	opt	stack 26
 10785                           	line	14
 10786                           	
 10787                           l3963:
 10788  004090                     	movlw	low(0)
 10789  004090  0E00               	movwf	((c:___lldiv@quotient)),c
 10790  004092  6E26               	movlw	high(0)
 10791  004094  0E00               	movwf	((c:___lldiv@quotient+1)),c
 10792  004096  6E27               	movlw	low highword(0)
 10793  004098  0E00               	movwf	((c:___lldiv@quotient+2)),c
 10794  00409A  6E28               	movlw	high highword(0)
 10795  00409C  0E00               	movwf	((c:___lldiv@quotient+3)),c
 10796  00409E  6E29               	line	15
 10797                           	
 10798                           l3965:
 10799  0040A0                     	movf	((c:___lldiv@divisor)),c,w
 10800  0040A0  5022               iorwf	((c:___lldiv@divisor+1)),c,w
 10801  0040A2  1023               iorwf	((c:___lldiv@divisor+2)),c,w
 10802  0040A4  1024               iorwf	((c:___lldiv@divisor+3)),c,w
 10803  0040A6  1025               	btfsc	status,2
 10804  0040A8  B4D8               	goto	u4051
 10805  0040AA  EF59  F020         	goto	u4050
 10806  0040AE  EF5B  F020         
 10807                           u4051:
 10808  0040B2                     	goto	l855
 10809  0040B2  EF9B  F020         u4050:
 10810  0040B6                     	line	16
 10811                           	
 10812                           l3967:
 10813  0040B6                     	movlw	low(01h)
 10814  0040B6  0E01               	movwf	((c:___lldiv@counter)),c
 10815  0040B8  6E2A               	line	17
 10816                           	goto	l3971
 10817  0040BA  EF67  F020         	
 10818                           l857:
 10819  0040BE                     	line	18
 10820                           	
 10821                           l3969:
 10822  0040BE                     	bcf	status,0
 10823  0040BE  90D8               	rlcf	((c:___lldiv@divisor)),c
 10824  0040C0  3622               	rlcf	((c:___lldiv@divisor+1)),c
 10825  0040C2  3623               	rlcf	((c:___lldiv@divisor+2)),c
 10826  0040C4  3624               	rlcf	((c:___lldiv@divisor+3)),c
 10827  0040C6  3625               	line	19
 10828                           	incf	((c:___lldiv@counter)),c
 10829  0040C8  2A2A               	goto	l3971
 10830  0040CA  EF67  F020         	line	20
 10831                           	
 10832                           l856:
 10833  0040CE                     	line	17
 10834                           	
 10835                           l3971:
 10836  0040CE                     	
 10837                           	btfss	((c:___lldiv@divisor+3)),c,(31)&7
 10838  0040CE  AE25               	goto	u4061
 10839  0040D0  EF6C  F020         	goto	u4060
 10840  0040D4  EF6E  F020         u4061:
 10841  0040D8                     	goto	l3969
 10842  0040D8  EF5F  F020         u4060:
 10843  0040DC                     	goto	l3973
 10844  0040DC  EF72  F020         	
 10845                           l858:
 10846  0040E0                     	goto	l3973
 10847  0040E0  EF72  F020         	line	21
 10848                           	
 10849                           l859:
 10850  0040E4                     	line	22
 10851                           	
 10852                           l3973:
 10853  0040E4                     	bcf	status,0
 10854  0040E4  90D8               	rlcf	((c:___lldiv@quotient)),c
 10855  0040E6  3626               	rlcf	((c:___lldiv@quotient+1)),c
 10856  0040E8  3627               	rlcf	((c:___lldiv@quotient+2)),c
 10857  0040EA  3628               	rlcf	((c:___lldiv@quotient+3)),c
 10858  0040EC  3629               	line	23
 10859                           	
 10860                           l3975:
 10861  0040EE                     		movf	((c:___lldiv@divisor)),c,w
 10862  0040EE  5022               	subwf	((c:___lldiv@dividend)),c,w
 10863  0040F0  5C1E               	movf	((c:___lldiv@divisor+1)),c,w
 10864  0040F2  5023               	subwfb	((c:___lldiv@dividend+1)),c,w
 10865  0040F4  581F               	movf	((c:___lldiv@divisor+2)),c,w
 10866  0040F6  5024               	subwfb	((c:___lldiv@dividend+2)),c,w
 10867  0040F8  5820               	movf	((c:___lldiv@divisor+3)),c,w
 10868  0040FA  5025               	subwfb	((c:___lldiv@dividend+3)),c,w
 10869  0040FC  5821               	btfss	status,0
 10870  0040FE  A0D8               	goto	u4071
 10871  004100  EF84  F020         	goto	u4070
 10872  004104  EF86  F020         
 10873                           u4071:
 10874  004108                     	goto	l3981
 10875  004108  EF91  F020         u4070:
 10876  00410C                     	line	24
 10877                           	
 10878                           l3977:
 10879  00410C                     	movf	((c:___lldiv@divisor)),c,w
 10880  00410C  5022               	subwf	((c:___lldiv@dividend)),c
 10881  00410E  5E1E               	movf	((c:___lldiv@divisor+1)),c,w
 10882  004110  5023               	subwfb	((c:___lldiv@dividend+1)),c
 10883  004112  5A1F               	movf	((c:___lldiv@divisor+2)),c,w
 10884  004114  5024               	subwfb	((c:___lldiv@dividend+2)),c
 10885  004116  5A20               	movf	((c:___lldiv@divisor+3)),c,w
 10886  004118  5025               	subwfb	((c:___lldiv@dividend+3)),c
 10887  00411A  5A21               	line	25
 10888                           	
 10889                           l3979:
 10890  00411C                     	bsf	(0+(0/8)+(c:___lldiv@quotient)),c,(0)&7
 10891  00411C  8026               	goto	l3981
 10892  00411E  EF91  F020         	line	26
 10893                           	
 10894                           l860:
 10895  004122                     	line	27
 10896                           	
 10897                           l3981:
 10898  004122                     	bcf	status,0
 10899  004122  90D8               	rrcf	((c:___lldiv@divisor+3)),c
 10900  004124  3225               	rrcf	((c:___lldiv@divisor+2)),c
 10901  004126  3224               	rrcf	((c:___lldiv@divisor+1)),c
 10902  004128  3223               	rrcf	((c:___lldiv@divisor)),c
 10903  00412A  3222               	line	28
 10904                           	
 10905                           l3983:
 10906  00412C                     	decfsz	((c:___lldiv@counter)),c
 10907  00412C  2E2A               	
 10908                           	goto	l3973
 10909  00412E  EF72  F020         	goto	l855
 10910  004132  EF9B  F020         	
 10911                           l861:
 10912  004136                     	line	29
 10913                           	
 10914                           l855:
 10915  004136                     	line	30
 10916                           	movff	(c:___lldiv@quotient),(c:?___lldiv)
 10917  004136  C026  F01E         	movff	(c:___lldiv@quotient+1),(c:?___lldiv+1)
 10918  00413A  C027  F01F         	movff	(c:___lldiv@quotient+2),(c:?___lldiv+2)
 10919  00413E  C028  F020         	movff	(c:___lldiv@quotient+3),(c:?___lldiv+3)
 10920  004142  C029  F021         	line	31
 10921                           	
 10922                           l862:
 10923  004146                     	return	;funcret
 10924  004146  0012               	opt stack 0
 10925                           GLOBAL	__end_of___lldiv
 10926                           	__end_of___lldiv:
 10927  004148                     	signat	___lldiv,8316
 10928                           	global	___flsub
 10929                           
 10930 ;; *************** function ___flsub *****************
 10931 ;; Defined at:
 10932 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10933 ;; Parameters:    Size  Location     Type
 10934 ;;  b               4   20[BANK0 ] unsigned long 
 10935 ;;  a               4   24[BANK0 ] unsigned long 
 10936 ;; Auto vars:     Size  Location     Type
 10937 ;;		None
 10938 ;; Return value:  Size  Location     Type
 10939 ;;                  4   20[BANK0 ] unsigned long 
 10940 ;; Registers used:
 10941 ;;		wreg, status,2, status,0, cstack
 10942 ;; Tracked objects:
 10943 ;;		On entry : 0/0
 10944 ;;		On exit  : 0/0
 10945 ;;		Unchanged: 0/0
 10946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 10947 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10950 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 10951 ;;Total ram usage:        8 bytes
 10952 ;; Hardware stack levels used:    1
 10953 ;; Hardware stack levels required when called:    4
 10954 ;; This function calls:
 10955 ;;		___fladd
 10956 ;; This function is called by:
 10957 ;;		_sprintf
 10958 ;; This function uses a non-reentrant model
 10959 ;;
 10960                           psect	text10,class=CODE,space=0,reloc=2,group=1
 10961                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10962                           	line	245
 10963                           global __ptext10
 10964                           __ptext10:
 10965  0045EE                     psect	text10
 10966                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 10967                           	line	245
 10968                           	global	__size_of___flsub
 10969                           	__size_of___flsub	equ	__end_of___flsub-___flsub
 10970  0000                     	
 10971                           ___flsub:
 10972  0045EE                     ;incstack = 0
 10973                           	opt	stack 25
 10974                           	line	248
 10975                           	
 10976                           l5317:
 10977  0045EE                     	movlw	0
 10978  0045EE  0E00               	movlb	0	; () banked
 10979  0045F0  0100               	xorwf	((___flsub@a))&0ffh
 10980  0045F2  1B98               	movlw	0
 10981  0045F4  0E00               	xorwf	((___flsub@a+1))&0ffh
 10982  0045F6  1B99               	movlw	0
 10983  0045F8  0E00               	xorwf	((___flsub@a+2))&0ffh
 10984  0045FA  1B9A               	movlw	080h
 10985  0045FC  0E80               	xorwf	((___flsub@a+3))&0ffh
 10986  0045FE  1B9B               	line	249
 10987                           	
 10988                           l5319:; BSR set to: 0
 10989  004600                     
 10990                           	movff	(___flsub@b),(___fladd@b)
 10991  004600  C094  F080         	movff	(___flsub@b+1),(___fladd@b+1)
 10992  004604  C095  F081         	movff	(___flsub@b+2),(___fladd@b+2)
 10993  004608  C096  F082         	movff	(___flsub@b+3),(___fladd@b+3)
 10994  00460C  C097  F083         	movff	(___flsub@a),(___fladd@a)
 10995  004610  C098  F084         	movff	(___flsub@a+1),(___fladd@a+1)
 10996  004614  C099  F085         	movff	(___flsub@a+2),(___fladd@a+2)
 10997  004618  C09A  F086         	movff	(___flsub@a+3),(___fladd@a+3)
 10998  00461C  C09B  F087         	call	___fladd	;wreg free
 10999  004620  EC26  F00E         	movff	0+?___fladd,(?___flsub)
 11000  004624  C080  F094         	movff	1+?___fladd,(?___flsub+1)
 11001  004628  C081  F095         	movff	2+?___fladd,(?___flsub+2)
 11002  00462C  C082  F096         	movff	3+?___fladd,(?___flsub+3)
 11003  004630  C083  F097         	
 11004                           	goto	l991
 11005  004634  EF1C  F023         	
 11006                           l5321:
 11007  004638                     	line	250
 11008                           	
 11009                           l991:
 11010  004638                     	return	;funcret
 11011  004638  0012               	opt stack 0
 11012                           GLOBAL	__end_of___flsub
 11013                           	__end_of___flsub:
 11014  00463A                     	signat	___flsub,8316
 11015                           	global	___flneg
 11016                           
 11017 ;; *************** function ___flneg *****************
 11018 ;; Defined at:
 11019 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 11020 ;; Parameters:    Size  Location     Type
 11021 ;;  f1              4   49[COMRAM] unsigned long 
 11022 ;; Auto vars:     Size  Location     Type
 11023 ;;		None
 11024 ;; Return value:  Size  Location     Type
 11025 ;;                  4   49[COMRAM] unsigned long 
 11026 ;; Registers used:
 11027 ;;		wreg, status,2, status,0
 11028 ;; Tracked objects:
 11029 ;;		On entry : 0/0
 11030 ;;		On exit  : 0/0
 11031 ;;		Unchanged: 0/0
 11032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 11033 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11036 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11037 ;;Total ram usage:        4 bytes
 11038 ;; Hardware stack levels used:    1
 11039 ;; Hardware stack levels required when called:    3
 11040 ;; This function calls:
 11041 ;;		Nothing
 11042 ;; This function is called by:
 11043 ;;		_main
 11044 ;;		_sprintf
 11045 ;;		_set_pwm1_general
 11046 ;; This function uses a non-reentrant model
 11047 ;;
 11048                           psect	text11,class=CODE,space=0,reloc=2,group=1
 11049                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 11050                           	line	15
 11051                           global __ptext11
 11052                           __ptext11:
 11053  00467C                     psect	text11
 11054                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flneg.c"
 11055                           	line	15
 11056                           	global	__size_of___flneg
 11057                           	__size_of___flneg	equ	__end_of___flneg-___flneg
 11058  0000                     	
 11059                           ___flneg:
 11060  00467C                     ;incstack = 0
 11061                           	opt	stack 26
 11062                           	line	17
 11063                           	
 11064                           l3911:
 11065  00467C                     	movf	((c:___flneg@f1)),c,w
 11066  00467C  5032               iorwf	((c:___flneg@f1+1)),c,w
 11067  00467E  1033               iorwf	((c:___flneg@f1+2)),c,w
 11068  004680  1034               iorwf	((c:___flneg@f1+3)),c,w
 11069  004682  1035               	btfsc	status,2
 11070  004684  B4D8               	goto	u3971
 11071  004686  EF47  F023         	goto	u3970
 11072  00468A  EF49  F023         
 11073                           u3971:
 11074  00468E                     	goto	l3915
 11075  00468E  EF53  F023         u3970:
 11076  004692                     	line	18
 11077                           	
 11078                           l3913:
 11079  004692                     	movlw	0
 11080  004692  0E00               	xorwf	((c:___flneg@f1)),c
 11081  004694  1A32               	movlw	0
 11082  004696  0E00               	xorwf	((c:___flneg@f1+1)),c
 11083  004698  1A33               	movlw	0
 11084  00469A  0E00               	xorwf	((c:___flneg@f1+2)),c
 11085  00469C  1A34               	movlw	080h
 11086  00469E  0E80               	xorwf	((c:___flneg@f1+3)),c
 11087  0046A0  1A35               	goto	l3915
 11088  0046A2  EF53  F023         	
 11089                           l690:
 11090  0046A6                     	line	19
 11091                           	
 11092                           l3915:
 11093  0046A6                     	movff	(c:___flneg@f1),(c:?___flneg)
 11094  0046A6  C032  F032         	movff	(c:___flneg@f1+1),(c:?___flneg+1)
 11095  0046AA  C033  F033         	movff	(c:___flneg@f1+2),(c:?___flneg+2)
 11096  0046AE  C034  F034         	movff	(c:___flneg@f1+3),(c:?___flneg+3)
 11097  0046B2  C035  F035         	goto	l691
 11098  0046B6  EF5D  F023         	
 11099                           l3917:
 11100  0046BA                     	line	20
 11101                           	
 11102                           l691:
 11103  0046BA                     	return	;funcret
 11104  0046BA  0012               	opt stack 0
 11105                           GLOBAL	__end_of___flneg
 11106                           	__end_of___flneg:
 11107  0046BC                     	signat	___flneg,4220
 11108                           	global	___flge
 11109                           
 11110 ;; *************** function ___flge *****************
 11111 ;; Defined at:
 11112 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;  ff1             4   20[BANK0 ] unsigned long 
 11115 ;;  ff2             4   24[BANK0 ] unsigned long 
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;		None
 11118 ;; Return value:  Size  Location     Type
 11119 ;;		None               void
 11120 ;; Registers used:
 11121 ;;		wreg, status,2, status,0
 11122 ;; Tracked objects:
 11123 ;;		On entry : 0/0
 11124 ;;		On exit  : 0/0
 11125 ;;		Unchanged: 0/0
 11126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 11127 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11128 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11129 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11130 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11131 ;;Total ram usage:       12 bytes
 11132 ;; Hardware stack levels used:    1
 11133 ;; Hardware stack levels required when called:    3
 11134 ;; This function calls:
 11135 ;;		Nothing
 11136 ;; This function is called by:
 11137 ;;		_main
 11138 ;;		_sprintf
 11139 ;; This function uses a non-reentrant model
 11140 ;;
 11141                           psect	text12,class=CODE,space=0,reloc=2,group=1
 11142                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 11143                           	line	4
 11144                           global __ptext12
 11145                           __ptext12:
 11146  003A6A                     psect	text12
 11147                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\flge.c"
 11148                           	line	4
 11149                           	global	__size_of___flge
 11150                           	__size_of___flge	equ	__end_of___flge-___flge
 11151  0000                     	
 11152                           ___flge:
 11153  003A6A                     ;incstack = 0
 11154                           	opt	stack 26
 11155                           	line	7
 11156                           	
 11157                           l3889:
 11158  003A6A                     	movlw	0
 11159  003A6A  0E00               	movlb	0	; () banked
 11160  003A6C  0100               	andwf	((___flge@ff1))&0ffh,w
 11161  003A6E  1594               	movwf	(??___flge+0+0)&0ffh
 11162  003A70  6F9C               	movlw	0
 11163  003A72  0E00               	andwf	((___flge@ff1+1))&0ffh,w
 11164  003A74  1595               	movwf	1+(??___flge+0+0)&0ffh
 11165  003A76  6F9D               	
 11166                           	movlw	080h
 11167  003A78  0E80               	andwf	((___flge@ff1+2))&0ffh,w
 11168  003A7A  1596               	movwf	2+(??___flge+0+0)&0ffh
 11169  003A7C  6F9E               	
 11170                           	movlw	07Fh
 11171  003A7E  0E7F               	andwf	((___flge@ff1+3))&0ffh,w
 11172  003A80  1597               	movwf	3+(??___flge+0+0)&0ffh
 11173  003A82  6F9F               	movf	(??___flge+0+0)&0ffh,w
 11174  003A84  519C               iorwf	(??___flge+0+1)&0ffh,w
 11175  003A86  119D               iorwf	(??___flge+0+2)&0ffh,w
 11176  003A88  119E               iorwf	(??___flge+0+3)&0ffh,w
 11177  003A8A  119F               	btfss	status,2
 11178  003A8C  A4D8               	goto	u3921
 11179  003A8E  EF4B  F01D         	goto	u3920
 11180  003A92  EF4D  F01D         
 11181                           u3921:
 11182  003A96                     	goto	l3893
 11183  003A96  EF57  F01D         u3920:
 11184  003A9A                     	line	8
 11185                           	
 11186                           l3891:; BSR set to: 0
 11187  003A9A                     
 11188                           	movlw	low(0)
 11189  003A9A  0E00               	movwf	((___flge@ff1))&0ffh
 11190  003A9C  6F94               	movlw	high(0)
 11191  003A9E  0E00               	movwf	((___flge@ff1+1))&0ffh
 11192  003AA0  6F95               	movlw	low highword(0)
 11193  003AA2  0E00               	movwf	((___flge@ff1+2))&0ffh
 11194  003AA4  6F96               	movlw	high highword(0)
 11195  003AA6  0E00               	movwf	((___flge@ff1+3))&0ffh
 11196  003AA8  6F97               	goto	l3893
 11197  003AAA  EF57  F01D         	
 11198                           l683:; BSR set to: 0
 11199  003AAE                     
 11200                           	line	9
 11201                           	
 11202                           l3893:; BSR set to: 0
 11203  003AAE                     
 11204                           	movlw	0
 11205  003AAE  0E00               	andwf	((___flge@ff2))&0ffh,w
 11206  003AB0  1598               	movwf	(??___flge+0+0)&0ffh
 11207  003AB2  6F9C               	movlw	0
 11208  003AB4  0E00               	andwf	((___flge@ff2+1))&0ffh,w
 11209  003AB6  1599               	movwf	1+(??___flge+0+0)&0ffh
 11210  003AB8  6F9D               	
 11211                           	movlw	080h
 11212  003ABA  0E80               	andwf	((___flge@ff2+2))&0ffh,w
 11213  003ABC  159A               	movwf	2+(??___flge+0+0)&0ffh
 11214  003ABE  6F9E               	
 11215                           	movlw	07Fh
 11216  003AC0  0E7F               	andwf	((___flge@ff2+3))&0ffh,w
 11217  003AC2  159B               	movwf	3+(??___flge+0+0)&0ffh
 11218  003AC4  6F9F               	movf	(??___flge+0+0)&0ffh,w
 11219  003AC6  519C               iorwf	(??___flge+0+1)&0ffh,w
 11220  003AC8  119D               iorwf	(??___flge+0+2)&0ffh,w
 11221  003ACA  119E               iorwf	(??___flge+0+3)&0ffh,w
 11222  003ACC  119F               	btfss	status,2
 11223  003ACE  A4D8               	goto	u3931
 11224  003AD0  EF6C  F01D         	goto	u3930
 11225  003AD4  EF6E  F01D         
 11226                           u3931:
 11227  003AD8                     	goto	l3897
 11228  003AD8  EF78  F01D         u3930:
 11229  003ADC                     	line	10
 11230                           	
 11231                           l3895:; BSR set to: 0
 11232  003ADC                     
 11233                           	movlw	low(0)
 11234  003ADC  0E00               	movwf	((___flge@ff2))&0ffh
 11235  003ADE  6F98               	movlw	high(0)
 11236  003AE0  0E00               	movwf	((___flge@ff2+1))&0ffh
 11237  003AE2  6F99               	movlw	low highword(0)
 11238  003AE4  0E00               	movwf	((___flge@ff2+2))&0ffh
 11239  003AE6  6F9A               	movlw	high highword(0)
 11240  003AE8  0E00               	movwf	((___flge@ff2+3))&0ffh
 11241  003AEA  6F9B               	goto	l3897
 11242  003AEC  EF78  F01D         	
 11243                           l684:; BSR set to: 0
 11244  003AF0                     
 11245                           	line	12
 11246                           	
 11247                           l3897:; BSR set to: 0
 11248  003AF0                     
 11249                           	
 11250                           	btfss	((___flge@ff1+3))&0ffh,(31)&7
 11251  003AF0  AF97               	goto	u3941
 11252  003AF2  EF7D  F01D         	goto	u3940
 11253  003AF6  EF7F  F01D         u3941:
 11254  003AFA                     	goto	l3901
 11255  003AFA  EF9E  F01D         u3940:
 11256  003AFE                     	line	13
 11257                           	
 11258                           l3899:; BSR set to: 0
 11259  003AFE                     
 11260                           	movff	(___flge@ff1),??___flge+0+0
 11261  003AFE  C094  F09C         	movff	(___flge@ff1+1),??___flge+0+0+1
 11262  003B02  C095  F09D         	movff	(___flge@ff1+2),??___flge+0+0+2
 11263  003B06  C096  F09E         	movff	(___flge@ff1+3),??___flge+0+0+3
 11264  003B0A  C097  F09F         	comf	(??___flge+0+0)&0ffh
 11265  003B0E  1F9C               	comf	(??___flge+0+1)&0ffh
 11266  003B10  1F9D               	comf	(??___flge+0+2)&0ffh
 11267  003B12  1F9E               	comf	(??___flge+0+3)&0ffh
 11268  003B14  1F9F               	incf	(??___flge+0+0)&0ffh
 11269  003B16  2B9C               	movlw	0
 11270  003B18  0E00               	addwfc	(??___flge+0+1)&0ffh
 11271  003B1A  239D               	addwfc	(??___flge+0+2)&0ffh
 11272  003B1C  239E               	addwfc	(??___flge+0+3)&0ffh
 11273  003B1E  239F               	movlw	0
 11274  003B20  0E00               	addwf	(??___flge+0+0)&0ffh,w
 11275  003B22  259C               	movwf	((___flge@ff1))&0ffh
 11276  003B24  6F94               	movlw	0
 11277  003B26  0E00               	addwfc	(??___flge+0+1)&0ffh,w
 11278  003B28  219D               	movwf	1+((___flge@ff1))&0ffh
 11279  003B2A  6F95               	
 11280                           	movlw	0
 11281  003B2C  0E00               	addwfc	(??___flge+0+2)&0ffh,w
 11282  003B2E  219E               	movwf	2+((___flge@ff1))&0ffh
 11283  003B30  6F96               	
 11284                           	movlw	080h
 11285  003B32  0E80               	addwfc	(??___flge+0+3)&0ffh,w
 11286  003B34  219F               	movwf	3+((___flge@ff1))&0ffh
 11287  003B36  6F97               	goto	l3901
 11288  003B38  EF9E  F01D         	
 11289                           l685:; BSR set to: 0
 11290  003B3C                     
 11291                           	line	14
 11292                           	
 11293                           l3901:; BSR set to: 0
 11294  003B3C                     
 11295                           	
 11296                           	btfss	((___flge@ff2+3))&0ffh,(31)&7
 11297  003B3C  AF9B               	goto	u3951
 11298  003B3E  EFA3  F01D         	goto	u3950
 11299  003B42  EFA5  F01D         u3951:
 11300  003B46                     	goto	l686
 11301  003B46  EFC2  F01D         u3950:
 11302  003B4A                     	line	15
 11303                           	
 11304                           l3903:; BSR set to: 0
 11305  003B4A                     
 11306                           	movff	(___flge@ff2),??___flge+0+0
 11307  003B4A  C098  F09C         	movff	(___flge@ff2+1),??___flge+0+0+1
 11308  003B4E  C099  F09D         	movff	(___flge@ff2+2),??___flge+0+0+2
 11309  003B52  C09A  F09E         	movff	(___flge@ff2+3),??___flge+0+0+3
 11310  003B56  C09B  F09F         	comf	(??___flge+0+0)&0ffh
 11311  003B5A  1F9C               	comf	(??___flge+0+1)&0ffh
 11312  003B5C  1F9D               	comf	(??___flge+0+2)&0ffh
 11313  003B5E  1F9E               	comf	(??___flge+0+3)&0ffh
 11314  003B60  1F9F               	incf	(??___flge+0+0)&0ffh
 11315  003B62  2B9C               	movlw	0
 11316  003B64  0E00               	addwfc	(??___flge+0+1)&0ffh
 11317  003B66  239D               	addwfc	(??___flge+0+2)&0ffh
 11318  003B68  239E               	addwfc	(??___flge+0+3)&0ffh
 11319  003B6A  239F               	movlw	0
 11320  003B6C  0E00               	addwf	(??___flge+0+0)&0ffh,w
 11321  003B6E  259C               	movwf	((___flge@ff2))&0ffh
 11322  003B70  6F98               	movlw	0
 11323  003B72  0E00               	addwfc	(??___flge+0+1)&0ffh,w
 11324  003B74  219D               	movwf	1+((___flge@ff2))&0ffh
 11325  003B76  6F99               	
 11326                           	movlw	0
 11327  003B78  0E00               	addwfc	(??___flge+0+2)&0ffh,w
 11328  003B7A  219E               	movwf	2+((___flge@ff2))&0ffh
 11329  003B7C  6F9A               	
 11330                           	movlw	080h
 11331  003B7E  0E80               	addwfc	(??___flge+0+3)&0ffh,w
 11332  003B80  219F               	movwf	3+((___flge@ff2))&0ffh
 11333  003B82  6F9B               	
 11334                           l686:; BSR set to: 0
 11335  003B84                     
 11336                           	line	16
 11337                           	movlw	0
 11338  003B84  0E00               	xorwf	((___flge@ff1))&0ffh
 11339  003B86  1B94               	movlw	0
 11340  003B88  0E00               	xorwf	((___flge@ff1+1))&0ffh
 11341  003B8A  1B95               	movlw	0
 11342  003B8C  0E00               	xorwf	((___flge@ff1+2))&0ffh
 11343  003B8E  1B96               	movlw	080h
 11344  003B90  0E80               	xorwf	((___flge@ff1+3))&0ffh
 11345  003B92  1B97               	line	17
 11346                           	movlw	0
 11347  003B94  0E00               	xorwf	((___flge@ff2))&0ffh
 11348  003B96  1B98               	movlw	0
 11349  003B98  0E00               	xorwf	((___flge@ff2+1))&0ffh
 11350  003B9A  1B99               	movlw	0
 11351  003B9C  0E00               	xorwf	((___flge@ff2+2))&0ffh
 11352  003B9E  1B9A               	movlw	080h
 11353  003BA0  0E80               	xorwf	((___flge@ff2+3))&0ffh
 11354  003BA2  1B9B               	line	18
 11355                           		movf	((___flge@ff2))&0ffh,w
 11356  003BA4  5198               	subwf	((___flge@ff1))&0ffh,w
 11357  003BA6  5D94               	movf	((___flge@ff2+1))&0ffh,w
 11358  003BA8  5199               	subwfb	((___flge@ff1+1))&0ffh,w
 11359  003BAA  5995               	movf	((___flge@ff2+2))&0ffh,w
 11360  003BAC  519A               	subwfb	((___flge@ff1+2))&0ffh,w
 11361  003BAE  5996               	movf	((___flge@ff2+3))&0ffh,w
 11362  003BB0  519B               	subwfb	((___flge@ff1+3))&0ffh,w
 11363  003BB2  5997               	btfsc	status,0
 11364  003BB4  B0D8               	goto	u3961
 11365  003BB6  EFDF  F01D         	goto	u3960
 11366  003BBA  EFE1  F01D         
 11367                           u3961:
 11368  003BBE                     	goto	l3907
 11369  003BBE  EFE4  F01D         u3960:
 11370  003BC2                     	
 11371                           l3905:; BSR set to: 0
 11372  003BC2                     
 11373                           	bcf	status,0
 11374  003BC2  90D8               	goto	l687
 11375  003BC4  EFE9  F01D         	
 11376                           l3053:; BSR set to: 0
 11377  003BC8                     
 11378                           	
 11379                           l3907:; BSR set to: 0
 11380  003BC8                     
 11381                           	bsf	status,0
 11382  003BC8  80D8               	goto	l687
 11383  003BCA  EFE9  F01D         	
 11384                           l3055:; BSR set to: 0
 11385  003BCE                     
 11386                           	goto	l687
 11387  003BCE  EFE9  F01D         	
 11388                           l3909:; BSR set to: 0
 11389  003BD2                     
 11390                           	line	19
 11391                           	
 11392                           l687:; BSR set to: 0
 11393  003BD2                     
 11394                           	return	;funcret
 11395  003BD2  0012               	opt stack 0
 11396                           GLOBAL	__end_of___flge
 11397                           	__end_of___flge:
 11398  003BD4                     	signat	___flge,8312
 11399                           	global	_setupPorts
 11400                           
 11401 ;; *************** function _setupPorts *****************
 11402 ;; Defined at:
 11403 ;;		line 148 in file "main.c"
 11404 ;; Parameters:    Size  Location     Type
 11405 ;;		None
 11406 ;; Auto vars:     Size  Location     Type
 11407 ;;		None
 11408 ;; Return value:  Size  Location     Type
 11409 ;;                  1    wreg      void 
 11410 ;; Registers used:
 11411 ;;		wreg, status,2
 11412 ;; Tracked objects:
 11413 ;;		On entry : 0/0
 11414 ;;		On exit  : 0/0
 11415 ;;		Unchanged: 0/0
 11416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 11417 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11418 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11420 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11421 ;;Total ram usage:        0 bytes
 11422 ;; Hardware stack levels used:    1
 11423 ;; Hardware stack levels required when called:    3
 11424 ;; This function calls:
 11425 ;;		Nothing
 11426 ;; This function is called by:
 11427 ;;		_main
 11428 ;; This function uses a non-reentrant model
 11429 ;;
 11430                           psect	text13,class=CODE,space=0,reloc=2,group=0
 11431                           	file	"main.c"
 11432                           	line	148
 11433                           global __ptext13
 11434                           __ptext13:
 11435  00483E                     psect	text13
 11436                           	file	"main.c"
 11437                           	line	148
 11438                           	global	__size_of_setupPorts
 11439                           	__size_of_setupPorts	equ	__end_of_setupPorts-_setupPorts
 11440  0000                     	
 11441                           _setupPorts:; BSR set to: 0
 11442  00483E                     
 11443                           ;incstack = 0
 11444                           	opt	stack 27
 11445                           	line	149
 11446                           	
 11447                           l4199:
 11448  00483E                     ;main.c: 149: ADCON0 = 0;
 11449                           	movlw	low(0)
 11450  00483E  0E00               	movwf	((c:4034)),c	;volatile
 11451  004840  6EC2               	line	150
 11452                           ;main.c: 150: ADCON1 = 0b00001100;
 11453                           	movlw	low(0Ch)
 11454  004842  0E0C               	movwf	((c:4033)),c	;volatile
 11455  004844  6EC1               	line	151
 11456                           	
 11457                           l4201:
 11458  004846                     ;main.c: 151: TRISB = 0xFF;
 11459                           	setf	((c:3987)),c	;volatile
 11460  004846  6893               	line	152
 11461                           ;main.c: 152: TRISC = 0x80;
 11462                           	movlw	low(080h)
 11463  004848  0E80               	movwf	((c:3988)),c	;volatile
 11464  00484A  6E94               	line	153
 11465                           	
 11466                           l4203:
 11467  00484C                     ;main.c: 153: TRISA = 0xFF;
 11468                           	setf	((c:3986)),c	;volatile
 11469  00484C  6892               	line	154
 11470                           ;main.c: 154: TRISD = 0x00;
 11471                           	movlw	low(0)
 11472  00484E  0E00               	movwf	((c:3989)),c	;volatile
 11473  004850  6E95               	line	155
 11474                           ;main.c: 155: TRISE = 0x00;
 11475                           	movlw	low(0)
 11476  004852  0E00               	movwf	((c:3990)),c	;volatile
 11477  004854  6E96               	line	156
 11478                           	
 11479                           l241:
 11480  004856                     	return	;funcret
 11481  004856  0012               	opt stack 0
 11482                           GLOBAL	__end_of_setupPorts
 11483                           	__end_of_setupPorts:
 11484  004858                     	signat	_setupPorts,89
 11485                           	global	_set_pwm1_percent
 11486                           
 11487 ;; *************** function _set_pwm1_percent *****************
 11488 ;; Defined at:
 11489 ;;		line 22 in file "my_pwm.c"
 11490 ;; Parameters:    Size  Location     Type
 11491 ;;  value           4   28[BANK0 ] float 
 11492 ;; Auto vars:     Size  Location     Type
 11493 ;;  tmp             4   32[BANK0 ] float 
 11494 ;;  raw_val         2   36[BANK0 ] int 
 11495 ;; Return value:  Size  Location     Type
 11496 ;;                  1    wreg      void 
 11497 ;; Registers used:
 11498 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 11499 ;; Tracked objects:
 11500 ;;		On entry : 0/0
 11501 ;;		On exit  : 0/0
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 11504 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11505 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11506 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11507 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11508 ;;Total ram usage:       10 bytes
 11509 ;; Hardware stack levels used:    1
 11510 ;; Hardware stack levels required when called:    4
 11511 ;; This function calls:
 11512 ;;		___fladd
 11513 ;;		___fldiv
 11514 ;;		___flmul
 11515 ;;		___fltol
 11516 ;;		_set_pwm1_raw
 11517 ;; This function is called by:
 11518 ;;		_main
 11519 ;; This function uses a non-reentrant model
 11520 ;;
 11521                           psect	text14,class=CODE,space=0,reloc=2,group=0
 11522                           	file	"my_pwm.c"
 11523                           	line	22
 11524                           global __ptext14
 11525                           __ptext14:
 11526  003FC4                     psect	text14
 11527                           	file	"my_pwm.c"
 11528                           	line	22
 11529                           	global	__size_of_set_pwm1_percent
 11530                           	__size_of_set_pwm1_percent	equ	__end_of_set_pwm1_percent-_set_pwm1_percent
 11531  0000                     	
 11532                           _set_pwm1_percent:
 11533  003FC4                     ;incstack = 0
 11534                           	opt	stack 26
 11535                           	line	24
 11536                           	
 11537                           l5375:
 11538  003FC4                     ;my_pwm.c: 24: float tmp = value*1023.0/100.0;
 11539                           	movlw	low(normalize32(1023.0000000000000))
 11540  003FC4  0E00               	movwf	((c:___flmul@a)),c
 11541  003FC6  6E30               	movlw	high(normalize32(1023.0000000000000))
 11542  003FC8  0EC0               	movwf	((c:___flmul@a+1)),c
 11543  003FCA  6E31               	movlw	low highword(normalize32(1023.0000000000000))
 11544  003FCC  0E7F               	movwf	((c:___flmul@a+2)),c
 11545  003FCE  6E32               	movlw	high highword(normalize32(1023.0000000000000))
 11546  003FD0  0E44               	movwf	((c:___flmul@a+3)),c
 11547  003FD2  6E33               	movff	(set_pwm1_percent@value),(c:___flmul@b)
 11548  003FD4  C09C  F02C         	movff	(set_pwm1_percent@value+1),(c:___flmul@b+1)
 11549  003FD8  C09D  F02D         	movff	(set_pwm1_percent@value+2),(c:___flmul@b+2)
 11550  003FDC  C09E  F02E         	movff	(set_pwm1_percent@value+3),(c:___flmul@b+3)
 11551  003FE0  C09F  F02F         	call	___flmul	;wreg free
 11552  003FE4  EC38  F013         	movff	0+?___flmul,(c:___fldiv@b)
 11553  003FE8  C02C  F045         	movff	1+?___flmul,(c:___fldiv@b+1)
 11554  003FEC  C02D  F046         	movff	2+?___flmul,(c:___fldiv@b+2)
 11555  003FF0  C02E  F047         	movff	3+?___flmul,(c:___fldiv@b+3)
 11556  003FF4  C02F  F048         	
 11557                           	movlw	low(normalize32(100.00000000000000))
 11558  003FF8  0E00               	movwf	((c:___fldiv@a)),c
 11559  003FFA  6E49               	movlw	high(normalize32(100.00000000000000))
 11560  003FFC  0E00               	movwf	((c:___fldiv@a+1)),c
 11561  003FFE  6E4A               	movlw	low highword(normalize32(100.00000000000000))
 11562  004000  0EC8               	movwf	((c:___fldiv@a+2)),c
 11563  004002  6E4B               	movlw	high highword(normalize32(100.00000000000000))
 11564  004004  0E42               	movwf	((c:___fldiv@a+3)),c
 11565  004006  6E4C               	call	___fldiv	;wreg free
 11566  004008  EC6F  F015         	movff	0+?___fldiv,(set_pwm1_percent@tmp)
 11567  00400C  C045  F0A0         	movff	1+?___fldiv,(set_pwm1_percent@tmp+1)
 11568  004010  C046  F0A1         	movff	2+?___fldiv,(set_pwm1_percent@tmp+2)
 11569  004014  C047  F0A2         	movff	3+?___fldiv,(set_pwm1_percent@tmp+3)
 11570  004018  C048  F0A3         	
 11571                           	line	25
 11572                           	
 11573                           l5377:
 11574  00401C                     ;my_pwm.c: 25: int raw_val = (int)(tmp +0.5);
 11575                           	movlw	low(normalize32(0.50000000000000000))
 11576  00401C  0E00               	movlb	0	; () banked
 11577  00401E  0100               	movwf	((___fladd@a))&0ffh
 11578  004020  6F84               	movlw	high(normalize32(0.50000000000000000))
 11579  004022  0E00               	movwf	((___fladd@a+1))&0ffh
 11580  004024  6F85               	movlw	low highword(normalize32(0.50000000000000000))
 11581  004026  0E00               	movwf	((___fladd@a+2))&0ffh
 11582  004028  6F86               	movlw	high highword(normalize32(0.50000000000000000))
 11583  00402A  0E3F               	movwf	((___fladd@a+3))&0ffh
 11584  00402C  6F87               	movff	(set_pwm1_percent@tmp),(___fladd@b)
 11585  00402E  C0A0  F080         	movff	(set_pwm1_percent@tmp+1),(___fladd@b+1)
 11586  004032  C0A1  F081         	movff	(set_pwm1_percent@tmp+2),(___fladd@b+2)
 11587  004036  C0A2  F082         	movff	(set_pwm1_percent@tmp+3),(___fladd@b+3)
 11588  00403A  C0A3  F083         	call	___fladd	;wreg free
 11589  00403E  EC26  F00E         	movff	0+?___fladd,(___fltol@f1)
 11590  004042  C080  F094         	movff	1+?___fladd,(___fltol@f1+1)
 11591  004046  C081  F095         	movff	2+?___fladd,(___fltol@f1+2)
 11592  00404A  C082  F096         	movff	3+?___fladd,(___fltol@f1+3)
 11593  00404E  C083  F097         	
 11594                           	call	___fltol	;wreg free
 11595  004052  ECEA  F01D         	movff	0+?___fltol,(set_pwm1_percent@raw_val)
 11596  004056  C094  F0A4         	movff	1+?___fltol,(set_pwm1_percent@raw_val+1)
 11597  00405A  C095  F0A5         	line	26
 11598                           	
 11599                           l5379:
 11600  00405E                     ;my_pwm.c: 26: if ( raw_val> 1023) raw_val = 1023;
 11601                           	movlb	0	; () banked
 11602  00405E  0100               	btfsc	((set_pwm1_percent@raw_val+1))&0ffh,7
 11603  004060  BFA5               	goto	u6061
 11604  004062  EF3A  F020         	movlw	4
 11605  004066  0E04               	subwf	 ((set_pwm1_percent@raw_val+1))&0ffh,w
 11606  004068  5DA5               	btfss	status,0
 11607  00406A  A0D8               	goto	u6061
 11608  00406C  EF3A  F020         	goto	u6060
 11609  004070  EF3C  F020         
 11610                           u6061:
 11611  004074                     	goto	l5383
 11612  004074  EF41  F020         u6060:
 11613  004078                     	
 11614                           l5381:; BSR set to: 0
 11615  004078                     
 11616                           	movlw	high(03FFh)
 11617  004078  0E03               	movwf	((set_pwm1_percent@raw_val+1))&0ffh
 11618  00407A  6FA5               	setf	((set_pwm1_percent@raw_val))&0ffh
 11619  00407C  69A4               	goto	l5383
 11620  00407E  EF41  F020         	
 11621                           l45:; BSR set to: 0
 11622  004082                     
 11623                           	line	27
 11624                           	
 11625                           l5383:; BSR set to: 0
 11626  004082                     
 11627                           ;my_pwm.c: 27: set_pwm1_raw(raw_val);
 11628                           	movff	(set_pwm1_percent@raw_val),(c:set_pwm1_raw@raw_value)
 11629  004082  C0A4  F02C         	movff	(set_pwm1_percent@raw_val+1),(c:set_pwm1_raw@raw_value+1)
 11630  004086  C0A5  F02D         	call	_set_pwm1_raw	;wreg free
 11631  00408A  ECCC  F023         	line	28
 11632                           	
 11633                           l46:
 11634  00408E                     	return	;funcret
 11635  00408E  0012               	opt stack 0
 11636                           GLOBAL	__end_of_set_pwm1_percent
 11637                           	__end_of_set_pwm1_percent:
 11638  004090                     	signat	_set_pwm1_percent,4217
 11639                           	global	_set_pwm1_raw
 11640                           
 11641 ;; *************** function _set_pwm1_raw *****************
 11642 ;; Defined at:
 11643 ;;		line 14 in file "my_pwm.c"
 11644 ;; Parameters:    Size  Location     Type
 11645 ;;  raw_value       2   43[COMRAM] unsigned int 
 11646 ;; Auto vars:     Size  Location     Type
 11647 ;;		None
 11648 ;; Return value:  Size  Location     Type
 11649 ;;                  1    wreg      void 
 11650 ;; Registers used:
 11651 ;;		wreg, status,2, status,0
 11652 ;; Tracked objects:
 11653 ;;		On entry : 0/0
 11654 ;;		On exit  : 0/0
 11655 ;;		Unchanged: 0/0
 11656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 11657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11660 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11661 ;;Total ram usage:        4 bytes
 11662 ;; Hardware stack levels used:    1
 11663 ;; Hardware stack levels required when called:    3
 11664 ;; This function calls:
 11665 ;;		Nothing
 11666 ;; This function is called by:
 11667 ;;		_set_pwm1_percent
 11668 ;;		_main
 11669 ;;		_set_pwm1_voltage
 11670 ;;		_set_pwm1_general
 11671 ;; This function uses a non-reentrant model
 11672 ;;
 11673                           psect	text15,class=CODE,space=0,reloc=2,group=0
 11674                           	line	14
 11675                           global __ptext15
 11676                           __ptext15:
 11677  004798                     psect	text15
 11678                           	file	"my_pwm.c"
 11679                           	line	14
 11680                           	global	__size_of_set_pwm1_raw
 11681                           	__size_of_set_pwm1_raw	equ	__end_of_set_pwm1_raw-_set_pwm1_raw
 11682  0000                     	
 11683                           _set_pwm1_raw:
 11684  004798                     ;incstack = 0
 11685                           	opt	stack 27
 11686                           	line	16
 11687                           	
 11688                           l3537:
 11689  004798                     ;my_pwm.c: 16: CCPR1L = (raw_value >> 2) & 0x00FF;
 11690                           	movff	(c:set_pwm1_raw@raw_value),??_set_pwm1_raw+0+0
 11691  004798  C02C  F02E         	movff	(c:set_pwm1_raw@raw_value+1),??_set_pwm1_raw+0+0+1
 11692  00479C  C02D  F02F         	bcf	status,0
 11693  0047A0  90D8               	rrcf	(??_set_pwm1_raw+0+1),c
 11694  0047A2  322F               	rrcf	(??_set_pwm1_raw+0+0),c
 11695  0047A4  322E               	bcf	status,0
 11696  0047A6  90D8               	rrcf	(??_set_pwm1_raw+0+1),c
 11697  0047A8  322F               	rrcf	(??_set_pwm1_raw+0+0),c
 11698  0047AA  322E               	movf	(??_set_pwm1_raw+0+0),c,w
 11699  0047AC  502E               	movwf	((c:4030)),c	;volatile
 11700  0047AE  6EBE               	line	17
 11701                           ;my_pwm.c: 17: CCP1CONbits.DC1B = raw_value & 0x0003;
 11702                           	movff	(c:set_pwm1_raw@raw_value),??_set_pwm1_raw+0+0
 11703  0047B0  C02C  F02E         	movlw	03h
 11704  0047B4  0E03               	andwf	(??_set_pwm1_raw+0+0),c
 11705  0047B6  162E               	swapf	(??_set_pwm1_raw+0+0),c
 11706  0047B8  3A2E               	movf	((c:4029)),c,w	;volatile
 11707  0047BA  50BD               	xorwf	(??_set_pwm1_raw+0+0),c,w
 11708  0047BC  182E               	andlw	not (((1<<2)-1)<<4)
 11709  0047BE  0BCF               	xorwf	(??_set_pwm1_raw+0+0),c,w
 11710  0047C0  182E               	movwf	((c:4029)),c	;volatile
 11711  0047C2  6EBD               	line	21
 11712                           	
 11713                           l42:
 11714  0047C4                     	return	;funcret
 11715  0047C4  0012               	opt stack 0
 11716                           GLOBAL	__end_of_set_pwm1_raw
 11717                           	__end_of_set_pwm1_raw:
 11718  0047C6                     	signat	_set_pwm1_raw,4217
 11719                           	global	___fltol
 11720                           
 11721 ;; *************** function ___fltol *****************
 11722 ;; Defined at:
 11723 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 11724 ;; Parameters:    Size  Location     Type
 11725 ;;  f1              4   20[BANK0 ] void 
 11726 ;; Auto vars:     Size  Location     Type
 11727 ;;  exp1            1   82[COMRAM] unsigned char 
 11728 ;;  sign1           1   81[COMRAM] unsigned char 
 11729 ;; Return value:  Size  Location     Type
 11730 ;;                  4   20[BANK0 ] long 
 11731 ;; Registers used:
 11732 ;;		wreg, status,2, status,0
 11733 ;; Tracked objects:
 11734 ;;		On entry : 0/0
 11735 ;;		On exit  : 0/0
 11736 ;;		Unchanged: 0/0
 11737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 11738 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11739 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11740 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11741 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 11742 ;;Total ram usage:       10 bytes
 11743 ;; Hardware stack levels used:    1
 11744 ;; Hardware stack levels required when called:    3
 11745 ;; This function calls:
 11746 ;;		Nothing
 11747 ;; This function is called by:
 11748 ;;		_set_pwm1_percent
 11749 ;;		_main
 11750 ;;		_sprintf
 11751 ;;		_set_pwm1_voltage
 11752 ;;		_set_pwm1_general
 11753 ;; This function uses a non-reentrant model
 11754 ;;
 11755                           psect	text16,class=CODE,space=0,reloc=2,group=1
 11756                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 11757                           	line	43
 11758                           global __ptext16
 11759                           __ptext16:
 11760  003BD4                     psect	text16
 11761                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\fltol.c"
 11762                           	line	43
 11763                           	global	__size_of___fltol
 11764                           	__size_of___fltol	equ	__end_of___fltol-___fltol
 11765  0000                     	
 11766                           ___fltol:
 11767  003BD4                     ;incstack = 0
 11768                           	opt	stack 26
 11769                           	line	47
 11770                           	
 11771                           l5323:
 11772  003BD4                     	movlb	0	; () banked
 11773  003BD4  0100               	rlcf	((___fltol@f1+2))&0ffh,w
 11774  003BD6  3596               	rlcf	((___fltol@f1+3))&0ffh,w
 11775  003BD8  3597               	movwf	((c:___fltol@exp1)),c
 11776  003BDA  6E53               	movf	((c:___fltol@exp1)),c,w
 11777  003BDC  5053               	btfss	status,2
 11778  003BDE  A4D8               	goto	u5991
 11779  003BE0  EFF4  F01D         	goto	u5990
 11780  003BE4  EFF6  F01D         u5991:
 11781  003BE8                     	goto	l5329
 11782  003BE8  EF02  F01E         u5990:
 11783  003BEC                     	line	48
 11784                           	
 11785                           l5325:; BSR set to: 0
 11786  003BEC                     
 11787                           	movlw	low(0)
 11788  003BEC  0E00               	movwf	((?___fltol))&0ffh
 11789  003BEE  6F94               	movlw	high(0)
 11790  003BF0  0E00               	movwf	((?___fltol+1))&0ffh
 11791  003BF2  6F95               	movlw	low highword(0)
 11792  003BF4  0E00               	movwf	((?___fltol+2))&0ffh
 11793  003BF6  6F96               	movlw	high highword(0)
 11794  003BF8  0E00               	movwf	((?___fltol+3))&0ffh
 11795  003BFA  6F97               	goto	l714
 11796  003BFC  EF93  F01E         	
 11797                           l5327:; BSR set to: 0
 11798  003C00                     
 11799                           	goto	l714
 11800  003C00  EF93  F01E         	
 11801                           l713:; BSR set to: 0
 11802  003C04                     
 11803                           	line	49
 11804                           	
 11805                           l5329:; BSR set to: 0
 11806  003C04                     
 11807                           	movff	(___fltol@f1),??___fltol+0+0
 11808  003C04  C094  F098         	movff	(___fltol@f1+1),??___fltol+0+0+1
 11809  003C08  C095  F099         	movff	(___fltol@f1+2),??___fltol+0+0+2
 11810  003C0C  C096  F09A         	movff	(___fltol@f1+3),??___fltol+0+0+3
 11811  003C10  C097  F09B         	movlw	01Fh+1
 11812  003C14  0E20               	goto	u6000
 11813  003C16  EF12  F01E         u6005:
 11814  003C1A                     	bcf	status,0
 11815  003C1A  90D8               	rrcf	(??___fltol+0+3)&0ffh
 11816  003C1C  339B               	rrcf	(??___fltol+0+2)&0ffh
 11817  003C1E  339A               	rrcf	(??___fltol+0+1)&0ffh
 11818  003C20  3399               	rrcf	(??___fltol+0+0)&0ffh
 11819  003C22  3398               u6000:
 11820  003C24                     	decfsz	wreg
 11821  003C24  2EE8               	goto	u6005
 11822  003C26  EF0D  F01E         	movf	(??___fltol+0+0)&0ffh,w
 11823  003C2A  5198               	movwf	((c:___fltol@sign1)),c
 11824  003C2C  6E52               	line	50
 11825                           	
 11826                           l5331:; BSR set to: 0
 11827  003C2E                     
 11828                           	bsf	(0+(23/8)+(___fltol@f1))&0ffh,(23)&7
 11829  003C2E  8F96               	line	51
 11830                           	
 11831                           l5333:; BSR set to: 0
 11832  003C30                     
 11833                           	movlw	0FFh
 11834  003C30  0EFF               	andwf	((___fltol@f1))&0ffh
 11835  003C32  1794               	movlw	0FFh
 11836  003C34  0EFF               	andwf	((___fltol@f1+1))&0ffh
 11837  003C36  1795               	movlw	0FFh
 11838  003C38  0EFF               	andwf	((___fltol@f1+2))&0ffh
 11839  003C3A  1796               	movlw	0
 11840  003C3C  0E00               	andwf	((___fltol@f1+3))&0ffh
 11841  003C3E  1797               	line	52
 11842                           	
 11843                           l5335:; BSR set to: 0
 11844  003C40                     
 11845                           	movlw	(096h)&0ffh
 11846  003C40  0E96               	subwf	((c:___fltol@exp1)),c
 11847  003C42  5E53               	line	53
 11848                           	
 11849                           l5337:; BSR set to: 0
 11850  003C44                     
 11851                           	btfsc	((c:___fltol@exp1)),c,7
 11852  003C44  BE53               	goto	u6010
 11853  003C46  EF29  F01E         	goto	u6011
 11854  003C4A  EF27  F01E         
 11855                           u6011:
 11856  003C4E                     	goto	l5349
 11857  003C4E  EF4D  F01E         u6010:
 11858  003C52                     	line	54
 11859                           	
 11860                           l5339:; BSR set to: 0
 11861  003C52                     
 11862                           		movf	((c:___fltol@exp1)),c,w
 11863  003C52  5053               	xorlw	80h
 11864  003C54  0A80               	addlw	-(80h^-23)
 11865  003C56  0F97               	btfsc	status,0
 11866  003C58  B0D8               	goto	u6021
 11867  003C5A  EF31  F01E         	goto	u6020
 11868  003C5E  EF33  F01E         
 11869                           u6021:
 11870  003C62                     	goto	l5345
 11871  003C62  EF41  F01E         u6020:
 11872  003C66                     	line	55
 11873                           	
 11874                           l5341:; BSR set to: 0
 11875  003C66                     
 11876                           	movlw	low(0)
 11877  003C66  0E00               	movwf	((?___fltol))&0ffh
 11878  003C68  6F94               	movlw	high(0)
 11879  003C6A  0E00               	movwf	((?___fltol+1))&0ffh
 11880  003C6C  6F95               	movlw	low highword(0)
 11881  003C6E  0E00               	movwf	((?___fltol+2))&0ffh
 11882  003C70  6F96               	movlw	high highword(0)
 11883  003C72  0E00               	movwf	((?___fltol+3))&0ffh
 11884  003C74  6F97               	goto	l714
 11885  003C76  EF93  F01E         	
 11886                           l5343:; BSR set to: 0
 11887  003C7A                     
 11888                           	goto	l714
 11889  003C7A  EF93  F01E         	
 11890                           l716:; BSR set to: 0
 11891  003C7E                     
 11892                           	goto	l5345
 11893  003C7E  EF41  F01E         	line	56
 11894                           	
 11895                           l717:; BSR set to: 0
 11896  003C82                     
 11897                           	line	57
 11898                           	
 11899                           l5345:; BSR set to: 0
 11900  003C82                     
 11901                           	bcf	status,0
 11902  003C82  90D8               	rrcf	((___fltol@f1+3))&0ffh
 11903  003C84  3397               	rrcf	((___fltol@f1+2))&0ffh
 11904  003C86  3396               	rrcf	((___fltol@f1+1))&0ffh
 11905  003C88  3395               	rrcf	((___fltol@f1))&0ffh
 11906  003C8A  3394               	line	58
 11907                           	
 11908                           l5347:; BSR set to: 0
 11909  003C8C                     
 11910                           	incfsz	((c:___fltol@exp1)),c
 11911  003C8C  3E53               	
 11912                           	goto	l5345
 11913  003C8E  EF41  F01E         	goto	l5359
 11914  003C92  EF77  F01E         	
 11915                           l718:; BSR set to: 0
 11916  003C96                     
 11917                           	line	59
 11918                           	goto	l5359
 11919  003C96  EF77  F01E         	
 11920                           l715:; BSR set to: 0
 11921  003C9A                     
 11922                           	line	60
 11923                           	
 11924                           l5349:; BSR set to: 0
 11925  003C9A                     
 11926                           		movlw	020h-1
 11927  003C9A  0E1F               	cpfsgt	((c:___fltol@exp1)),c
 11928  003C9C  6453               	goto	u6031
 11929  003C9E  EF53  F01E         	goto	u6030
 11930  003CA2  EF55  F01E         
 11931                           u6031:
 11932  003CA6                     	goto	l5357
 11933  003CA6  EF6B  F01E         u6030:
 11934  003CAA                     	line	61
 11935                           	
 11936                           l5351:; BSR set to: 0
 11937  003CAA                     
 11938                           	movlw	low(0)
 11939  003CAA  0E00               	movwf	((?___fltol))&0ffh
 11940  003CAC  6F94               	movlw	high(0)
 11941  003CAE  0E00               	movwf	((?___fltol+1))&0ffh
 11942  003CB0  6F95               	movlw	low highword(0)
 11943  003CB2  0E00               	movwf	((?___fltol+2))&0ffh
 11944  003CB4  6F96               	movlw	high highword(0)
 11945  003CB6  0E00               	movwf	((?___fltol+3))&0ffh
 11946  003CB8  6F97               	goto	l714
 11947  003CBA  EF93  F01E         	
 11948                           l5353:; BSR set to: 0
 11949  003CBE                     
 11950                           	goto	l714
 11951  003CBE  EF93  F01E         	
 11952                           l720:; BSR set to: 0
 11953  003CC2                     
 11954                           	line	62
 11955                           	goto	l5357
 11956  003CC2  EF6B  F01E         	
 11957                           l722:; BSR set to: 0
 11958  003CC6                     
 11959                           	line	63
 11960                           	
 11961                           l5355:; BSR set to: 0
 11962  003CC6                     
 11963                           	bcf	status,0
 11964  003CC6  90D8               	rlcf	((___fltol@f1))&0ffh
 11965  003CC8  3794               	rlcf	((___fltol@f1+1))&0ffh
 11966  003CCA  3795               	rlcf	((___fltol@f1+2))&0ffh
 11967  003CCC  3796               	rlcf	((___fltol@f1+3))&0ffh
 11968  003CCE  3797               	line	64
 11969                           	decf	((c:___fltol@exp1)),c
 11970  003CD0  0653               	goto	l5357
 11971  003CD2  EF6B  F01E         	line	65
 11972                           	
 11973                           l721:; BSR set to: 0
 11974  003CD6                     
 11975                           	line	62
 11976                           	
 11977                           l5357:; BSR set to: 0
 11978  003CD6                     
 11979                           	movf	((c:___fltol@exp1)),c,w
 11980  003CD6  5053               	btfss	status,2
 11981  003CD8  A4D8               	goto	u6041
 11982  003CDA  EF71  F01E         	goto	u6040
 11983  003CDE  EF73  F01E         u6041:
 11984  003CE2                     	goto	l5355
 11985  003CE2  EF63  F01E         u6040:
 11986  003CE6                     	goto	l5359
 11987  003CE6  EF77  F01E         	
 11988                           l723:; BSR set to: 0
 11989  003CEA                     
 11990                           	goto	l5359
 11991  003CEA  EF77  F01E         	line	66
 11992                           	
 11993                           l719:; BSR set to: 0
 11994  003CEE                     
 11995                           	line	67
 11996                           	
 11997                           l5359:; BSR set to: 0
 11998  003CEE                     
 11999                           	movf	((c:___fltol@sign1)),c,w
 12000  003CEE  5052               	btfsc	status,2
 12001  003CF0  B4D8               	goto	u6051
 12002  003CF2  EF7D  F01E         	goto	u6050
 12003  003CF6  EF7F  F01E         u6051:
 12004  003CFA                     	goto	l5363
 12005  003CFA  EF89  F01E         u6050:
 12006  003CFE                     	line	68
 12007                           	
 12008                           l5361:; BSR set to: 0
 12009  003CFE                     
 12010                           	comf	((___fltol@f1+3))&0ffh
 12011  003CFE  1F97               	comf	((___fltol@f1+2))&0ffh
 12012  003D00  1F96               	comf	((___fltol@f1+1))&0ffh
 12013  003D02  1F95               	negf	((___fltol@f1))&0ffh
 12014  003D04  6D94               	movlw	0
 12015  003D06  0E00               	addwfc	((___fltol@f1+1))&0ffh
 12016  003D08  2395               	addwfc	((___fltol@f1+2))&0ffh
 12017  003D0A  2396               	addwfc	((___fltol@f1+3))&0ffh
 12018  003D0C  2397               	goto	l5363
 12019  003D0E  EF89  F01E         	
 12020                           l724:; BSR set to: 0
 12021  003D12                     
 12022                           	line	69
 12023                           	
 12024                           l5363:; BSR set to: 0
 12025  003D12                     
 12026                           	movff	(___fltol@f1),(?___fltol)
 12027  003D12  C094  F094         	movff	(___fltol@f1+1),(?___fltol+1)
 12028  003D16  C095  F095         	movff	(___fltol@f1+2),(?___fltol+2)
 12029  003D1A  C096  F096         	movff	(___fltol@f1+3),(?___fltol+3)
 12030  003D1E  C097  F097         	goto	l714
 12031  003D22  EF93  F01E         	
 12032                           l5365:; BSR set to: 0
 12033  003D26                     
 12034                           	line	70
 12035                           	
 12036                           l714:; BSR set to: 0
 12037  003D26                     
 12038                           	return	;funcret
 12039  003D26  0012               	opt stack 0
 12040                           GLOBAL	__end_of___fltol
 12041                           	__end_of___fltol:
 12042  003D28                     	signat	___fltol,4220
 12043                           	global	___flmul
 12044                           
 12045 ;; *************** function ___flmul *****************
 12046 ;; Defined at:
 12047 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 12048 ;; Parameters:    Size  Location     Type
 12049 ;;  b               4   43[COMRAM] long 
 12050 ;;  a               4   47[COMRAM] long 
 12051 ;; Auto vars:     Size  Location     Type
 12052 ;;  prod            4   62[COMRAM] struct .
 12053 ;;  grs             4   56[COMRAM] unsigned long 
 12054 ;;  temp            2   66[COMRAM] struct .
 12055 ;;  bexp            1   61[COMRAM] unsigned char 
 12056 ;;  aexp            1   60[COMRAM] unsigned char 
 12057 ;;  sign            1   55[COMRAM] unsigned char 
 12058 ;; Return value:  Size  Location     Type
 12059 ;;                  4   43[COMRAM] unsigned char 
 12060 ;; Registers used:
 12061 ;;		wreg, status,2, status,0, prodl, prodh
 12062 ;; Tracked objects:
 12063 ;;		On entry : 0/0
 12064 ;;		On exit  : 0/0
 12065 ;;		Unchanged: 0/0
 12066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 12067 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 12068 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 12069 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 12070 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 12071 ;;Total ram usage:       25 bytes
 12072 ;; Hardware stack levels used:    1
 12073 ;; Hardware stack levels required when called:    3
 12074 ;; This function calls:
 12075 ;;		Nothing
 12076 ;; This function is called by:
 12077 ;;		_set_pwm1_percent
 12078 ;;		_main
 12079 ;;		_fround
 12080 ;;		_scale
 12081 ;;		_sprintf
 12082 ;;		_set_pwm1_voltage
 12083 ;;		_set_pwm1_general
 12084 ;; This function uses a non-reentrant model
 12085 ;;
 12086                           psect	text17,class=CODE,space=0,reloc=2,group=1
 12087                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 12088                           	line	8
 12089                           global __ptext17
 12090                           __ptext17:
 12091  002670                     psect	text17
 12092                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcmul.c"
 12093                           	line	8
 12094                           	global	__size_of___flmul
 12095                           	__size_of___flmul	equ	__end_of___flmul-___flmul
 12096  0000                     	
 12097                           ___flmul:; BSR set to: 0
 12098  002670                     
 12099                           ;incstack = 0
 12100                           	opt	stack 25
 12101                           	line	17
 12102                           	
 12103                           l3317:
 12104  002670                     	movf	(0+((c:___flmul@b)+03h)),c,w
 12105  002670  502F               	andlw	low(080h)
 12106  002672  0B80               	movwf	((c:___flmul@sign)),c
 12107  002674  6E38               	line	18
 12108                           	movf	(0+((c:___flmul@b)+03h)),c,w
 12109  002676  502F               	addwf	(0+((c:___flmul@b)+03h)),c,w
 12110  002678  242F               	movwf	((c:___flmul@bexp)),c
 12111  00267A  6E3E               	line	19
 12112                           	
 12113                           l3319:
 12114  00267C                     	
 12115                           	btfss	(0+((c:___flmul@b)+02h)),c,(7)&7
 12116  00267C  AE2E               	goto	u3121
 12117  00267E  EF43  F013         	goto	u3120
 12118  002682  EF45  F013         u3121:
 12119  002686                     	goto	l3323
 12120  002686  EF48  F013         u3120:
 12121  00268A                     	line	20
 12122                           	
 12123                           l3321:
 12124  00268A                     	bsf	(0+(0/8)+(c:___flmul@bexp)),c,(0)&7
 12125  00268A  803E               	goto	l3323
 12126  00268C  EF48  F013         	line	21
 12127                           	
 12128                           l1028:
 12129  002690                     	line	24
 12130                           	
 12131                           l3323:
 12132  002690                     	movf	((c:___flmul@bexp)),c,w
 12133  002690  503E               	btfsc	status,2
 12134  002692  B4D8               	goto	u3131
 12135  002694  EF4E  F013         	goto	u3130
 12136  002698  EF50  F013         u3131:
 12137  00269C                     	goto	l3331
 12138  00269C  EF65  F013         u3130:
 12139  0026A0                     	line	26
 12140                           	
 12141                           l3325:
 12142  0026A0                     		incf	((c:___flmul@bexp)),c,w
 12143  0026A0  283E               	btfss	status,2
 12144  0026A2  A4D8               	goto	u3141
 12145  0026A4  EF56  F013         	goto	u3140
 12146  0026A8  EF58  F013         
 12147                           u3141:
 12148  0026AC                     	goto	l3329
 12149  0026AC  EF62  F013         u3140:
 12150  0026B0                     	line	28
 12151                           	
 12152                           l3327:
 12153  0026B0                     	movlw	low(normalize32(0.0000000000000000))
 12154  0026B0  0E00               	movwf	((c:___flmul@b)),c
 12155  0026B2  6E2C               	movlw	high(normalize32(0.0000000000000000))
 12156  0026B4  0E00               	movwf	((c:___flmul@b+1)),c
 12157  0026B6  6E2D               	movlw	low highword(normalize32(0.0000000000000000))
 12158  0026B8  0E00               	movwf	((c:___flmul@b+2)),c
 12159  0026BA  6E2E               	movlw	high highword(normalize32(0.0000000000000000))
 12160  0026BC  0E00               	movwf	((c:___flmul@b+3)),c
 12161  0026BE  6E2F               	goto	l3329
 12162  0026C0  EF62  F013         	line	29
 12163                           	
 12164                           l1030:
 12165  0026C4                     	line	31
 12166                           	
 12167                           l3329:
 12168  0026C4                     	bsf	(0+(23/8)+(c:___flmul@b)),c,(23)&7
 12169  0026C4  8E2E               	line	33
 12170                           	goto	l3333
 12171  0026C6  EF6F  F013         	line	34
 12172                           	
 12173                           l1029:
 12174  0026CA                     	line	36
 12175                           	
 12176                           l3331:
 12177  0026CA                     	movlw	low(normalize32(0.0000000000000000))
 12178  0026CA  0E00               	movwf	((c:___flmul@b)),c
 12179  0026CC  6E2C               	movlw	high(normalize32(0.0000000000000000))
 12180  0026CE  0E00               	movwf	((c:___flmul@b+1)),c
 12181  0026D0  6E2D               	movlw	low highword(normalize32(0.0000000000000000))
 12182  0026D2  0E00               	movwf	((c:___flmul@b+2)),c
 12183  0026D4  6E2E               	movlw	high highword(normalize32(0.0000000000000000))
 12184  0026D6  0E00               	movwf	((c:___flmul@b+3)),c
 12185  0026D8  6E2F               	goto	l3333
 12186  0026DA  EF6F  F013         	line	37
 12187                           	
 12188                           l1031:
 12189  0026DE                     	line	39
 12190                           	
 12191                           l3333:
 12192  0026DE                     	movf	(0+((c:___flmul@a)+03h)),c,w
 12193  0026DE  5033               	andlw	low(080h)
 12194  0026E0  0B80               	xorwf	((c:___flmul@sign)),c
 12195  0026E2  1A38               	line	40
 12196                           	
 12197                           l3335:
 12198  0026E4                     	movf	(0+((c:___flmul@a)+03h)),c,w
 12199  0026E4  5033               	addwf	(0+((c:___flmul@a)+03h)),c,w
 12200  0026E6  2433               	movwf	((c:___flmul@aexp)),c
 12201  0026E8  6E3D               	line	41
 12202                           	
 12203                           l3337:
 12204  0026EA                     	
 12205                           	btfss	(0+((c:___flmul@a)+02h)),c,(7)&7
 12206  0026EA  AE32               	goto	u3151
 12207  0026EC  EF7A  F013         	goto	u3150
 12208  0026F0  EF7C  F013         u3151:
 12209  0026F4                     	goto	l3341
 12210  0026F4  EF7F  F013         u3150:
 12211  0026F8                     	line	42
 12212                           	
 12213                           l3339:
 12214  0026F8                     	bsf	(0+(0/8)+(c:___flmul@aexp)),c,(0)&7
 12215  0026F8  803D               	goto	l3341
 12216  0026FA  EF7F  F013         	line	43
 12217                           	
 12218                           l1032:
 12219  0026FE                     	line	45
 12220                           	
 12221                           l3341:
 12222  0026FE                     	movf	((c:___flmul@aexp)),c,w
 12223  0026FE  503D               	btfsc	status,2
 12224  002700  B4D8               	goto	u3161
 12225  002702  EF85  F013         	goto	u3160
 12226  002706  EF87  F013         u3161:
 12227  00270A                     	goto	l3349
 12228  00270A  EF9C  F013         u3160:
 12229  00270E                     	line	48
 12230                           	
 12231                           l3343:
 12232  00270E                     		incf	((c:___flmul@aexp)),c,w
 12233  00270E  283D               	btfss	status,2
 12234  002710  A4D8               	goto	u3171
 12235  002712  EF8D  F013         	goto	u3170
 12236  002716  EF8F  F013         
 12237                           u3171:
 12238  00271A                     	goto	l3347
 12239  00271A  EF99  F013         u3170:
 12240  00271E                     	line	50
 12241                           	
 12242                           l3345:
 12243  00271E                     	movlw	low(normalize32(0.0000000000000000))
 12244  00271E  0E00               	movwf	((c:___flmul@a)),c
 12245  002720  6E30               	movlw	high(normalize32(0.0000000000000000))
 12246  002722  0E00               	movwf	((c:___flmul@a+1)),c
 12247  002724  6E31               	movlw	low highword(normalize32(0.0000000000000000))
 12248  002726  0E00               	movwf	((c:___flmul@a+2)),c
 12249  002728  6E32               	movlw	high highword(normalize32(0.0000000000000000))
 12250  00272A  0E00               	movwf	((c:___flmul@a+3)),c
 12251  00272C  6E33               	goto	l3347
 12252  00272E  EF99  F013         	line	51
 12253                           	
 12254                           l1034:
 12255  002732                     	line	53
 12256                           	
 12257                           l3347:
 12258  002732                     	bsf	(0+(23/8)+(c:___flmul@a)),c,(23)&7
 12259  002732  8E32               	line	54
 12260                           	goto	l1035
 12261  002734  EFA4  F013         	line	55
 12262                           	
 12263                           l1033:
 12264  002738                     	line	57
 12265                           	
 12266                           l3349:
 12267  002738                     	movlw	low(normalize32(0.0000000000000000))
 12268  002738  0E00               	movwf	((c:___flmul@a)),c
 12269  00273A  6E30               	movlw	high(normalize32(0.0000000000000000))
 12270  00273C  0E00               	movwf	((c:___flmul@a+1)),c
 12271  00273E  6E31               	movlw	low highword(normalize32(0.0000000000000000))
 12272  002740  0E00               	movwf	((c:___flmul@a+2)),c
 12273  002742  6E32               	movlw	high highword(normalize32(0.0000000000000000))
 12274  002744  0E00               	movwf	((c:___flmul@a+3)),c
 12275  002746  6E33               	line	58
 12276                           	
 12277                           l1035:
 12278  002748                     	line	65
 12279                           	movf	((c:___flmul@aexp)),c,w
 12280  002748  503D               	btfsc	status,2
 12281  00274A  B4D8               	goto	u3181
 12282  00274C  EFAA  F013         	goto	u3180
 12283  002750  EFAC  F013         u3181:
 12284  002754                     	goto	l3353
 12285  002754  EFB6  F013         u3180:
 12286  002758                     	
 12287                           l3351:
 12288  002758                     	movf	((c:___flmul@bexp)),c,w
 12289  002758  503E               	btfss	status,2
 12290  00275A  A4D8               	goto	u3191
 12291  00275C  EFB2  F013         	goto	u3190
 12292  002760  EFB4  F013         u3191:
 12293  002764                     	goto	l3357
 12294  002764  EFC2  F013         u3190:
 12295  002768                     	goto	l3353
 12296  002768  EFB6  F013         	
 12297                           l1038:
 12298  00276C                     	line	66
 12299                           	
 12300                           l3353:
 12301  00276C                     	movlw	low(normalize32(0.0000000000000000))
 12302  00276C  0E00               	movwf	((c:?___flmul)),c
 12303  00276E  6E2C               	movlw	high(normalize32(0.0000000000000000))
 12304  002770  0E00               	movwf	((c:?___flmul+1)),c
 12305  002772  6E2D               	movlw	low highword(normalize32(0.0000000000000000))
 12306  002774  0E00               	movwf	((c:?___flmul+2)),c
 12307  002776  6E2E               	movlw	high highword(normalize32(0.0000000000000000))
 12308  002778  0E00               	movwf	((c:?___flmul+3)),c
 12309  00277A  6E2F               	goto	l1039
 12310  00277C  EF6E  F015         	
 12311                           l3355:
 12312  002780                     	goto	l1039
 12313  002780  EF6E  F015         	line	67
 12314                           	
 12315                           l1036:
 12316  002784                     	line	95
 12317                           	
 12318                           l3357:
 12319  002784                     	movf	(0+((c:___flmul@a)+02h)),c,w
 12320  002784  5032               	mulwf	((c:___flmul@b)),c
 12321  002786  022C               	movff	prodl,(c:___flmul@temp)
 12322  002788  CFF3 F043          	movff	prodh,(c:___flmul@temp+1)
 12323  00278C  CFF4 F044          	line	96
 12324                           	
 12325                           l3359:
 12326  002790                     	movf	((c:___flmul@temp)),c,w
 12327  002790  5043               	movwf	((c:___flmul@grs)),c
 12328  002792  6E39               	clrf	((c:___flmul@grs+1)),c
 12329  002794  6A3A               	clrf	((c:___flmul@grs+2)),c
 12330  002796  6A3B               	clrf	((c:___flmul@grs+3)),c
 12331  002798  6A3C               
 12332                           	line	97
 12333                           	
 12334                           l3361:
 12335  00279A                     	movf	(0+((c:___flmul@temp)+01h)),c,w
 12336  00279A  5044               	movwf	((c:___flmul@prod)),c
 12337  00279C  6E3F               	clrf	((c:___flmul@prod+1)),c
 12338  00279E  6A40               	clrf	((c:___flmul@prod+2)),c
 12339  0027A0  6A41               	clrf	((c:___flmul@prod+3)),c
 12340  0027A2  6A42               
 12341                           	line	98
 12342                           	movf	(0+((c:___flmul@a)+01h)),c,w
 12343  0027A4  5031               	mulwf	(0+((c:___flmul@b)+01h)),c
 12344  0027A6  022D               	movff	prodl,(c:___flmul@temp)
 12345  0027A8  CFF3 F043          	movff	prodh,(c:___flmul@temp+1)
 12346  0027AC  CFF4 F044          	line	99
 12347                           	
 12348                           l3363:
 12349  0027B0                     	movf	((c:___flmul@temp)),c,w
 12350  0027B0  5043               	addwf	((c:___flmul@grs)),c
 12351  0027B2  2639               	movlw	0
 12352  0027B4  0E00               	addwfc	((c:___flmul@grs+1)),c
 12353  0027B6  223A               	addwfc	((c:___flmul@grs+2)),c
 12354  0027B8  223B               	addwfc	((c:___flmul@grs+3)),c
 12355  0027BA  223C               	line	100
 12356                           	
 12357                           l3365:
 12358  0027BC                     	movf	(0+((c:___flmul@temp)+01h)),c,w
 12359  0027BC  5044               	addwf	((c:___flmul@prod)),c
 12360  0027BE  263F               	movlw	0
 12361  0027C0  0E00               	addwfc	((c:___flmul@prod+1)),c
 12362  0027C2  2240               	addwfc	((c:___flmul@prod+2)),c
 12363  0027C4  2241               	addwfc	((c:___flmul@prod+3)),c
 12364  0027C6  2242               	line	101
 12365                           	movf	((c:___flmul@a)),c,w
 12366  0027C8  5030               	mulwf	(0+((c:___flmul@b)+02h)),c
 12367  0027CA  022E               	movff	prodl,(c:___flmul@temp)
 12368  0027CC  CFF3 F043          	movff	prodh,(c:___flmul@temp+1)
 12369  0027D0  CFF4 F044          	line	102
 12370                           	
 12371                           l3367:
 12372  0027D4                     	movf	((c:___flmul@temp)),c,w
 12373  0027D4  5043               	addwf	((c:___flmul@grs)),c
 12374  0027D6  2639               	movlw	0
 12375  0027D8  0E00               	addwfc	((c:___flmul@grs+1)),c
 12376  0027DA  223A               	addwfc	((c:___flmul@grs+2)),c
 12377  0027DC  223B               	addwfc	((c:___flmul@grs+3)),c
 12378  0027DE  223C               	line	103
 12379                           	
 12380                           l3369:
 12381  0027E0                     	movf	(0+((c:___flmul@temp)+01h)),c,w
 12382  0027E0  5044               	addwf	((c:___flmul@prod)),c
 12383  0027E2  263F               	movlw	0
 12384  0027E4  0E00               	addwfc	((c:___flmul@prod+1)),c
 12385  0027E6  2240               	addwfc	((c:___flmul@prod+2)),c
 12386  0027E8  2241               	addwfc	((c:___flmul@prod+3)),c
 12387  0027EA  2242               	line	104
 12388                           	
 12389                           l3371:
 12390  0027EC                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
 12391  0027EC  C03B  F03C         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
 12392  0027F0  C03A  F03B         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
 12393  0027F4  C039  F03A         	clrf	((c:___flmul@grs)),c
 12394  0027F8  6A39               	line	105
 12395                           	
 12396                           l3373:
 12397  0027FA                     	movf	((c:___flmul@a)),c,w
 12398  0027FA  5030               	mulwf	(0+((c:___flmul@b)+01h)),c
 12399  0027FC  022D               	movff	prodl,(c:___flmul@temp)
 12400  0027FE  CFF3 F043          	movff	prodh,(c:___flmul@temp+1)
 12401  002802  CFF4 F044          	line	106
 12402                           	
 12403                           l3375:
 12404  002806                     	movf	((c:___flmul@temp)),c,w
 12405  002806  5043               	addwf	((c:___flmul@grs)),c
 12406  002808  2639               	movf	((c:___flmul@temp+1)),c,w
 12407  00280A  5044               	addwfc	((c:___flmul@grs+1)),c
 12408  00280C  223A               	movlw	0
 12409  00280E  0E00               	addwfc	((c:___flmul@grs+2)),c
 12410  002810  223B               	movlw	0
 12411  002812  0E00               	addwfc	((c:___flmul@grs+3)),c
 12412  002814  223C               
 12413                           	line	107
 12414                           	
 12415                           l3377:
 12416  002816                     	movf	(0+((c:___flmul@a)+01h)),c,w
 12417  002816  5031               	mulwf	((c:___flmul@b)),c
 12418  002818  022C               	movff	prodl,(c:___flmul@temp)
 12419  00281A  CFF3 F043          	movff	prodh,(c:___flmul@temp+1)
 12420  00281E  CFF4 F044          	line	108
 12421                           	
 12422                           l3379:
 12423  002822                     	movf	((c:___flmul@temp)),c,w
 12424  002822  5043               	addwf	((c:___flmul@grs)),c
 12425  002824  2639               	movf	((c:___flmul@temp+1)),c,w
 12426  002826  5044               	addwfc	((c:___flmul@grs+1)),c
 12427  002828  223A               	movlw	0
 12428  00282A  0E00               	addwfc	((c:___flmul@grs+2)),c
 12429  00282C  223B               	movlw	0
 12430  00282E  0E00               	addwfc	((c:___flmul@grs+3)),c
 12431  002830  223C               
 12432                           	line	109
 12433                           	
 12434                           l3381:
 12435  002832                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
 12436  002832  C03B  F03C         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
 12437  002836  C03A  F03B         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
 12438  00283A  C039  F03A         	clrf	((c:___flmul@grs)),c
 12439  00283E  6A39               	line	110
 12440                           	movf	((c:___flmul@a)),c,w
 12441  002840  5030               	mulwf	((c:___flmul@b)),c
 12442  002842  022C               	movff	prodl,(c:___flmul@temp)
 12443  002844  CFF3 F043          	movff	prodh,(c:___flmul@temp+1)
 12444  002848  CFF4 F044          	line	111
 12445                           	
 12446                           l3383:
 12447  00284C                     	movf	((c:___flmul@temp)),c,w
 12448  00284C  5043               	addwf	((c:___flmul@grs)),c
 12449  00284E  2639               	movf	((c:___flmul@temp+1)),c,w
 12450  002850  5044               	addwfc	((c:___flmul@grs+1)),c
 12451  002852  223A               	movlw	0
 12452  002854  0E00               	addwfc	((c:___flmul@grs+2)),c
 12453  002856  223B               	movlw	0
 12454  002858  0E00               	addwfc	((c:___flmul@grs+3)),c
 12455  00285A  223C               
 12456                           	line	112
 12457                           	
 12458                           l3385:
 12459  00285C                     	movf	(0+((c:___flmul@a)+02h)),c,w
 12460  00285C  5032               	mulwf	(0+((c:___flmul@b)+01h)),c
 12461  00285E  022D               	movff	prodl,(c:___flmul@temp)
 12462  002860  CFF3 F043          	movff	prodh,(c:___flmul@temp+1)
 12463  002864  CFF4 F044          	line	113
 12464                           	movf	((c:___flmul@temp)),c,w
 12465  002868  5043               	addwf	((c:___flmul@prod)),c
 12466  00286A  263F               	movf	((c:___flmul@temp+1)),c,w
 12467  00286C  5044               	addwfc	((c:___flmul@prod+1)),c
 12468  00286E  2240               	movlw	0
 12469  002870  0E00               	addwfc	((c:___flmul@prod+2)),c
 12470  002872  2241               	movlw	0
 12471  002874  0E00               	addwfc	((c:___flmul@prod+3)),c
 12472  002876  2242               
 12473                           	line	114
 12474                           	
 12475                           l3387:
 12476  002878                     	movf	(0+((c:___flmul@a)+01h)),c,w
 12477  002878  5031               	mulwf	(0+((c:___flmul@b)+02h)),c
 12478  00287A  022E               	movff	prodl,(c:___flmul@temp)
 12479  00287C  CFF3 F043          	movff	prodh,(c:___flmul@temp+1)
 12480  002880  CFF4 F044          	line	115
 12481                           	
 12482                           l3389:
 12483  002884                     	movf	((c:___flmul@temp)),c,w
 12484  002884  5043               	addwf	((c:___flmul@prod)),c
 12485  002886  263F               	movf	((c:___flmul@temp+1)),c,w
 12486  002888  5044               	addwfc	((c:___flmul@prod+1)),c
 12487  00288A  2240               	movlw	0
 12488  00288C  0E00               	addwfc	((c:___flmul@prod+2)),c
 12489  00288E  2241               	movlw	0
 12490  002890  0E00               	addwfc	((c:___flmul@prod+3)),c
 12491  002892  2242               
 12492                           	line	116
 12493                           	movf	(0+((c:___flmul@a)+02h)),c,w
 12494  002894  5032               	mulwf	(0+((c:___flmul@b)+02h)),c
 12495  002896  022E               	movff	prodl,(c:___flmul@temp)
 12496  002898  CFF3 F043          	movff	prodh,(c:___flmul@temp+1)
 12497  00289C  CFF4 F044          	line	117
 12498                           	
 12499                           l3391:
 12500  0028A0                     	movf	((c:___flmul@temp)),c,w
 12501  0028A0  5043               	movwf	(??___flmul+0+0)&0ffh,c
 12502  0028A2  6E34               	movf	((c:___flmul@temp+1)),c,w
 12503  0028A4  5044               	movwf	1+(??___flmul+0+0)&0ffh,c
 12504  0028A6  6E35               	
 12505                           	clrf	2+(??___flmul+0+0)&0ffh,c
 12506  0028A8  6A36               	
 12507                           	clrf	3+(??___flmul+0+0)&0ffh,c
 12508  0028AA  6A37               	movff	??___flmul+0+2,??___flmul+0+3
 12509  0028AC  C036  F037         	movff	??___flmul+0+1,??___flmul+0+2
 12510  0028B0  C035  F036         	movff	??___flmul+0+0,??___flmul+0+1
 12511  0028B4  C034  F035         	clrf	(??___flmul+0+0),c
 12512  0028B8  6A34               	movf	(??___flmul+0+0),c,w
 12513  0028BA  5034               	addwf	((c:___flmul@prod)),c
 12514  0028BC  263F               	movf	(??___flmul+0+1),c,w
 12515  0028BE  5035               	addwfc	((c:___flmul@prod+1)),c
 12516  0028C0  2240               	movf	(??___flmul+0+2),c,w
 12517  0028C2  5036               	addwfc	((c:___flmul@prod+2)),c
 12518  0028C4  2241               	movf	(??___flmul+0+3),c,w
 12519  0028C6  5037               	addwfc	((c:___flmul@prod+3)),c
 12520  0028C8  2242               
 12521                           	line	145
 12522                           	
 12523                           l3393:
 12524  0028CA                     	movff	(c:___flmul@grs),??___flmul+0+0
 12525  0028CA  C039  F034         	movff	(c:___flmul@grs+1),??___flmul+0+0+1
 12526  0028CE  C03A  F035         	movff	(c:___flmul@grs+2),??___flmul+0+0+2
 12527  0028D2  C03B  F036         	movff	(c:___flmul@grs+3),??___flmul+0+0+3
 12528  0028D6  C03C  F037         	movlw	018h+1
 12529  0028DA  0E19               	goto	u3200
 12530  0028DC  EF75  F014         u3205:
 12531  0028E0                     	bcf	status,0
 12532  0028E0  90D8               	rrcf	(??___flmul+0+3),c
 12533  0028E2  3237               	rrcf	(??___flmul+0+2),c
 12534  0028E4  3236               	rrcf	(??___flmul+0+1),c
 12535  0028E6  3235               	rrcf	(??___flmul+0+0),c
 12536  0028E8  3234               u3200:
 12537  0028EA                     	decfsz	wreg
 12538  0028EA  2EE8               	goto	u3205
 12539  0028EC  EF70  F014         	movf	(??___flmul+0+0),c,w
 12540  0028F0  5034               	addwf	((c:___flmul@prod)),c
 12541  0028F2  263F               	movf	(??___flmul+0+1),c,w
 12542  0028F4  5035               	addwfc	((c:___flmul@prod+1)),c
 12543  0028F6  2240               	movf	(??___flmul+0+2),c,w
 12544  0028F8  5036               	addwfc	((c:___flmul@prod+2)),c
 12545  0028FA  2241               	movf	(??___flmul+0+3),c,w
 12546  0028FC  5037               	addwfc	((c:___flmul@prod+3)),c
 12547  0028FE  2242               
 12548                           	line	146
 12549                           	
 12550                           l3395:
 12551  002900                     	movff	(c:___flmul@grs+2),(c:___flmul@grs+3)
 12552  002900  C03B  F03C         	movff	(c:___flmul@grs+1),(c:___flmul@grs+2)
 12553  002904  C03A  F03B         	movff	(c:___flmul@grs),(c:___flmul@grs+1)
 12554  002908  C039  F03A         	clrf	((c:___flmul@grs)),c
 12555  00290C  6A39               	line	149
 12556                           	
 12557                           l3397:
 12558  00290E                     	movf	((c:___flmul@aexp)),c,w
 12559  00290E  503D               	movff	(c:___flmul@bexp),??___flmul+0+0
 12560  002910  C03E  F034         	clrf	(??___flmul+0+0+1)&0ffh,c
 12561  002914  6A35               	addwf	(??___flmul+0+0),c
 12562  002916  2634               	movlw	0
 12563  002918  0E00               	addwfc	(??___flmul+0+1),c
 12564  00291A  2235               	movlw	low(-126)
 12565  00291C  0E82               	addwf	(??___flmul+0+0),c,w
 12566  00291E  2434               	movwf	((c:___flmul@temp)),c
 12567  002920  6E43               	movlw	high(-126)
 12568  002922  0EFF               	addwfc	(??___flmul+0+1),c,w
 12569  002924  2035               	movwf	1+((c:___flmul@temp)),c
 12570  002926  6E44               	line	152
 12571                           	goto	l3405
 12572  002928  EFAD  F014         	
 12573                           l1041:
 12574  00292C                     	line	153
 12575                           	
 12576                           l3399:
 12577  00292C                     	bcf	status,0
 12578  00292C  90D8               	rlcf	((c:___flmul@prod)),c
 12579  00292E  363F               	rlcf	((c:___flmul@prod+1)),c
 12580  002930  3640               	rlcf	((c:___flmul@prod+2)),c
 12581  002932  3641               	rlcf	((c:___flmul@prod+3)),c
 12582  002934  3642               	line	154
 12583                           	
 12584                           l3401:
 12585  002936                     	
 12586                           	btfss	((c:___flmul@grs+3)),c,(31)&7
 12587  002936  AE3C               	goto	u3211
 12588  002938  EFA0  F014         	goto	u3210
 12589  00293C  EFA2  F014         u3211:
 12590  002940                     	goto	l1042
 12591  002940  EFA3  F014         u3210:
 12592  002944                     	line	155
 12593                           	
 12594                           l3403:
 12595  002944                     	bsf	(0+(0/8)+(c:___flmul@prod)),c,(0)&7
 12596  002944  803F               	line	156
 12597                           	
 12598                           l1042:
 12599  002946                     	line	157
 12600                           	bcf	status,0
 12601  002946  90D8               	rlcf	((c:___flmul@grs)),c
 12602  002948  3639               	rlcf	((c:___flmul@grs+1)),c
 12603  00294A  363A               	rlcf	((c:___flmul@grs+2)),c
 12604  00294C  363B               	rlcf	((c:___flmul@grs+3)),c
 12605  00294E  363C               	line	158
 12606                           	decf	((c:___flmul@temp)),c
 12607  002950  0643               	btfss	status,0
 12608  002952  A0D8               	decf	((c:___flmul@temp+1)),c
 12609  002954  0644               	goto	l3405
 12610  002956  EFAD  F014         	line	159
 12611                           	
 12612                           l1040:
 12613  00295A                     	line	152
 12614                           	
 12615                           l3405:
 12616  00295A                     	
 12617                           	btfss	((c:___flmul@prod+2)),c,(23)&7
 12618  00295A  AE41               	goto	u3221
 12619  00295C  EFB2  F014         	goto	u3220
 12620  002960  EFB4  F014         u3221:
 12621  002964                     	goto	l3399
 12622  002964  EF96  F014         u3220:
 12623  002968                     	goto	l3407
 12624  002968  EFB6  F014         	
 12625                           l1043:
 12626  00296C                     	line	163
 12627                           	
 12628                           l3407:
 12629  00296C                     	movlw	low(0)
 12630  00296C  0E00               	movwf	((c:___flmul@aexp)),c
 12631  00296E  6E3D               	line	164
 12632                           	
 12633                           l3409:
 12634  002970                     	
 12635                           	btfss	((c:___flmul@grs+3)),c,(31)&7
 12636  002970  AE3C               	goto	u3231
 12637  002972  EFBD  F014         	goto	u3230
 12638  002976  EFBF  F014         u3231:
 12639  00297A                     	goto	l1044
 12640  00297A  EFE7  F014         u3230:
 12641  00297E                     	line	165
 12642                           	
 12643                           l3411:
 12644  00297E                     	movlw	0FFh
 12645  00297E  0EFF               	andwf	((c:___flmul@grs)),c,w
 12646  002980  1439               	movwf	(??___flmul+0+0)&0ffh,c
 12647  002982  6E34               	movlw	0FFh
 12648  002984  0EFF               	andwf	((c:___flmul@grs+1)),c,w
 12649  002986  143A               	movwf	1+(??___flmul+0+0)&0ffh,c
 12650  002988  6E35               	
 12651                           	movlw	0FFh
 12652  00298A  0EFF               	andwf	((c:___flmul@grs+2)),c,w
 12653  00298C  143B               	movwf	2+(??___flmul+0+0)&0ffh,c
 12654  00298E  6E36               	
 12655                           	movlw	07Fh
 12656  002990  0E7F               	andwf	((c:___flmul@grs+3)),c,w
 12657  002992  143C               	movwf	3+(??___flmul+0+0)&0ffh,c
 12658  002994  6E37               	movf	(??___flmul+0+0),c,w
 12659  002996  5034               iorwf	(??___flmul+0+1),c,w
 12660  002998  1035               iorwf	(??___flmul+0+2),c,w
 12661  00299A  1036               iorwf	(??___flmul+0+3),c,w
 12662  00299C  1037               	btfsc	status,2
 12663  00299E  B4D8               	goto	u3241
 12664  0029A0  EFD4  F014         	goto	u3240
 12665  0029A4  EFD6  F014         
 12666                           u3241:
 12667  0029A8                     	goto	l1045
 12668  0029A8  EFDA  F014         u3240:
 12669  0029AC                     	line	166
 12670                           	
 12671                           l3413:
 12672  0029AC                     	movlw	low(01h)
 12673  0029AC  0E01               	movwf	((c:___flmul@aexp)),c
 12674  0029AE  6E3D               	line	167
 12675                           	goto	l1044
 12676  0029B0  EFE7  F014         	line	168
 12677                           	
 12678                           l1045:
 12679  0029B4                     	line	169
 12680                           	
 12681                           	btfss	((c:___flmul@prod)),c,(0)&7
 12682  0029B4  A03F               	goto	u3251
 12683  0029B6  EFDF  F014         	goto	u3250
 12684  0029BA  EFE1  F014         u3251:
 12685  0029BE                     	goto	l1044
 12686  0029BE  EFE7  F014         u3250:
 12687  0029C2                     	line	170
 12688                           	
 12689                           l3415:
 12690  0029C2                     	movlw	low(01h)
 12691  0029C2  0E01               	movwf	((c:___flmul@aexp)),c
 12692  0029C4  6E3D               	goto	l1044
 12693  0029C6  EFE7  F014         	line	171
 12694                           	
 12695                           l1047:
 12696  0029CA                     	goto	l1044
 12697  0029CA  EFE7  F014         	line	172
 12698                           	
 12699                           l1046:
 12700  0029CE                     	line	173
 12701                           	
 12702                           l1044:
 12703  0029CE                     	line	174
 12704                           	movf	((c:___flmul@aexp)),c,w
 12705  0029CE  503D               	btfsc	status,2
 12706  0029D0  B4D8               	goto	u3261
 12707  0029D2  EFED  F014         	goto	u3260
 12708  0029D6  EFEF  F014         u3261:
 12709  0029DA                     	goto	l3425
 12710  0029DA  EF17  F015         u3260:
 12711  0029DE                     	line	175
 12712                           	
 12713                           l3417:
 12714  0029DE                     	movlw	low(01h)
 12715  0029DE  0E01               	addwf	((c:___flmul@prod)),c
 12716  0029E0  263F               	movlw	0
 12717  0029E2  0E00               	addwfc	((c:___flmul@prod+1)),c
 12718  0029E4  2240               	addwfc	((c:___flmul@prod+2)),c
 12719  0029E6  2241               	addwfc	((c:___flmul@prod+3)),c
 12720  0029E8  2242               	line	176
 12721                           	
 12722                           l3419:
 12723  0029EA                     	
 12724                           	btfss	((c:___flmul@prod+3)),c,(24)&7
 12725  0029EA  A042               	goto	u3271
 12726  0029EC  EFFA  F014         	goto	u3270
 12727  0029F0  EFFC  F014         u3271:
 12728  0029F4                     	goto	l3425
 12729  0029F4  EF17  F015         u3270:
 12730  0029F8                     	line	177
 12731                           	
 12732                           l3421:
 12733  0029F8                     	movff	(c:___flmul@prod),??___flmul+0+0
 12734  0029F8  C03F  F034         	movff	(c:___flmul@prod+1),??___flmul+0+0+1
 12735  0029FC  C040  F035         	movff	(c:___flmul@prod+2),??___flmul+0+0+2
 12736  002A00  C041  F036         	movff	(c:___flmul@prod+3),??___flmul+0+0+3
 12737  002A04  C042  F037         	rlcf	(??___flmul+0+3),c,w
 12738  002A08  3437               	rrcf	(??___flmul+0+3),c
 12739  002A0A  3237               	rrcf	(??___flmul+0+2),c
 12740  002A0C  3236               	rrcf	(??___flmul+0+1),c
 12741  002A0E  3235               	rrcf	(??___flmul+0+0),c
 12742  002A10  3234               	movff	??___flmul+0+0,(c:___flmul@prod)
 12743  002A12  C034  F03F         	movff	??___flmul+0+1,(c:___flmul@prod+1)
 12744  002A16  C035  F040         	movff	??___flmul+0+2,(c:___flmul@prod+2)
 12745  002A1A  C036  F041         	movff	??___flmul+0+3,(c:___flmul@prod+3)
 12746  002A1E  C037  F042         	line	178
 12747                           	
 12748                           l3423:
 12749  002A22                     	infsnz	((c:___flmul@temp)),c
 12750  002A22  4A43               	incf	((c:___flmul@temp+1)),c
 12751  002A24  2A44               	goto	l3425
 12752  002A26  EF17  F015         	line	179
 12753                           	
 12754                           l1049:
 12755  002A2A                     	goto	l3425
 12756  002A2A  EF17  F015         	line	180
 12757                           	
 12758                           l1048:
 12759  002A2E                     	line	183
 12760                           	
 12761                           l3425:
 12762  002A2E                     	btfsc	((c:___flmul@temp+1)),c,7
 12763  002A2E  BE44               	goto	u3281
 12764  002A30  EF22  F015         	movf	((c:___flmul@temp+1)),c,w
 12765  002A34  5044               	bnz	u3280
 12766  002A36  E108               	incf	((c:___flmul@temp)),c,w
 12767  002A38  2843               	btfss	status,0
 12768  002A3A  A0D8               	goto	u3281
 12769  002A3C  EF22  F015         	goto	u3280
 12770  002A40  EF24  F015         
 12771                           u3281:
 12772  002A44                     	goto	l3429
 12773  002A44  EF2E  F015         u3280:
 12774  002A48                     	line	184
 12775                           	
 12776                           l3427:
 12777  002A48                     	movlw	low(07F800000h)
 12778  002A48  0E00               	movwf	((c:___flmul@prod)),c
 12779  002A4A  6E3F               	movlw	high(07F800000h)
 12780  002A4C  0E00               	movwf	((c:___flmul@prod+1)),c
 12781  002A4E  6E40               	movlw	low highword(07F800000h)
 12782  002A50  0E80               	movwf	((c:___flmul@prod+2)),c
 12783  002A52  6E41               	movlw	high highword(07F800000h)
 12784  002A54  0E7F               	movwf	((c:___flmul@prod+3)),c
 12785  002A56  6E42               	line	185
 12786                           	goto	l3441
 12787  002A58  EF62  F015         	line	187
 12788                           	
 12789                           l1050:
 12790  002A5C                     	
 12791                           l3429:
 12792  002A5C                     	btfsc	((c:___flmul@temp+1)),c,7
 12793  002A5C  BE44               	goto	u3290
 12794  002A5E  EF3B  F015         	movf	((c:___flmul@temp+1)),c,w
 12795  002A62  5044               	bnz	u3291
 12796  002A64  E106               	decf	((c:___flmul@temp)),c,w
 12797  002A66  0443               	btfsc	status,0
 12798  002A68  B0D8               	goto	u3291
 12799  002A6A  EF39  F015         	goto	u3290
 12800  002A6E  EF3B  F015         
 12801                           u3291:
 12802  002A72                     	goto	l1052
 12803  002A72  EF47  F015         u3290:
 12804  002A76                     	line	188
 12805                           	
 12806                           l3431:
 12807  002A76                     	movlw	low(0)
 12808  002A76  0E00               	movwf	((c:___flmul@prod)),c
 12809  002A78  6E3F               	movlw	high(0)
 12810  002A7A  0E00               	movwf	((c:___flmul@prod+1)),c
 12811  002A7C  6E40               	movlw	low highword(0)
 12812  002A7E  0E00               	movwf	((c:___flmul@prod+2)),c
 12813  002A80  6E41               	movlw	high highword(0)
 12814  002A82  0E00               	movwf	((c:___flmul@prod+3)),c
 12815  002A84  6E42               	line	190
 12816                           	movlw	low(0)
 12817  002A86  0E00               	movwf	((c:___flmul@sign)),c
 12818  002A88  6E38               	line	191
 12819                           	goto	l3441
 12820  002A8A  EF62  F015         	line	192
 12821                           	
 12822                           l1052:
 12823  002A8E                     	line	194
 12824                           	movff	(c:___flmul@temp),(c:___flmul@bexp)
 12825  002A8E  C043  F03E         	line	195
 12826                           	
 12827                           l3433:
 12828  002A92                     	movlw	0FFh
 12829  002A92  0EFF               	andwf	((c:___flmul@prod)),c
 12830  002A94  163F               	movlw	0FFh
 12831  002A96  0EFF               	andwf	((c:___flmul@prod+1)),c
 12832  002A98  1640               	movlw	07Fh
 12833  002A9A  0E7F               	andwf	((c:___flmul@prod+2)),c
 12834  002A9C  1641               	movlw	0
 12835  002A9E  0E00               	andwf	((c:___flmul@prod+3)),c
 12836  002AA0  1642               	line	196
 12837                           	
 12838                           l3435:
 12839  002AA2                     	
 12840                           	btfss	((c:___flmul@bexp)),c,(0)&7
 12841  002AA2  A03E               	goto	u3301
 12842  002AA4  EF56  F015         	goto	u3300
 12843  002AA8  EF58  F015         u3301:
 12844  002AAC                     	goto	l3439
 12845  002AAC  EF5B  F015         u3300:
 12846  002AB0                     	line	197
 12847                           	
 12848                           l3437:
 12849  002AB0                     	bsf	(0+(7/8)+0+((c:___flmul@prod)+02h)),c,(7)&7
 12850  002AB0  8E41               	goto	l3439
 12851  002AB2  EF5B  F015         	line	198
 12852                           	
 12853                           l1054:
 12854  002AB6                     	line	199
 12855                           	
 12856                           l3439:
 12857  002AB6                     	bcf	status,0
 12858  002AB6  90D8               	rrcf	((c:___flmul@bexp)),c,w
 12859  002AB8  303E               	movwf	(0+((c:___flmul@prod)+03h)),c
 12860  002ABA  6E42               	goto	l3441
 12861  002ABC  EF62  F015         	line	200
 12862                           	
 12863                           l1053:
 12864  002AC0                     	goto	l3441
 12865  002AC0  EF62  F015         	
 12866                           l1051:
 12867  002AC4                     	line	201
 12868                           	
 12869                           l3441:
 12870  002AC4                     	movf	((c:___flmul@sign)),c,w
 12871  002AC4  5038               	iorwf	(0+((c:___flmul@prod)+03h)),c
 12872  002AC6  1242               	line	203
 12873                           	
 12874                           l3443:
 12875  002AC8                     	movff	(c:___flmul@prod),(c:?___flmul)
 12876  002AC8  C03F  F02C         	movff	(c:___flmul@prod+1),(c:?___flmul+1)
 12877  002ACC  C040  F02D         	movff	(c:___flmul@prod+2),(c:?___flmul+2)
 12878  002AD0  C041  F02E         	movff	(c:___flmul@prod+3),(c:?___flmul+3)
 12879  002AD4  C042  F02F         	goto	l1039
 12880  002AD8  EF6E  F015         	
 12881                           l3445:
 12882  002ADC                     	line	205
 12883                           	
 12884                           l1039:
 12885  002ADC                     	return	;funcret
 12886  002ADC  0012               	opt stack 0
 12887                           GLOBAL	__end_of___flmul
 12888                           	__end_of___flmul:
 12889  002ADE                     	signat	___flmul,8316
 12890                           	global	___fladd
 12891                           
 12892 ;; *************** function ___fladd *****************
 12893 ;; Defined at:
 12894 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 12895 ;; Parameters:    Size  Location     Type
 12896 ;;  b               4    0[BANK0 ] unsigned char 
 12897 ;;  a               4    4[BANK0 ] unsigned char 
 12898 ;; Auto vars:     Size  Location     Type
 12899 ;;  grs             1   19[BANK0 ] unsigned char 
 12900 ;;  bexp            1   18[BANK0 ] unsigned char 
 12901 ;;  aexp            1   17[BANK0 ] unsigned char 
 12902 ;;  signs           1   16[BANK0 ] unsigned char 
 12903 ;; Return value:  Size  Location     Type
 12904 ;;                  4    0[BANK0 ] unsigned char 
 12905 ;; Registers used:
 12906 ;;		wreg, status,2, status,0
 12907 ;; Tracked objects:
 12908 ;;		On entry : 0/0
 12909 ;;		On exit  : 0/0
 12910 ;;		Unchanged: 0/0
 12911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 12912 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 12913 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 12914 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 12915 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 12916 ;;Total ram usage:       20 bytes
 12917 ;; Hardware stack levels used:    1
 12918 ;; Hardware stack levels required when called:    3
 12919 ;; This function calls:
 12920 ;;		Nothing
 12921 ;; This function is called by:
 12922 ;;		_set_pwm1_percent
 12923 ;;		_main
 12924 ;;		_sprintf
 12925 ;;		___flsub
 12926 ;;		_set_pwm1_voltage
 12927 ;;		_set_pwm1_general
 12928 ;; This function uses a non-reentrant model
 12929 ;;
 12930                           psect	text18,class=CODE,space=0,reloc=2,group=1
 12931                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 12932                           	line	10
 12933                           global __ptext18
 12934                           __ptext18:
 12935  001C4C                     psect	text18
 12936                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcadd.c"
 12937                           	line	10
 12938                           	global	__size_of___fladd
 12939                           	__size_of___fladd	equ	__end_of___fladd-___fladd
 12940  0000                     	
 12941                           ___fladd:
 12942  001C4C                     ;incstack = 0
 12943                           	opt	stack 25
 12944                           	line	21
 12945                           	
 12946                           l4979:
 12947  001C4C                     	movlb	0	; () banked
 12948  001C4C  0100               	movf	(0+(___fladd@b+03h))&0ffh,w
 12949  001C4E  5183               	andlw	low(080h)
 12950  001C50  0B80               	movwf	((___fladd@signs))&0ffh
 12951  001C52  6F90               	line	22
 12952                           	movf	(0+(___fladd@b+03h))&0ffh,w
 12953  001C54  5183               	addwf	(0+(___fladd@b+03h))&0ffh,w
 12954  001C56  2583               	movwf	((___fladd@bexp))&0ffh
 12955  001C58  6F92               	line	23
 12956                           	
 12957                           l4981:; BSR set to: 0
 12958  001C5A                     
 12959                           	
 12960                           	btfss	(0+(___fladd@b+02h))&0ffh,(7)&7
 12961  001C5A  AF82               	goto	u5371
 12962  001C5C  EF32  F00E         	goto	u5370
 12963  001C60  EF34  F00E         u5371:
 12964  001C64                     	goto	l4985
 12965  001C64  EF37  F00E         u5370:
 12966  001C68                     	line	24
 12967                           	
 12968                           l4983:; BSR set to: 0
 12969  001C68                     
 12970                           	bsf	(0+(0/8)+(___fladd@bexp))&0ffh,(0)&7
 12971  001C68  8192               	goto	l4985
 12972  001C6A  EF37  F00E         	line	25
 12973                           	
 12974                           l937:; BSR set to: 0
 12975  001C6E                     
 12976                           	line	28
 12977                           	
 12978                           l4985:; BSR set to: 0
 12979  001C6E                     
 12980                           	movf	((___fladd@bexp))&0ffh,w
 12981  001C6E  5192               	btfsc	status,2
 12982  001C70  B4D8               	goto	u5381
 12983  001C72  EF3D  F00E         	goto	u5380
 12984  001C76  EF3F  F00E         u5381:
 12985  001C7A                     	goto	l4995
 12986  001C7A  EF56  F00E         u5380:
 12987  001C7E                     	line	30
 12988                           	
 12989                           l4987:; BSR set to: 0
 12990  001C7E                     
 12991                           		incf	((___fladd@bexp))&0ffh,w
 12992  001C7E  2992               	btfss	status,2
 12993  001C80  A4D8               	goto	u5391
 12994  001C82  EF45  F00E         	goto	u5390
 12995  001C86  EF47  F00E         
 12996                           u5391:
 12997  001C8A                     	goto	l4991
 12998  001C8A  EF51  F00E         u5390:
 12999  001C8E                     	line	32
 13000                           	
 13001                           l4989:; BSR set to: 0
 13002  001C8E                     
 13003                           	movlw	low(normalize32(0.0000000000000000))
 13004  001C8E  0E00               	movwf	((___fladd@b))&0ffh
 13005  001C90  6F80               	movlw	high(normalize32(0.0000000000000000))
 13006  001C92  0E00               	movwf	((___fladd@b+1))&0ffh
 13007  001C94  6F81               	movlw	low highword(normalize32(0.0000000000000000))
 13008  001C96  0E00               	movwf	((___fladd@b+2))&0ffh
 13009  001C98  6F82               	movlw	high highword(normalize32(0.0000000000000000))
 13010  001C9A  0E00               	movwf	((___fladd@b+3))&0ffh
 13011  001C9C  6F83               	goto	l4991
 13012  001C9E  EF51  F00E         	line	33
 13013                           	
 13014                           l939:; BSR set to: 0
 13015  001CA2                     
 13016                           	line	35
 13017                           	
 13018                           l4991:; BSR set to: 0
 13019  001CA2                     
 13020                           	bsf	(0+(23/8)+(___fladd@b))&0ffh,(23)&7
 13021  001CA2  8F82               	line	37
 13022                           	
 13023                           l4993:; BSR set to: 0
 13024  001CA4                     
 13025                           	movlw	low(0)
 13026  001CA4  0E00               	movwf	(0+(___fladd@b+03h))&0ffh
 13027  001CA6  6F83               	line	38
 13028                           	goto	l4997
 13029  001CA8  EF60  F00E         	line	39
 13030                           	
 13031                           l938:; BSR set to: 0
 13032  001CAC                     
 13033                           	line	41
 13034                           	
 13035                           l4995:; BSR set to: 0
 13036  001CAC                     
 13037                           	movlw	low(normalize32(0.0000000000000000))
 13038  001CAC  0E00               	movwf	((___fladd@b))&0ffh
 13039  001CAE  6F80               	movlw	high(normalize32(0.0000000000000000))
 13040  001CB0  0E00               	movwf	((___fladd@b+1))&0ffh
 13041  001CB2  6F81               	movlw	low highword(normalize32(0.0000000000000000))
 13042  001CB4  0E00               	movwf	((___fladd@b+2))&0ffh
 13043  001CB6  6F82               	movlw	high highword(normalize32(0.0000000000000000))
 13044  001CB8  0E00               	movwf	((___fladd@b+3))&0ffh
 13045  001CBA  6F83               	goto	l4997
 13046  001CBC  EF60  F00E         	line	42
 13047                           	
 13048                           l940:; BSR set to: 0
 13049  001CC0                     
 13050                           	line	44
 13051                           	
 13052                           l4997:; BSR set to: 0
 13053  001CC0                     
 13054                           	movf	(0+(___fladd@a+03h))&0ffh,w
 13055  001CC0  5187               	andlw	low(080h)
 13056  001CC2  0B80               	movwf	((___fladd@aexp))&0ffh
 13057  001CC4  6F91               	line	46
 13058                           	
 13059                           l4999:; BSR set to: 0
 13060  001CC6                     
 13061                           	movf	((___fladd@signs))&0ffh,w
 13062  001CC6  5190               xorwf	((___fladd@aexp))&0ffh,w
 13063  001CC8  1991               	btfsc	status,2
 13064  001CCA  B4D8               	goto	u5401
 13065  001CCC  EF6A  F00E         	goto	u5400
 13066  001CD0  EF6C  F00E         
 13067                           u5401:
 13068  001CD4                     	goto	l5003
 13069  001CD4  EF6F  F00E         u5400:
 13070  001CD8                     	line	47
 13071                           	
 13072                           l5001:; BSR set to: 0
 13073  001CD8                     
 13074                           	bsf	(0+(6/8)+(___fladd@signs))&0ffh,(6)&7
 13075  001CD8  8D90               	goto	l5003
 13076  001CDA  EF6F  F00E         	line	48
 13077                           	
 13078                           l941:; BSR set to: 0
 13079  001CDE                     
 13080                           	line	49
 13081                           	
 13082                           l5003:; BSR set to: 0
 13083  001CDE                     
 13084                           	movf	(0+(___fladd@a+03h))&0ffh,w
 13085  001CDE  5187               	addwf	(0+(___fladd@a+03h))&0ffh,w
 13086  001CE0  2587               	movwf	((___fladd@aexp))&0ffh
 13087  001CE2  6F91               	line	50
 13088                           	
 13089                           l5005:; BSR set to: 0
 13090  001CE4                     
 13091                           	
 13092                           	btfss	(0+(___fladd@a+02h))&0ffh,(7)&7
 13093  001CE4  AF86               	goto	u5411
 13094  001CE6  EF77  F00E         	goto	u5410
 13095  001CEA  EF79  F00E         u5411:
 13096  001CEE                     	goto	l5009
 13097  001CEE  EF7C  F00E         u5410:
 13098  001CF2                     	line	51
 13099                           	
 13100                           l5007:; BSR set to: 0
 13101  001CF2                     
 13102                           	bsf	(0+(0/8)+(___fladd@aexp))&0ffh,(0)&7
 13103  001CF2  8191               	goto	l5009
 13104  001CF4  EF7C  F00E         	line	52
 13105                           	
 13106                           l942:; BSR set to: 0
 13107  001CF8                     
 13108                           	line	55
 13109                           	
 13110                           l5009:; BSR set to: 0
 13111  001CF8                     
 13112                           	movf	((___fladd@aexp))&0ffh,w
 13113  001CF8  5191               	btfsc	status,2
 13114  001CFA  B4D8               	goto	u5421
 13115  001CFC  EF82  F00E         	goto	u5420
 13116  001D00  EF84  F00E         u5421:
 13117  001D04                     	goto	l5019
 13118  001D04  EF9B  F00E         u5420:
 13119  001D08                     	line	57
 13120                           	
 13121                           l5011:; BSR set to: 0
 13122  001D08                     
 13123                           		incf	((___fladd@aexp))&0ffh,w
 13124  001D08  2991               	btfss	status,2
 13125  001D0A  A4D8               	goto	u5431
 13126  001D0C  EF8A  F00E         	goto	u5430
 13127  001D10  EF8C  F00E         
 13128                           u5431:
 13129  001D14                     	goto	l5015
 13130  001D14  EF96  F00E         u5430:
 13131  001D18                     	line	59
 13132                           	
 13133                           l5013:; BSR set to: 0
 13134  001D18                     
 13135                           	movlw	low(normalize32(0.0000000000000000))
 13136  001D18  0E00               	movwf	((___fladd@a))&0ffh
 13137  001D1A  6F84               	movlw	high(normalize32(0.0000000000000000))
 13138  001D1C  0E00               	movwf	((___fladd@a+1))&0ffh
 13139  001D1E  6F85               	movlw	low highword(normalize32(0.0000000000000000))
 13140  001D20  0E00               	movwf	((___fladd@a+2))&0ffh
 13141  001D22  6F86               	movlw	high highword(normalize32(0.0000000000000000))
 13142  001D24  0E00               	movwf	((___fladd@a+3))&0ffh
 13143  001D26  6F87               	goto	l5015
 13144  001D28  EF96  F00E         	line	60
 13145                           	
 13146                           l944:; BSR set to: 0
 13147  001D2C                     
 13148                           	line	62
 13149                           	
 13150                           l5015:; BSR set to: 0
 13151  001D2C                     
 13152                           	bsf	(0+(23/8)+(___fladd@a))&0ffh,(23)&7
 13153  001D2C  8F86               	line	64
 13154                           	
 13155                           l5017:; BSR set to: 0
 13156  001D2E                     
 13157                           	movlw	low(0)
 13158  001D2E  0E00               	movwf	(0+(___fladd@a+03h))&0ffh
 13159  001D30  6F87               	line	65
 13160                           	goto	l5021
 13161  001D32  EFA5  F00E         	line	66
 13162                           	
 13163                           l943:; BSR set to: 0
 13164  001D36                     
 13165                           	line	68
 13166                           	
 13167                           l5019:; BSR set to: 0
 13168  001D36                     
 13169                           	movlw	low(normalize32(0.0000000000000000))
 13170  001D36  0E00               	movwf	((___fladd@a))&0ffh
 13171  001D38  6F84               	movlw	high(normalize32(0.0000000000000000))
 13172  001D3A  0E00               	movwf	((___fladd@a+1))&0ffh
 13173  001D3C  6F85               	movlw	low highword(normalize32(0.0000000000000000))
 13174  001D3E  0E00               	movwf	((___fladd@a+2))&0ffh
 13175  001D40  6F86               	movlw	high highword(normalize32(0.0000000000000000))
 13176  001D42  0E00               	movwf	((___fladd@a+3))&0ffh
 13177  001D44  6F87               	goto	l5021
 13178  001D46  EFA5  F00E         	line	69
 13179                           	
 13180                           l945:; BSR set to: 0
 13181  001D4A                     
 13182                           	line	75
 13183                           	
 13184                           l5021:; BSR set to: 0
 13185  001D4A                     
 13186                           		movf	((___fladd@bexp))&0ffh,w
 13187  001D4A  5192               	subwf	((___fladd@aexp))&0ffh,w
 13188  001D4C  5D91               	btfsc	status,0
 13189  001D4E  B0D8               	goto	u5441
 13190  001D50  EFAC  F00E         	goto	u5440
 13191  001D54  EFAE  F00E         
 13192                           u5441:
 13193  001D58                     	goto	l5057
 13194  001D58  EFD9  F00E         u5440:
 13195  001D5C                     	line	77
 13196                           	
 13197                           l5023:; BSR set to: 0
 13198  001D5C                     
 13199                           	
 13200                           	btfss	((___fladd@signs))&0ffh,(6)&7
 13201  001D5C  AD90               	goto	u5451
 13202  001D5E  EFB3  F00E         	goto	u5450
 13203  001D62  EFB5  F00E         u5451:
 13204  001D66                     	goto	l5027
 13205  001D66  EFB9  F00E         u5450:
 13206  001D6A                     	line	78
 13207                           	
 13208                           l5025:; BSR set to: 0
 13209  001D6A                     
 13210                           	movlw	(080h)&0ffh
 13211  001D6A  0E80               	xorwf	((___fladd@signs))&0ffh
 13212  001D6C  1B90               	goto	l5027
 13213  001D6E  EFB9  F00E         	line	79
 13214                           	
 13215                           l947:; BSR set to: 0
 13216  001D72                     
 13217                           	line	81
 13218                           	
 13219                           l5027:; BSR set to: 0
 13220  001D72                     
 13221                           	movff	(___fladd@bexp),(___fladd@grs)
 13222  001D72  C092  F093         	line	82
 13223                           	
 13224                           l5029:; BSR set to: 0
 13225  001D76                     
 13226                           	movff	(___fladd@aexp),(___fladd@bexp)
 13227  001D76  C091  F092         	line	83
 13228                           	
 13229                           l5031:; BSR set to: 0
 13230  001D7A                     
 13231                           	movff	(___fladd@grs),(___fladd@aexp)
 13232  001D7A  C093  F091         	line	84
 13233                           	
 13234                           l5033:; BSR set to: 0
 13235  001D7E                     
 13236                           	movff	(___fladd@b),(___fladd@grs)
 13237  001D7E  C080  F093         	line	85
 13238                           	
 13239                           l5035:; BSR set to: 0
 13240  001D82                     
 13241                           	movff	(___fladd@a),(___fladd@b)
 13242  001D82  C084  F080         	line	86
 13243                           	
 13244                           l5037:; BSR set to: 0
 13245  001D86                     
 13246                           	movff	(___fladd@grs),(___fladd@a)
 13247  001D86  C093  F084         	line	87
 13248                           	
 13249                           l5039:; BSR set to: 0
 13250  001D8A                     
 13251                           	movff	0+(___fladd@b+01h),(___fladd@grs)
 13252  001D8A  C081  F093         	line	88
 13253                           	
 13254                           l5041:; BSR set to: 0
 13255  001D8E                     
 13256                           	movff	0+(___fladd@a+01h),0+(___fladd@b+01h)
 13257  001D8E  C085  F081         	line	89
 13258                           	
 13259                           l5043:; BSR set to: 0
 13260  001D92                     
 13261                           	movff	(___fladd@grs),0+(___fladd@a+01h)
 13262  001D92  C093  F085         	line	90
 13263                           	
 13264                           l5045:; BSR set to: 0
 13265  001D96                     
 13266                           	movff	0+(___fladd@b+02h),(___fladd@grs)
 13267  001D96  C082  F093         	line	91
 13268                           	
 13269                           l5047:; BSR set to: 0
 13270  001D9A                     
 13271                           	movff	0+(___fladd@a+02h),0+(___fladd@b+02h)
 13272  001D9A  C086  F082         	line	92
 13273                           	
 13274                           l5049:; BSR set to: 0
 13275  001D9E                     
 13276                           	movff	(___fladd@grs),0+(___fladd@a+02h)
 13277  001D9E  C093  F086         	line	93
 13278                           	
 13279                           l5051:; BSR set to: 0
 13280  001DA2                     
 13281                           	movff	0+(___fladd@b+03h),(___fladd@grs)
 13282  001DA2  C083  F093         	line	94
 13283                           	
 13284                           l5053:; BSR set to: 0
 13285  001DA6                     
 13286                           	movff	0+(___fladd@a+03h),0+(___fladd@b+03h)
 13287  001DA6  C087  F083         	line	95
 13288                           	
 13289                           l5055:; BSR set to: 0
 13290  001DAA                     
 13291                           	movff	(___fladd@grs),0+(___fladd@a+03h)
 13292  001DAA  C093  F087         	goto	l5057
 13293  001DAE  EFD9  F00E         	line	96
 13294                           	
 13295                           l946:; BSR set to: 0
 13296  001DB2                     
 13297                           	line	98
 13298                           	
 13299                           l5057:; BSR set to: 0
 13300  001DB2                     
 13301                           	movlw	low(0)
 13302  001DB2  0E00               	movwf	((___fladd@grs))&0ffh
 13303  001DB4  6F93               	line	100
 13304                           	
 13305                           l5059:; BSR set to: 0
 13306  001DB6                     
 13307                           	movf	((___fladd@bexp))&0ffh,w
 13308  001DB6  5192               	movwf	(??___fladd+0+0)&0ffh
 13309  001DB8  6F88               	clrf	(??___fladd+0+0+1)&0ffh
 13310  001DBA  6B89               
 13311                           	comf	(??___fladd+0+0)&0ffh
 13312  001DBC  1F88               	comf	(??___fladd+0+1)&0ffh
 13313  001DBE  1F89               	infsnz	(??___fladd+0+0)&0ffh
 13314  001DC0  4B88               	incf	(??___fladd+0+1)&0ffh
 13315  001DC2  2B89               	movf	((___fladd@aexp))&0ffh,w
 13316  001DC4  5191               	movwf	(??___fladd+2+0)&0ffh
 13317  001DC6  6F8A               	clrf	(??___fladd+2+0+1)&0ffh
 13318  001DC8  6B8B               
 13319                           	movf	(??___fladd+0+0)&0ffh,w
 13320  001DCA  5188               	addwf	(??___fladd+2+0)&0ffh
 13321  001DCC  278A               	movf	(??___fladd+0+1)&0ffh,w
 13322  001DCE  5189               	addwfc	(??___fladd+2+1)&0ffh
 13323  001DD0  238B               	btfsc	(??___fladd+2+1)&0ffh,7
 13324  001DD2  BF8B               	goto	u5461
 13325  001DD4  EFF5  F00E         	movf	(??___fladd+2+1)&0ffh,w
 13326  001DD8  518B               	bnz	u5460
 13327  001DDA  E109               	movlw	26
 13328  001DDC  0E1A               	subwf	 (??___fladd+2+0)&0ffh,w
 13329  001DDE  5D8A               	btfss	status,0
 13330  001DE0  A0D8               	goto	u5461
 13331  001DE2  EFF5  F00E         	goto	u5460
 13332  001DE6  EFF7  F00E         
 13333                           u5461:
 13334  001DEA                     	goto	l950
 13335  001DEA  EF34  F00F         u5460:
 13336  001DEE                     	line	101
 13337                           	
 13338                           l5061:; BSR set to: 0
 13339  001DEE                     
 13340                           	movf	((___fladd@b))&0ffh,w
 13341  001DEE  5180               iorwf	((___fladd@b+1))&0ffh,w
 13342  001DF0  1181               iorwf	((___fladd@b+2))&0ffh,w
 13343  001DF2  1182               iorwf	((___fladd@b+3))&0ffh,w
 13344  001DF4  1183               	btfss	status,2
 13345  001DF6  A4D8               	goto	u5471
 13346  001DF8  EF00  F00F         	goto	u5470
 13347  001DFC  EF03  F00F         
 13348                           u5471:
 13349  001E00                     	movlw	1
 13350  001E00  0E01               	goto	u5480
 13351  001E02  EF04  F00F         u5470:
 13352  001E06                     	movlw	0
 13353  001E06  0E00               u5480:
 13354  001E08                     	movwf	((___fladd@grs))&0ffh
 13355  001E08  6F93               	line	102
 13356                           	
 13357                           l5063:; BSR set to: 0
 13358  001E0A                     
 13359                           	movlw	low(0)
 13360  001E0A  0E00               	movwf	((___fladd@b))&0ffh
 13361  001E0C  6F80               	movlw	high(0)
 13362  001E0E  0E00               	movwf	((___fladd@b+1))&0ffh
 13363  001E10  6F81               	movlw	low highword(0)
 13364  001E12  0E00               	movwf	((___fladd@b+2))&0ffh
 13365  001E14  6F82               	movlw	high highword(0)
 13366  001E16  0E00               	movwf	((___fladd@b+3))&0ffh
 13367  001E18  6F83               	line	103
 13368                           	
 13369                           l5065:; BSR set to: 0
 13370  001E1A                     
 13371                           	movff	(___fladd@aexp),(___fladd@bexp)
 13372  001E1A  C091  F092         	line	104
 13373                           	goto	l949
 13374  001E1E  EF3F  F00F         	line	105
 13375                           	
 13376                           l948:; BSR set to: 0
 13377  001E22                     
 13378                           	line	106
 13379                           	goto	l950
 13380  001E22  EF34  F00F         	
 13381                           l951:; BSR set to: 0
 13382  001E26                     
 13383                           	line	109
 13384                           	
 13385                           	btfss	((___fladd@grs))&0ffh,(0)&7
 13386  001E26  A193               	goto	u5491
 13387  001E28  EF18  F00F         	goto	u5490
 13388  001E2C  EF1A  F00F         u5491:
 13389  001E30                     	goto	l5069
 13390  001E30  EF20  F00F         u5490:
 13391  001E34                     	line	110
 13392                           	
 13393                           l5067:; BSR set to: 0
 13394  001E34                     
 13395                           	bcf	status,0
 13396  001E34  90D8               	rrcf	((___fladd@grs))&0ffh,w
 13397  001E36  3193               	iorlw	low(01h)
 13398  001E38  0901               	movwf	((___fladd@grs))&0ffh
 13399  001E3A  6F93               	line	111
 13400                           	goto	l5071
 13401  001E3C  EF24  F00F         	line	112
 13402                           	
 13403                           l952:; BSR set to: 0
 13404  001E40                     
 13405                           	line	113
 13406                           	
 13407                           l5069:; BSR set to: 0
 13408  001E40                     
 13409                           	bcf status,0
 13410  001E40  90D8               	rrcf	((___fladd@grs))&0ffh
 13411  001E42  3393               
 13412                           	goto	l5071
 13413  001E44  EF24  F00F         	line	114
 13414                           	
 13415                           l953:; BSR set to: 0
 13416  001E48                     
 13417                           	line	115
 13418                           	
 13419                           l5071:; BSR set to: 0
 13420  001E48                     
 13421                           	
 13422                           	btfss	((___fladd@b))&0ffh,(0)&7
 13423  001E48  A180               	goto	u5501
 13424  001E4A  EF29  F00F         	goto	u5500
 13425  001E4E  EF2B  F00F         u5501:
 13426  001E52                     	goto	l5075
 13427  001E52  EF2E  F00F         u5500:
 13428  001E56                     	line	116
 13429                           	
 13430                           l5073:; BSR set to: 0
 13431  001E56                     
 13432                           	bsf	(0+(7/8)+(___fladd@grs))&0ffh,(7)&7
 13433  001E56  8F93               	goto	l5075
 13434  001E58  EF2E  F00F         	line	117
 13435                           	
 13436                           l954:; BSR set to: 0
 13437  001E5C                     
 13438                           	line	118
 13439                           	
 13440                           l5075:; BSR set to: 0
 13441  001E5C                     
 13442                           	rlcf	((___fladd@b+3))&0ffh,w
 13443  001E5C  3583               	rrcf	((___fladd@b+3))&0ffh
 13444  001E5E  3383               	rrcf	((___fladd@b+2))&0ffh
 13445  001E60  3382               	rrcf	((___fladd@b+1))&0ffh
 13446  001E62  3381               	rrcf	((___fladd@b))&0ffh
 13447  001E64  3380               	line	119
 13448                           	
 13449                           l5077:; BSR set to: 0
 13450  001E66                     
 13451                           	incf	((___fladd@bexp))&0ffh
 13452  001E66  2B92               	line	120
 13453                           	
 13454                           l950:; BSR set to: 0
 13455  001E68                     
 13456                           	line	106
 13457                           		movf	((___fladd@aexp))&0ffh,w
 13458  001E68  5191               	subwf	((___fladd@bexp))&0ffh,w
 13459  001E6A  5D92               	btfss	status,0
 13460  001E6C  A0D8               	goto	u5511
 13461  001E6E  EF3B  F00F         	goto	u5510
 13462  001E72  EF3D  F00F         
 13463                           u5511:
 13464  001E76                     	goto	l951
 13465  001E76  EF13  F00F         u5510:
 13466  001E7A                     	goto	l949
 13467  001E7A  EF3F  F00F         	
 13468                           l955:; BSR set to: 0
 13469  001E7E                     
 13470                           	line	121
 13471                           	
 13472                           l949:; BSR set to: 0
 13473  001E7E                     
 13474                           	line	124
 13475                           	
 13476                           	btfsc	((___fladd@signs))&0ffh,(6)&7
 13477  001E7E  BD90               	goto	u5521
 13478  001E80  EF44  F00F         	goto	u5520
 13479  001E84  EF46  F00F         u5521:
 13480  001E88                     	goto	l5103
 13481  001E88  EF8F  F00F         u5520:
 13482  001E8C                     	line	127
 13483                           	
 13484                           l5079:; BSR set to: 0
 13485  001E8C                     
 13486                           	movf	((___fladd@bexp))&0ffh,w
 13487  001E8C  5192               	btfss	status,2
 13488  001E8E  A4D8               	goto	u5531
 13489  001E90  EF4C  F00F         	goto	u5530
 13490  001E94  EF4E  F00F         u5531:
 13491  001E98                     	goto	l5085
 13492  001E98  EF5A  F00F         u5530:
 13493  001E9C                     	line	128
 13494                           	
 13495                           l5081:; BSR set to: 0
 13496  001E9C                     
 13497                           	movlw	low(normalize32(0.0000000000000000))
 13498  001E9C  0E00               	movwf	((?___fladd))&0ffh
 13499  001E9E  6F80               	movlw	high(normalize32(0.0000000000000000))
 13500  001EA0  0E00               	movwf	((?___fladd+1))&0ffh
 13501  001EA2  6F81               	movlw	low highword(normalize32(0.0000000000000000))
 13502  001EA4  0E00               	movwf	((?___fladd+2))&0ffh
 13503  001EA6  6F82               	movlw	high highword(normalize32(0.0000000000000000))
 13504  001EA8  0E00               	movwf	((?___fladd+3))&0ffh
 13505  001EAA  6F83               	goto	l958
 13506  001EAC  EFE9  F010         	
 13507                           l5083:; BSR set to: 0
 13508  001EB0                     
 13509                           	goto	l958
 13510  001EB0  EFE9  F010         	line	129
 13511                           	
 13512                           l957:; BSR set to: 0
 13513  001EB4                     
 13514                           	line	132
 13515                           	
 13516                           l5085:; BSR set to: 0
 13517  001EB4                     
 13518                           	movf	((___fladd@a))&0ffh,w
 13519  001EB4  5184               	addwf	((___fladd@b))&0ffh
 13520  001EB6  2780               	movf	((___fladd@a+1))&0ffh,w
 13521  001EB8  5185               	addwfc	((___fladd@b+1))&0ffh
 13522  001EBA  2381               	movf	((___fladd@a+2))&0ffh,w
 13523  001EBC  5186               	addwfc	((___fladd@b+2))&0ffh
 13524  001EBE  2382               	movf	((___fladd@a+3))&0ffh,w
 13525  001EC0  5187               	addwfc	((___fladd@b+3))&0ffh
 13526  001EC2  2383               	line	134
 13527                           	
 13528                           l5087:; BSR set to: 0
 13529  001EC4                     
 13530                           	
 13531                           	btfss	((___fladd@b+3))&0ffh,(24)&7
 13532  001EC4  A183               	goto	u5541
 13533  001EC6  EF67  F00F         	goto	u5540
 13534  001ECA  EF69  F00F         u5541:
 13535  001ECE                     	goto	l5139
 13536  001ECE  EF3F  F010         u5540:
 13537  001ED2                     	line	135
 13538                           	
 13539                           l5089:; BSR set to: 0
 13540  001ED2                     
 13541                           	
 13542                           	btfss	((___fladd@grs))&0ffh,(0)&7
 13543  001ED2  A193               	goto	u5551
 13544  001ED4  EF6E  F00F         	goto	u5550
 13545  001ED8  EF70  F00F         u5551:
 13546  001EDC                     	goto	l5093
 13547  001EDC  EF77  F00F         u5550:
 13548  001EE0                     	line	136
 13549                           	
 13550                           l5091:; BSR set to: 0
 13551  001EE0                     
 13552                           	bcf status,0
 13553  001EE0  90D8               	rrcf	((___fladd@grs))&0ffh
 13554  001EE2  3393               
 13555                           	movf	((___fladd@grs))&0ffh,w
 13556  001EE4  5193               	iorlw	low(01h)
 13557  001EE6  0901               	movwf	((___fladd@grs))&0ffh
 13558  001EE8  6F93               	line	137
 13559                           	goto	l5095
 13560  001EEA  EF7B  F00F         	line	138
 13561                           	
 13562                           l960:; BSR set to: 0
 13563  001EEE                     
 13564                           	line	139
 13565                           	
 13566                           l5093:; BSR set to: 0
 13567  001EEE                     
 13568                           	bcf status,0
 13569  001EEE  90D8               	rrcf	((___fladd@grs))&0ffh
 13570  001EF0  3393               
 13571                           	goto	l5095
 13572  001EF2  EF7B  F00F         	line	140
 13573                           	
 13574                           l961:; BSR set to: 0
 13575  001EF6                     
 13576                           	line	141
 13577                           	
 13578                           l5095:; BSR set to: 0
 13579  001EF6                     
 13580                           	
 13581                           	btfss	((___fladd@b))&0ffh,(0)&7
 13582  001EF6  A180               	goto	u5561
 13583  001EF8  EF80  F00F         	goto	u5560
 13584  001EFC  EF82  F00F         u5561:
 13585  001F00                     	goto	l5099
 13586  001F00  EF85  F00F         u5560:
 13587  001F04                     	line	142
 13588                           	
 13589                           l5097:; BSR set to: 0
 13590  001F04                     
 13591                           	bsf	(0+(7/8)+(___fladd@grs))&0ffh,(7)&7
 13592  001F04  8F93               	goto	l5099
 13593  001F06  EF85  F00F         	line	143
 13594                           	
 13595                           l962:; BSR set to: 0
 13596  001F0A                     
 13597                           	line	144
 13598                           	
 13599                           l5099:; BSR set to: 0
 13600  001F0A                     
 13601                           	rlcf	((___fladd@b+3))&0ffh,w
 13602  001F0A  3583               	rrcf	((___fladd@b+3))&0ffh
 13603  001F0C  3383               	rrcf	((___fladd@b+2))&0ffh
 13604  001F0E  3382               	rrcf	((___fladd@b+1))&0ffh
 13605  001F10  3381               	rrcf	((___fladd@b))&0ffh
 13606  001F12  3380               	line	145
 13607                           	
 13608                           l5101:; BSR set to: 0
 13609  001F14                     
 13610                           	incf	((___fladd@bexp))&0ffh
 13611  001F14  2B92               	goto	l5139
 13612  001F16  EF3F  F010         	line	146
 13613                           	
 13614                           l959:; BSR set to: 0
 13615  001F1A                     
 13616                           	line	148
 13617                           	goto	l5139
 13618  001F1A  EF3F  F010         	line	149
 13619                           	
 13620                           l956:; BSR set to: 0
 13621  001F1E                     
 13622                           	line	153
 13623                           	
 13624                           l5103:; BSR set to: 0
 13625  001F1E                     
 13626                           		movf	((___fladd@a))&0ffh,w
 13627  001F1E  5184               	subwf	((___fladd@b))&0ffh,w
 13628  001F20  5D80               	movf	((___fladd@a+1))&0ffh,w
 13629  001F22  5185               	subwfb	((___fladd@b+1))&0ffh,w
 13630  001F24  5981               	movf	((___fladd@a+2))&0ffh,w
 13631  001F26  5186               	subwfb	((___fladd@b+2))&0ffh,w
 13632  001F28  5982               	movf	((___fladd@b+3))&0ffh,w
 13633  001F2A  5183               	xorlw	80h
 13634  001F2C  0A80               	movwf	(??___fladd+0+0)&0ffh
 13635  001F2E  6F88               	movf	((___fladd@a+3))&0ffh,w
 13636  001F30  5187               	xorlw	80h
 13637  001F32  0A80               	subwfb	(??___fladd+0+0)&0ffh,w
 13638  001F34  5988               	btfsc	status,0
 13639  001F36  B0D8               	goto	u5571
 13640  001F38  EFA0  F00F         	goto	u5570
 13641  001F3C  EFA2  F00F         
 13642                           u5571:
 13643  001F40                     	goto	l5113
 13644  001F40  EFE0  F00F         u5570:
 13645  001F44                     	line	154
 13646                           	
 13647                           l5105:; BSR set to: 0
 13648  001F44                     
 13649                           	movff	(___fladd@b),??___fladd+0+0
 13650  001F44  C080  F088         	movff	(___fladd@b+1),??___fladd+0+0+1
 13651  001F48  C081  F089         	movff	(___fladd@b+2),??___fladd+0+0+2
 13652  001F4C  C082  F08A         	movff	(___fladd@b+3),??___fladd+0+0+3
 13653  001F50  C083  F08B         	comf	(??___fladd+0+0)&0ffh
 13654  001F54  1F88               	comf	(??___fladd+0+1)&0ffh
 13655  001F56  1F89               	comf	(??___fladd+0+2)&0ffh
 13656  001F58  1F8A               	comf	(??___fladd+0+3)&0ffh
 13657  001F5A  1F8B               	incf	(??___fladd+0+0)&0ffh
 13658  001F5C  2B88               	movlw	0
 13659  001F5E  0E00               	addwfc	(??___fladd+0+1)&0ffh
 13660  001F60  2389               	addwfc	(??___fladd+0+2)&0ffh
 13661  001F62  238A               	addwfc	(??___fladd+0+3)&0ffh
 13662  001F64  238B               	movf	((___fladd@a))&0ffh,w
 13663  001F66  5184               	addwf	(??___fladd+0+0)&0ffh,w
 13664  001F68  2588               	movwf	(??___fladd+4+0)&0ffh
 13665  001F6A  6F8C               	movf	((___fladd@a+1))&0ffh,w
 13666  001F6C  5185               	addwfc	(??___fladd+0+1)&0ffh,w
 13667  001F6E  2189               	movwf	1+(??___fladd+4+0)&0ffh
 13668  001F70  6F8D               	
 13669                           	movf	((___fladd@a+2))&0ffh,w
 13670  001F72  5186               	addwfc	(??___fladd+0+2)&0ffh,w
 13671  001F74  218A               	movwf	2+(??___fladd+4+0)&0ffh
 13672  001F76  6F8E               	
 13673                           	movf	((___fladd@a+3))&0ffh,w
 13674  001F78  5187               	addwfc	(??___fladd+0+3)&0ffh,w
 13675  001F7A  218B               	movwf	3+(??___fladd+4+0)&0ffh
 13676  001F7C  6F8F               	movlw	0FFh
 13677  001F7E  0EFF               	addwf	(??___fladd+4+0)&0ffh,w
 13678  001F80  258C               	movwf	((___fladd@b))&0ffh
 13679  001F82  6F80               	movlw	0FFh
 13680  001F84  0EFF               	addwfc	(??___fladd+4+1)&0ffh,w
 13681  001F86  218D               	movwf	1+((___fladd@b))&0ffh
 13682  001F88  6F81               	
 13683                           	movlw	0FFh
 13684  001F8A  0EFF               	addwfc	(??___fladd+4+2)&0ffh,w
 13685  001F8C  218E               	movwf	2+((___fladd@b))&0ffh
 13686  001F8E  6F82               	
 13687                           	movlw	0FFh
 13688  001F90  0EFF               	addwfc	(??___fladd+4+3)&0ffh,w
 13689  001F92  218F               	movwf	3+((___fladd@b))&0ffh
 13690  001F94  6F83               	line	155
 13691                           	movlw	(080h)&0ffh
 13692  001F96  0E80               	xorwf	((___fladd@signs))&0ffh
 13693  001F98  1B90               	line	156
 13694                           	
 13695                           l5107:; BSR set to: 0
 13696  001F9A                     
 13697                           	negf	((___fladd@grs))&0ffh
 13698  001F9A  6D93               	line	157
 13699                           	
 13700                           l5109:; BSR set to: 0
 13701  001F9C                     
 13702                           	movf	((___fladd@grs))&0ffh,w
 13703  001F9C  5193               	btfss	status,2
 13704  001F9E  A4D8               	goto	u5581
 13705  001FA0  EFD4  F00F         	goto	u5580
 13706  001FA4  EFD6  F00F         u5581:
 13707  001FA8                     	goto	l966
 13708  001FA8  EFE8  F00F         u5580:
 13709  001FAC                     	line	158
 13710                           	
 13711                           l5111:; BSR set to: 0
 13712  001FAC                     
 13713                           	movlw	low(01h)
 13714  001FAC  0E01               	addwf	((___fladd@b))&0ffh
 13715  001FAE  2780               	movlw	0
 13716  001FB0  0E00               	addwfc	((___fladd@b+1))&0ffh
 13717  001FB2  2381               	addwfc	((___fladd@b+2))&0ffh
 13718  001FB4  2382               	addwfc	((___fladd@b+3))&0ffh
 13719  001FB6  2383               	goto	l966
 13720  001FB8  EFE8  F00F         	line	159
 13721                           	
 13722                           l965:; BSR set to: 0
 13723  001FBC                     
 13724                           	line	160
 13725                           	goto	l966
 13726  001FBC  EFE8  F00F         	line	161
 13727                           	
 13728                           l964:; BSR set to: 0
 13729  001FC0                     
 13730                           	line	162
 13731                           	
 13732                           l5113:; BSR set to: 0
 13733  001FC0                     
 13734                           	movf	((___fladd@a))&0ffh,w
 13735  001FC0  5184               	subwf	((___fladd@b))&0ffh
 13736  001FC2  5F80               	movf	((___fladd@a+1))&0ffh,w
 13737  001FC4  5185               	subwfb	((___fladd@b+1))&0ffh
 13738  001FC6  5B81               	movf	((___fladd@a+2))&0ffh,w
 13739  001FC8  5186               	subwfb	((___fladd@b+2))&0ffh
 13740  001FCA  5B82               	movf	((___fladd@a+3))&0ffh,w
 13741  001FCC  5187               	subwfb	((___fladd@b+3))&0ffh
 13742  001FCE  5B83               	line	163
 13743                           	
 13744                           l966:; BSR set to: 0
 13745  001FD0                     
 13746                           	line	166
 13747                           	movf	((___fladd@b))&0ffh,w
 13748  001FD0  5180               iorwf	((___fladd@b+1))&0ffh,w
 13749  001FD2  1181               iorwf	((___fladd@b+2))&0ffh,w
 13750  001FD4  1182               iorwf	((___fladd@b+3))&0ffh,w
 13751  001FD6  1183               	btfss	status,2
 13752  001FD8  A4D8               	goto	u5591
 13753  001FDA  EFF1  F00F         	goto	u5590
 13754  001FDE  EFF3  F00F         
 13755                           u5591:
 13756  001FE2                     	goto	l5137
 13757  001FE2  EF34  F010         u5590:
 13758  001FE6                     	
 13759                           l5115:; BSR set to: 0
 13760  001FE6                     
 13761                           	movf	((___fladd@grs))&0ffh,w
 13762  001FE6  5193               	btfss	status,2
 13763  001FE8  A4D8               	goto	u5601
 13764  001FEA  EFF9  F00F         	goto	u5600
 13765  001FEE  EFFB  F00F         u5601:
 13766  001FF2                     	goto	l5137
 13767  001FF2  EF34  F010         u5600:
 13768  001FF6                     	line	167
 13769                           	
 13770                           l5117:; BSR set to: 0
 13771  001FF6                     
 13772                           	movlw	low(normalize32(0.0000000000000000))
 13773  001FF6  0E00               	movwf	((?___fladd))&0ffh
 13774  001FF8  6F80               	movlw	high(normalize32(0.0000000000000000))
 13775  001FFA  0E00               	movwf	((?___fladd+1))&0ffh
 13776  001FFC  6F81               	movlw	low highword(normalize32(0.0000000000000000))
 13777  001FFE  0E00               	movwf	((?___fladd+2))&0ffh
 13778  002000  6F82               	movlw	high highword(normalize32(0.0000000000000000))
 13779  002002  0E00               	movwf	((?___fladd+3))&0ffh
 13780  002004  6F83               	goto	l958
 13781  002006  EFE9  F010         	
 13782                           l5119:; BSR set to: 0
 13783  00200A                     
 13784                           	goto	l958
 13785  00200A  EFE9  F010         	line	168
 13786                           	
 13787                           l967:; BSR set to: 0
 13788  00200E                     
 13789                           	line	171
 13790                           	goto	l5137
 13791  00200E  EF34  F010         	
 13792                           l969:; BSR set to: 0
 13793  002012                     
 13794                           	line	172
 13795                           	
 13796                           l5121:; BSR set to: 0
 13797  002012                     
 13798                           	bcf	status,0
 13799  002012  90D8               	rlcf	((___fladd@b))&0ffh
 13800  002014  3780               	rlcf	((___fladd@b+1))&0ffh
 13801  002016  3781               	rlcf	((___fladd@b+2))&0ffh
 13802  002018  3782               	rlcf	((___fladd@b+3))&0ffh
 13803  00201A  3783               	line	173
 13804                           	
 13805                           l5123:; BSR set to: 0
 13806  00201C                     
 13807                           	
 13808                           	btfss	((___fladd@grs))&0ffh,(7)&7
 13809  00201C  AF93               	goto	u5611
 13810  00201E  EF13  F010         	goto	u5610
 13811  002022  EF15  F010         u5611:
 13812  002026                     	goto	l5127
 13813  002026  EF18  F010         u5610:
 13814  00202A                     	line	174
 13815                           	
 13816                           l5125:; BSR set to: 0
 13817  00202A                     
 13818                           	bsf	(0+(0/8)+(___fladd@b))&0ffh,(0)&7
 13819  00202A  8180               	goto	l5127
 13820  00202C  EF18  F010         	line	175
 13821                           	
 13822                           l970:; BSR set to: 0
 13823  002030                     
 13824                           	line	176
 13825                           	
 13826                           l5127:; BSR set to: 0
 13827  002030                     
 13828                           	
 13829                           	btfss	((___fladd@grs))&0ffh,(0)&7
 13830  002030  A193               	goto	u5621
 13831  002032  EF1D  F010         	goto	u5620
 13832  002036  EF1F  F010         u5621:
 13833  00203A                     	goto	l5131
 13834  00203A  EF23  F010         u5620:
 13835  00203E                     	line	177
 13836                           	
 13837                           l5129:; BSR set to: 0
 13838  00203E                     
 13839                           	bsf	status,0
 13840  00203E  80D8               	
 13841                           	rlcf	((___fladd@grs))&0ffh
 13842  002040  3793               	line	178
 13843                           	goto	l5133
 13844  002042  EF27  F010         	line	179
 13845                           	
 13846                           l971:; BSR set to: 0
 13847  002046                     
 13848                           	line	180
 13849                           	
 13850                           l5131:; BSR set to: 0
 13851  002046                     
 13852                           	bcf status,0
 13853  002046  90D8               	rlcf	((___fladd@grs))&0ffh
 13854  002048  3793               
 13855                           	goto	l5133
 13856  00204A  EF27  F010         	line	181
 13857                           	
 13858                           l972:; BSR set to: 0
 13859  00204E                     
 13860                           	line	182
 13861                           	
 13862                           l5133:; BSR set to: 0
 13863  00204E                     
 13864                           	movf	((___fladd@bexp))&0ffh,w
 13865  00204E  5192               	btfsc	status,2
 13866  002050  B4D8               	goto	u5631
 13867  002052  EF2D  F010         	goto	u5630
 13868  002056  EF2F  F010         u5631:
 13869  00205A                     	goto	l5137
 13870  00205A  EF34  F010         u5630:
 13871  00205E                     	line	183
 13872                           	
 13873                           l5135:; BSR set to: 0
 13874  00205E                     
 13875                           	decf	((___fladd@bexp))&0ffh
 13876  00205E  0792               	goto	l5137
 13877  002060  EF34  F010         	line	184
 13878                           	
 13879                           l973:; BSR set to: 0
 13880  002064                     
 13881                           	goto	l5137
 13882  002064  EF34  F010         	line	185
 13883                           	
 13884                           l968:; BSR set to: 0
 13885  002068                     
 13886                           	line	171
 13887                           	
 13888                           l5137:; BSR set to: 0
 13889  002068                     
 13890                           	
 13891                           	btfss	((___fladd@b+2))&0ffh,(23)&7
 13892  002068  AF82               	goto	u5641
 13893  00206A  EF39  F010         	goto	u5640
 13894  00206E  EF3B  F010         u5641:
 13895  002072                     	goto	l5121
 13896  002072  EF09  F010         u5640:
 13897  002076                     	goto	l5139
 13898  002076  EF3F  F010         	
 13899                           l974:; BSR set to: 0
 13900  00207A                     
 13901                           	goto	l5139
 13902  00207A  EF3F  F010         	line	186
 13903                           	
 13904                           l963:; BSR set to: 0
 13905  00207E                     
 13906                           	line	192
 13907                           	
 13908                           l5139:; BSR set to: 0
 13909  00207E                     
 13910                           	movlw	low(0)
 13911  00207E  0E00               	movwf	((___fladd@aexp))&0ffh
 13912  002080  6F91               	line	193
 13913                           	
 13914                           l5141:; BSR set to: 0
 13915  002082                     
 13916                           	
 13917                           	btfss	((___fladd@grs))&0ffh,(7)&7
 13918  002082  AF93               	goto	u5651
 13919  002084  EF46  F010         	goto	u5650
 13920  002088  EF48  F010         u5651:
 13921  00208C                     	goto	l975
 13922  00208C  EF64  F010         u5650:
 13923  002090                     	line	194
 13924                           	
 13925                           l5143:; BSR set to: 0
 13926  002090                     
 13927                           	movff	(___fladd@grs),??___fladd+0+0
 13928  002090  C093  F088         	movlw	07Fh
 13929  002094  0E7F               	andwf	(??___fladd+0+0)&0ffh
 13930  002096  1788               	btfsc	status,2
 13931  002098  B4D8               	goto	u5661
 13932  00209A  EF51  F010         	goto	u5660
 13933  00209E  EF53  F010         u5661:
 13934  0020A2                     	goto	l976
 13935  0020A2  EF57  F010         u5660:
 13936  0020A6                     	line	195
 13937                           	
 13938                           l5145:; BSR set to: 0
 13939  0020A6                     
 13940                           	movlw	low(01h)
 13941  0020A6  0E01               	movwf	((___fladd@aexp))&0ffh
 13942  0020A8  6F91               	line	196
 13943                           	goto	l975
 13944  0020AA  EF64  F010         	line	197
 13945                           	
 13946                           l976:; BSR set to: 0
 13947  0020AE                     
 13948                           	line	198
 13949                           	
 13950                           	btfss	((___fladd@b))&0ffh,(0)&7
 13951  0020AE  A180               	goto	u5671
 13952  0020B0  EF5C  F010         	goto	u5670
 13953  0020B4  EF5E  F010         u5671:
 13954  0020B8                     	goto	l975
 13955  0020B8  EF64  F010         u5670:
 13956  0020BC                     	line	199
 13957                           	
 13958                           l5147:; BSR set to: 0
 13959  0020BC                     
 13960                           	movlw	low(01h)
 13961  0020BC  0E01               	movwf	((___fladd@aexp))&0ffh
 13962  0020BE  6F91               	goto	l975
 13963  0020C0  EF64  F010         	line	200
 13964                           	
 13965                           l978:; BSR set to: 0
 13966  0020C4                     
 13967                           	goto	l975
 13968  0020C4  EF64  F010         	line	201
 13969                           	
 13970                           l977:; BSR set to: 0
 13971  0020C8                     
 13972                           	line	202
 13973                           	
 13974                           l975:; BSR set to: 0
 13975  0020C8                     
 13976                           	line	203
 13977                           	movf	((___fladd@aexp))&0ffh,w
 13978  0020C8  5191               	btfsc	status,2
 13979  0020CA  B4D8               	goto	u5681
 13980  0020CC  EF6A  F010         	goto	u5680
 13981  0020D0  EF6C  F010         u5681:
 13982  0020D4                     	goto	l5157
 13983  0020D4  EF9D  F010         u5680:
 13984  0020D8                     	line	204
 13985                           	
 13986                           l5149:; BSR set to: 0
 13987  0020D8                     
 13988                           	movlw	low(01h)
 13989  0020D8  0E01               	addwf	((___fladd@b))&0ffh
 13990  0020DA  2780               	movlw	0
 13991  0020DC  0E00               	addwfc	((___fladd@b+1))&0ffh
 13992  0020DE  2381               	addwfc	((___fladd@b+2))&0ffh
 13993  0020E0  2382               	addwfc	((___fladd@b+3))&0ffh
 13994  0020E2  2383               	line	205
 13995                           	
 13996                           l5151:; BSR set to: 0
 13997  0020E4                     
 13998                           	
 13999                           	btfss	((___fladd@b+3))&0ffh,(24)&7
 14000  0020E4  A183               	goto	u5691
 14001  0020E6  EF77  F010         	goto	u5690
 14002  0020EA  EF79  F010         u5691:
 14003  0020EE                     	goto	l5157
 14004  0020EE  EF9D  F010         u5690:
 14005  0020F2                     	line	206
 14006                           	
 14007                           l5153:; BSR set to: 0
 14008  0020F2                     
 14009                           	movff	(___fladd@b),??___fladd+0+0
 14010  0020F2  C080  F088         	movff	(___fladd@b+1),??___fladd+0+0+1
 14011  0020F6  C081  F089         	movff	(___fladd@b+2),??___fladd+0+0+2
 14012  0020FA  C082  F08A         	movff	(___fladd@b+3),??___fladd+0+0+3
 14013  0020FE  C083  F08B         	rlcf	(??___fladd+0+3)&0ffh,w
 14014  002102  358B               	rrcf	(??___fladd+0+3)&0ffh
 14015  002104  338B               	rrcf	(??___fladd+0+2)&0ffh
 14016  002106  338A               	rrcf	(??___fladd+0+1)&0ffh
 14017  002108  3389               	rrcf	(??___fladd+0+0)&0ffh
 14018  00210A  3388               	movff	??___fladd+0+0,(___fladd@b)
 14019  00210C  C088  F080         	movff	??___fladd+0+1,(___fladd@b+1)
 14020  002110  C089  F081         	movff	??___fladd+0+2,(___fladd@b+2)
 14021  002114  C08A  F082         	movff	??___fladd+0+3,(___fladd@b+3)
 14022  002118  C08B  F083         	line	207
 14023                           		incf	((___fladd@bexp))&0ffh,w
 14024  00211C  2992               	btfsc	status,2
 14025  00211E  B4D8               	goto	u5701
 14026  002120  EF94  F010         	goto	u5700
 14027  002124  EF96  F010         
 14028                           u5701:
 14029  002128                     	goto	l5157
 14030  002128  EF9D  F010         u5700:
 14031  00212C                     	line	208
 14032                           	
 14033                           l5155:; BSR set to: 0
 14034  00212C                     
 14035                           	incf	((___fladd@bexp))&0ffh
 14036  00212C  2B92               	goto	l5157
 14037  00212E  EF9D  F010         	line	209
 14038                           	
 14039                           l981:; BSR set to: 0
 14040  002132                     
 14041                           	goto	l5157
 14042  002132  EF9D  F010         	line	210
 14043                           	
 14044                           l980:; BSR set to: 0
 14045  002136                     
 14046                           	goto	l5157
 14047  002136  EF9D  F010         	line	211
 14048                           	
 14049                           l979:; BSR set to: 0
 14050  00213A                     
 14051                           	line	215
 14052                           	
 14053                           l5157:; BSR set to: 0
 14054  00213A                     
 14055                           		incf	((___fladd@bexp))&0ffh,w
 14056  00213A  2992               	btfsc	status,2
 14057  00213C  B4D8               	goto	u5711
 14058  00213E  EFA3  F010         	goto	u5710
 14059  002142  EFA5  F010         
 14060                           u5711:
 14061  002146                     	goto	l5161
 14062  002146  EFAF  F010         u5710:
 14063  00214A                     	
 14064                           l5159:; BSR set to: 0
 14065  00214A                     
 14066                           	movf	((___fladd@bexp))&0ffh,w
 14067  00214A  5192               	btfss	status,2
 14068  00214C  A4D8               	goto	u5721
 14069  00214E  EFAB  F010         	goto	u5720
 14070  002152  EFAD  F010         u5721:
 14071  002156                     	goto	l5165
 14072  002156  EFC5  F010         u5720:
 14073  00215A                     	goto	l5161
 14074  00215A  EFAF  F010         	
 14075                           l984:; BSR set to: 0
 14076  00215E                     
 14077                           	line	216
 14078                           	
 14079                           l5161:; BSR set to: 0
 14080  00215E                     
 14081                           	movlw	low(0)
 14082  00215E  0E00               	movwf	((___fladd@b))&0ffh
 14083  002160  6F80               	movlw	high(0)
 14084  002162  0E00               	movwf	((___fladd@b+1))&0ffh
 14085  002164  6F81               	movlw	low highword(0)
 14086  002166  0E00               	movwf	((___fladd@b+2))&0ffh
 14087  002168  6F82               	movlw	high highword(0)
 14088  00216A  0E00               	movwf	((___fladd@b+3))&0ffh
 14089  00216C  6F83               	line	218
 14090                           	movf	((___fladd@bexp))&0ffh,w
 14091  00216E  5192               	btfss	status,2
 14092  002170  A4D8               	goto	u5731
 14093  002172  EFBD  F010         	goto	u5730
 14094  002176  EFBF  F010         u5731:
 14095  00217A                     	goto	l5165
 14096  00217A  EFC5  F010         u5730:
 14097  00217E                     	line	219
 14098                           	
 14099                           l5163:; BSR set to: 0
 14100  00217E                     
 14101                           	movlw	low(0)
 14102  00217E  0E00               	movwf	((___fladd@signs))&0ffh
 14103  002180  6F90               	goto	l5165
 14104  002182  EFC5  F010         	line	220
 14105                           	
 14106                           l985:; BSR set to: 0
 14107  002186                     
 14108                           	goto	l5165
 14109  002186  EFC5  F010         	line	221
 14110                           	
 14111                           l982:; BSR set to: 0
 14112  00218A                     
 14113                           	line	225
 14114                           	
 14115                           l5165:; BSR set to: 0
 14116  00218A                     
 14117                           	
 14118                           	btfss	((___fladd@bexp))&0ffh,(0)&7
 14119  00218A  A192               	goto	u5741
 14120  00218C  EFCA  F010         	goto	u5740
 14121  002190  EFCC  F010         u5741:
 14122  002194                     	goto	l5169
 14123  002194  EFCF  F010         u5740:
 14124  002198                     	line	226
 14125                           	
 14126                           l5167:; BSR set to: 0
 14127  002198                     
 14128                           	bsf	(0+(7/8)+0+(___fladd@b+02h))&0ffh,(7)&7
 14129  002198  8F82               	line	227
 14130                           	goto	l5171
 14131  00219A  EFD2  F010         	line	229
 14132                           	
 14133                           l986:; BSR set to: 0
 14134  00219E                     
 14135                           	line	230
 14136                           	
 14137                           l5169:; BSR set to: 0
 14138  00219E                     
 14139                           	bcf	(0+(7/8)+0+(___fladd@b+02h))&0ffh,(7)&7
 14140  00219E  9F82               	goto	l5171
 14141  0021A0  EFD2  F010         	line	231
 14142                           	
 14143                           l987:; BSR set to: 0
 14144  0021A4                     
 14145                           	line	232
 14146                           	
 14147                           l5171:; BSR set to: 0
 14148  0021A4                     
 14149                           	bcf	status,0
 14150  0021A4  90D8               	rrcf	((___fladd@bexp))&0ffh,w
 14151  0021A6  3192               	movwf	(0+(___fladd@b+03h))&0ffh
 14152  0021A8  6F83               	line	233
 14153                           	
 14154                           l5173:; BSR set to: 0
 14155  0021AA                     
 14156                           	
 14157                           	btfss	((___fladd@signs))&0ffh,(7)&7
 14158  0021AA  AF90               	goto	u5751
 14159  0021AC  EFDA  F010         	goto	u5750
 14160  0021B0  EFDC  F010         u5751:
 14161  0021B4                     	goto	l5177
 14162  0021B4  EFDF  F010         u5750:
 14163  0021B8                     	line	234
 14164                           	
 14165                           l5175:; BSR set to: 0
 14166  0021B8                     
 14167                           	bsf	(0+(7/8)+0+(___fladd@b+03h))&0ffh,(7)&7
 14168  0021B8  8F83               	goto	l5177
 14169  0021BA  EFDF  F010         	line	235
 14170                           	
 14171                           l988:; BSR set to: 0
 14172  0021BE                     
 14173                           	line	236
 14174                           	
 14175                           l5177:; BSR set to: 0
 14176  0021BE                     
 14177                           	movff	(___fladd@b),(?___fladd)
 14178  0021BE  C080  F080         	movff	(___fladd@b+1),(?___fladd+1)
 14179  0021C2  C081  F081         	movff	(___fladd@b+2),(?___fladd+2)
 14180  0021C6  C082  F082         	movff	(___fladd@b+3),(?___fladd+3)
 14181  0021CA  C083  F083         	goto	l958
 14182  0021CE  EFE9  F010         	
 14183                           l5179:; BSR set to: 0
 14184  0021D2                     
 14185                           	line	237
 14186                           	
 14187                           l958:; BSR set to: 0
 14188  0021D2                     
 14189                           	return	;funcret
 14190  0021D2  0012               	opt stack 0
 14191                           GLOBAL	__end_of___fladd
 14192                           	__end_of___fladd:
 14193  0021D4                     	signat	___fladd,8316
 14194                           	global	_reloadTimer3
 14195                           
 14196 ;; *************** function _reloadTimer3 *****************
 14197 ;; Defined at:
 14198 ;;		line 121 in file "main.c"
 14199 ;; Parameters:    Size  Location     Type
 14200 ;;		None
 14201 ;; Auto vars:     Size  Location     Type
 14202 ;;		None
 14203 ;; Return value:  Size  Location     Type
 14204 ;;                  1    wreg      void 
 14205 ;; Registers used:
 14206 ;;		wreg, status,2
 14207 ;; Tracked objects:
 14208 ;;		On entry : 0/0
 14209 ;;		On exit  : 0/0
 14210 ;;		Unchanged: 0/0
 14211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 14212 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14213 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14214 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14215 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14216 ;;Total ram usage:        0 bytes
 14217 ;; Hardware stack levels used:    1
 14218 ;; Hardware stack levels required when called:    3
 14219 ;; This function calls:
 14220 ;;		Nothing
 14221 ;; This function is called by:
 14222 ;;		_main
 14223 ;; This function uses a non-reentrant model
 14224 ;;
 14225                           psect	text19,class=CODE,space=0,reloc=2,group=0
 14226                           	file	"main.c"
 14227                           	line	121
 14228                           global __ptext19
 14229                           __ptext19:
 14230  004868                     psect	text19
 14231                           	file	"main.c"
 14232                           	line	121
 14233                           	global	__size_of_reloadTimer3
 14234                           	__size_of_reloadTimer3	equ	__end_of_reloadTimer3-_reloadTimer3
 14235  0000                     	
 14236                           _reloadTimer3:; BSR set to: 0
 14237  004868                     
 14238                           ;incstack = 0
 14239                           	opt	stack 27
 14240                           	line	122
 14241                           	
 14242                           l4171:
 14243  004868                     ;main.c: 122: TMR3H = 0x9E;
 14244                           	movlw	low(09Eh)
 14245  004868  0E9E               	movwf	((c:4019)),c	;volatile
 14246  00486A  6EB3               	line	123
 14247                           ;main.c: 123: TMR3L = 0x58;
 14248                           	movlw	low(058h)
 14249  00486C  0E58               	movwf	((c:4018)),c	;volatile
 14250  00486E  6EB2               	line	124
 14251                           	
 14252                           l4173:
 14253  004870                     ;main.c: 124: PIR2bits.TMR3IF = 0;
 14254                           	bcf	((c:4001)),c,1	;volatile
 14255  004870  92A1               	line	125
 14256                           	
 14257                           l235:
 14258  004872                     	return	;funcret
 14259  004872  0012               	opt stack 0
 14260                           GLOBAL	__end_of_reloadTimer3
 14261                           	__end_of_reloadTimer3:
 14262  004874                     	signat	_reloadTimer3,89
 14263                           	global	_read_adc_voltage
 14264                           
 14265 ;; *************** function _read_adc_voltage *****************
 14266 ;; Defined at:
 14267 ;;		line 48 in file "my_adc.c"
 14268 ;; Parameters:    Size  Location     Type
 14269 ;;  channel         1    wreg     unsigned char 
 14270 ;; Auto vars:     Size  Location     Type
 14271 ;;  channel         1   21[BANK0 ] unsigned char 
 14272 ;;  voltage         4   17[BANK0 ] float 
 14273 ;;  raw_value       2   22[BANK0 ] int 
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  4   13[BANK0 ] float 
 14276 ;; Registers used:
 14277 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 14283 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14284 ;;      Locals:         0       7       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14286 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14287 ;;Total ram usage:       11 bytes
 14288 ;; Hardware stack levels used:    1
 14289 ;; Hardware stack levels required when called:    4
 14290 ;; This function calls:
 14291 ;;		___fldiv
 14292 ;;		___wmul
 14293 ;;		___xxtofl
 14294 ;;		_read_adc_raw_no_lib
 14295 ;; This function is called by:
 14296 ;;		_main
 14297 ;; This function uses a non-reentrant model
 14298 ;;
 14299                           psect	text20,class=CODE,space=0,reloc=2,group=0
 14300                           	file	"my_adc.c"
 14301                           	line	48
 14302                           global __ptext20
 14303                           __ptext20:
 14304  00428C                     psect	text20
 14305                           	file	"my_adc.c"
 14306                           	line	48
 14307                           	global	__size_of_read_adc_voltage
 14308                           	__size_of_read_adc_voltage	equ	__end_of_read_adc_voltage-_read_adc_voltage
 14309  0000                     	
 14310                           _read_adc_voltage:
 14311  00428C                     ;incstack = 0
 14312                           	opt	stack 26
 14313                           ;read_adc_voltage@channel stored from wreg
 14314                           	movlb	0	; () banked
 14315  00428C  0100               	movwf	((read_adc_voltage@channel))&0ffh
 14316  00428E  6F95               	line	51
 14317                           	
 14318                           l5367:
 14319  004290                     ;my_adc.c: 49: int raw_value;
 14320                           ;my_adc.c: 50: float voltage;
 14321                           ;my_adc.c: 51: raw_value = read_adc_raw_no_lib(channel);
 14322                           	movlb	0	; () banked
 14323  004290  0100               	movf	((read_adc_voltage@channel))&0ffh,w
 14324  004292  5195               	
 14325                           	call	_read_adc_raw_no_lib
 14326  004294  ECCF  F022         	movff	0+?_read_adc_raw_no_lib,(read_adc_voltage@raw_value)
 14327  004298  C01E  F096         	movff	1+?_read_adc_raw_no_lib,(read_adc_voltage@raw_value+1)
 14328  00429C  C01F  F097         	line	52
 14329                           	
 14330                           l5369:
 14331  0042A0                     ;my_adc.c: 52: voltage = (raw_value * 5) / 1023.0;
 14332                           	movff	(read_adc_voltage@raw_value),(c:___wmul@multiplier)
 14333  0042A0  C096  F01E         	movff	(read_adc_voltage@raw_value+1),(c:___wmul@multiplier+1)
 14334  0042A4  C097  F01F         	movlw	high(05h)
 14335  0042A8  0E00               	movwf	((c:___wmul@multiplicand+1)),c
 14336  0042AA  6E21               	movlw	low(05h)
 14337  0042AC  0E05               	movwf	((c:___wmul@multiplicand)),c
 14338  0042AE  6E20               	call	___wmul	;wreg free
 14339  0042B0  ECF9  F023         	movff	0+?___wmul,(c:___xxtofl@val)
 14340  0042B4  C01E  F024         	movff	1+?___wmul,(c:___xxtofl@val+1)
 14341  0042B8  C01F  F025         	movlw	0
 14342  0042BC  0E00               	btfsc	((c:___xxtofl@val+1)),c,7
 14343  0042BE  BE25               	movlw	-1
 14344  0042C0  0EFF               	movwf	((c:___xxtofl@val+2)),c
 14345  0042C2  6E26               	movwf	((c:___xxtofl@val+3)),c
 14346  0042C4  6E27               	movlw	(01h)&0ffh
 14347  0042C6  0E01               	
 14348                           	call	___xxtofl
 14349  0042C8  EC95  F01A         	movff	0+?___xxtofl,(c:___fldiv@b)
 14350  0042CC  C024  F045         	movff	1+?___xxtofl,(c:___fldiv@b+1)
 14351  0042D0  C025  F046         	movff	2+?___xxtofl,(c:___fldiv@b+2)
 14352  0042D4  C026  F047         	movff	3+?___xxtofl,(c:___fldiv@b+3)
 14353  0042D8  C027  F048         	
 14354                           	movlw	low(normalize32(1023.0000000000000))
 14355  0042DC  0E00               	movwf	((c:___fldiv@a)),c
 14356  0042DE  6E49               	movlw	high(normalize32(1023.0000000000000))
 14357  0042E0  0EC0               	movwf	((c:___fldiv@a+1)),c
 14358  0042E2  6E4A               	movlw	low highword(normalize32(1023.0000000000000))
 14359  0042E4  0E7F               	movwf	((c:___fldiv@a+2)),c
 14360  0042E6  6E4B               	movlw	high highword(normalize32(1023.0000000000000))
 14361  0042E8  0E44               	movwf	((c:___fldiv@a+3)),c
 14362  0042EA  6E4C               	call	___fldiv	;wreg free
 14363  0042EC  EC6F  F015         	movff	0+?___fldiv,(read_adc_voltage@voltage)
 14364  0042F0  C045  F091         	movff	1+?___fldiv,(read_adc_voltage@voltage+1)
 14365  0042F4  C046  F092         	movff	2+?___fldiv,(read_adc_voltage@voltage+2)
 14366  0042F8  C047  F093         	movff	3+?___fldiv,(read_adc_voltage@voltage+3)
 14367  0042FC  C048  F094         	
 14368                           	line	53
 14369                           	
 14370                           l5371:
 14371  004300                     ;my_adc.c: 53: return voltage;
 14372                           	movff	(read_adc_voltage@voltage),(?_read_adc_voltage)
 14373  004300  C091  F08D         	movff	(read_adc_voltage@voltage+1),(?_read_adc_voltage+1)
 14374  004304  C092  F08E         	movff	(read_adc_voltage@voltage+2),(?_read_adc_voltage+2)
 14375  004308  C093  F08F         	movff	(read_adc_voltage@voltage+3),(?_read_adc_voltage+3)
 14376  00430C  C094  F090         	goto	l22
 14377  004310  EF8A  F021         	
 14378                           l5373:
 14379  004314                     	line	60
 14380                           	
 14381                           l22:
 14382  004314                     	return	;funcret
 14383  004314  0012               	opt stack 0
 14384                           GLOBAL	__end_of_read_adc_voltage
 14385                           	__end_of_read_adc_voltage:
 14386  004316                     	signat	_read_adc_voltage,4220
 14387                           	global	_read_adc_raw_no_lib
 14388                           
 14389 ;; *************** function _read_adc_raw_no_lib *****************
 14390 ;; Defined at:
 14391 ;;		line 32 in file "my_adc.c"
 14392 ;; Parameters:    Size  Location     Type
 14393 ;;  channel         1    wreg     unsigned char 
 14394 ;; Auto vars:     Size  Location     Type
 14395 ;;  channel         1   35[COMRAM] unsigned char 
 14396 ;;  raw_value       2   33[COMRAM] int 
 14397 ;; Return value:  Size  Location     Type
 14398 ;;                  2   29[COMRAM] int 
 14399 ;; Registers used:
 14400 ;;		wreg, status,2, status,0
 14401 ;; Tracked objects:
 14402 ;;		On entry : 0/0
 14403 ;;		On exit  : 0/0
 14404 ;;		Unchanged: 0/0
 14405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 14406 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14407 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14408 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14409 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14410 ;;Total ram usage:        7 bytes
 14411 ;; Hardware stack levels used:    1
 14412 ;; Hardware stack levels required when called:    3
 14413 ;; This function calls:
 14414 ;;		Nothing
 14415 ;; This function is called by:
 14416 ;;		_read_adc_voltage
 14417 ;; This function uses a non-reentrant model
 14418 ;;
 14419                           psect	text21,class=CODE,space=0,reloc=2,group=0
 14420                           	line	32
 14421                           global __ptext21
 14422                           __ptext21:
 14423  00459E                     psect	text21
 14424                           	file	"my_adc.c"
 14425                           	line	32
 14426                           	global	__size_of_read_adc_raw_no_lib
 14427                           	__size_of_read_adc_raw_no_lib	equ	__end_of_read_adc_raw_no_lib-_read_adc_raw_no_lib
 14428  0000                     	
 14429                           _read_adc_raw_no_lib:
 14430  00459E                     ;incstack = 0
 14431                           	opt	stack 26
 14432                           ;read_adc_raw_no_lib@channel stored from wreg
 14433                           	movwf	((c:read_adc_raw_no_lib@channel)),c
 14434  00459E  6E24               	line	34
 14435                           	
 14436                           l3527:
 14437  0045A0                     ;my_adc.c: 33: int raw_value;
 14438                           ;my_adc.c: 34: ADCON0bits.CHS = channel;
 14439                           	movff	(c:read_adc_raw_no_lib@channel),??_read_adc_raw_no_lib+0+0
 14440  0045A0  C024  F020         	rlncf	(??_read_adc_raw_no_lib+0+0),c
 14441  0045A4  4620               	rlncf	(??_read_adc_raw_no_lib+0+0),c
 14442  0045A6  4620               	movf	((c:4034)),c,w	;volatile
 14443  0045A8  50C2               	xorwf	(??_read_adc_raw_no_lib+0+0),c,w
 14444  0045AA  1820               	andlw	not (((1<<4)-1)<<2)
 14445  0045AC  0BC3               	xorwf	(??_read_adc_raw_no_lib+0+0),c,w
 14446  0045AE  1820               	movwf	((c:4034)),c	;volatile
 14447  0045B0  6EC2               	line	37
 14448                           	
 14449                           l3529:
 14450  0045B2                     ;my_adc.c: 37: ADCON0bits.GO = 1;
 14451                           	bsf	((c:4034)),c,1	;volatile
 14452  0045B2  82C2               	line	39
 14453                           ;my_adc.c: 39: while (ADCON0bits.GO) {};
 14454                           	goto	l16
 14455  0045B4  EFDC  F022         	
 14456                           l17:
 14457  0045B8                     	
 14458                           l16:
 14459  0045B8                     	btfsc	((c:4034)),c,1	;volatile
 14460  0045B8  B2C2               	goto	u3431
 14461  0045BA  EFE1  F022         	goto	u3430
 14462  0045BE  EFE3  F022         u3431:
 14463  0045C2                     	goto	l16
 14464  0045C2  EFDC  F022         u3430:
 14465  0045C6                     	goto	l3531
 14466  0045C6  EFE5  F022         	
 14467                           l18:
 14468  0045CA                     	line	41
 14469                           	
 14470                           l3531:
 14471  0045CA                     ;my_adc.c: 41: raw_value = ADRESH << 8 | ADRESL;
 14472                           	movf	((c:4035)),c,w	;volatile
 14473  0045CA  50C3               	movff	(c:4036),??_read_adc_raw_no_lib+0+0	;volatile
 14474  0045CC  CFC4 F020          	clrf	(??_read_adc_raw_no_lib+0+0+1)&0ffh,c
 14475  0045D0  6A21               	movff	??_read_adc_raw_no_lib+0+0,??_read_adc_raw_no_lib+0+1
 14476  0045D2  C020  F021         	clrf	(??_read_adc_raw_no_lib+0+0),c
 14477  0045D6  6A20               	iorwf	(??_read_adc_raw_no_lib+0+0),c,w
 14478  0045D8  1020               	movwf	((c:read_adc_raw_no_lib@raw_value)),c
 14479  0045DA  6E22               	movf	(??_read_adc_raw_no_lib+0+1),c,w
 14480  0045DC  5021               	movwf	1+((c:read_adc_raw_no_lib@raw_value)),c
 14481  0045DE  6E23               	line	45
 14482                           	
 14483                           l3533:
 14484  0045E0                     ;my_adc.c: 45: return raw_value;
 14485                           	movff	(c:read_adc_raw_no_lib@raw_value),(c:?_read_adc_raw_no_lib)
 14486  0045E0  C022  F01E         	movff	(c:read_adc_raw_no_lib@raw_value+1),(c:?_read_adc_raw_no_lib+1)
 14487  0045E4  C023  F01F         	goto	l19
 14488  0045E8  EFF6  F022         	
 14489                           l3535:
 14490  0045EC                     	line	46
 14491                           	
 14492                           l19:
 14493  0045EC                     	return	;funcret
 14494  0045EC  0012               	opt stack 0
 14495                           GLOBAL	__end_of_read_adc_raw_no_lib
 14496                           	__end_of_read_adc_raw_no_lib:
 14497  0045EE                     	signat	_read_adc_raw_no_lib,4218
 14498                           	global	___xxtofl
 14499                           
 14500 ;; *************** function ___xxtofl *****************
 14501 ;; Defined at:
 14502 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 14503 ;; Parameters:    Size  Location     Type
 14504 ;;  sign            1    wreg     unsigned char 
 14505 ;;  val             4   35[COMRAM] long 
 14506 ;; Auto vars:     Size  Location     Type
 14507 ;;  sign            1   43[COMRAM] unsigned char 
 14508 ;;  arg             4   45[COMRAM] unsigned long 
 14509 ;;  exp             1   44[COMRAM] unsigned char 
 14510 ;; Return value:  Size  Location     Type
 14511 ;;                  4   35[COMRAM] unsigned char 
 14512 ;; Registers used:
 14513 ;;		wreg, status,2, status,0
 14514 ;; Tracked objects:
 14515 ;;		On entry : 0/0
 14516 ;;		On exit  : 0/0
 14517 ;;		Unchanged: 0/0
 14518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 14519 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14520 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14521 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14522 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14523 ;;Total ram usage:       14 bytes
 14524 ;; Hardware stack levels used:    1
 14525 ;; Hardware stack levels required when called:    3
 14526 ;; This function calls:
 14527 ;;		Nothing
 14528 ;; This function is called by:
 14529 ;;		_read_adc_voltage
 14530 ;;		_main
 14531 ;;		_sprintf
 14532 ;; This function uses a non-reentrant model
 14533 ;;
 14534                           psect	text22,class=CODE,space=0,reloc=2,group=1
 14535                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 14536                           	line	10
 14537                           global __ptext22
 14538                           __ptext22:
 14539  00352A                     psect	text22
 14540                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\xxtofl.c"
 14541                           	line	10
 14542                           	global	__size_of___xxtofl
 14543                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
 14544  0000                     	
 14545                           ___xxtofl:
 14546  00352A                     ;incstack = 0
 14547                           	opt	stack 26
 14548                           ;___xxtofl@sign stored from wreg
 14549                           	movwf	((c:___xxtofl@sign)),c
 14550  00352A  6E2C               	line	15
 14551                           	
 14552                           l4001:
 14553  00352C                     	movf	((c:___xxtofl@sign)),c,w
 14554  00352C  502C               	btfsc	status,2
 14555  00352E  B4D8               	goto	u4111
 14556  003530  EF9C  F01A         	goto	u4110
 14557  003534  EF9E  F01A         u4111:
 14558  003538                     	goto	l1057
 14559  003538  EFC0  F01A         u4110:
 14560  00353C                     	
 14561                           l4003:
 14562  00353C                     	btfsc	((c:___xxtofl@val+3)),c,7
 14563  00353C  BE27               	goto	u4120
 14564  00353E  EFA5  F01A         	goto	u4121
 14565  003542  EFA3  F01A         
 14566                           u4121:
 14567  003546                     	goto	l1057
 14568  003546  EFC0  F01A         u4120:
 14569  00354A                     	line	16
 14570                           	
 14571                           l4005:
 14572  00354A                     	movff	(c:___xxtofl@val),??___xxtofl+0+0
 14573  00354A  C024  F028         	movff	(c:___xxtofl@val+1),??___xxtofl+0+0+1
 14574  00354E  C025  F029         	movff	(c:___xxtofl@val+2),??___xxtofl+0+0+2
 14575  003552  C026  F02A         	movff	(c:___xxtofl@val+3),??___xxtofl+0+0+3
 14576  003556  C027  F02B         	comf	(??___xxtofl+0+0),c
 14577  00355A  1E28               	comf	(??___xxtofl+0+1),c
 14578  00355C  1E29               	comf	(??___xxtofl+0+2),c
 14579  00355E  1E2A               	comf	(??___xxtofl+0+3),c
 14580  003560  1E2B               	incf	(??___xxtofl+0+0),c
 14581  003562  2A28               	movlw	0
 14582  003564  0E00               	addwfc	(??___xxtofl+0+1),c
 14583  003566  2229               	addwfc	(??___xxtofl+0+2),c
 14584  003568  222A               	addwfc	(??___xxtofl+0+3),c
 14585  00356A  222B               	movff	??___xxtofl+0+0,(c:___xxtofl@arg)
 14586  00356C  C028  F02E         	movff	??___xxtofl+0+1,(c:___xxtofl@arg+1)
 14587  003570  C029  F02F         	movff	??___xxtofl+0+2,(c:___xxtofl@arg+2)
 14588  003574  C02A  F030         	movff	??___xxtofl+0+3,(c:___xxtofl@arg+3)
 14589  003578  C02B  F031         	line	17
 14590                           	goto	l4007
 14591  00357C  EFCA  F01A         	line	18
 14592                           	
 14593                           l1057:
 14594  003580                     	line	19
 14595                           	movff	(c:___xxtofl@val),(c:___xxtofl@arg)
 14596  003580  C024  F02E         	movff	(c:___xxtofl@val+1),(c:___xxtofl@arg+1)
 14597  003584  C025  F02F         	movff	(c:___xxtofl@val+2),(c:___xxtofl@arg+2)
 14598  003588  C026  F030         	movff	(c:___xxtofl@val+3),(c:___xxtofl@arg+3)
 14599  00358C  C027  F031         	goto	l4007
 14600  003590  EFCA  F01A         	line	20
 14601                           	
 14602                           l1058:
 14603  003594                     	line	21
 14604                           	
 14605                           l4007:
 14606  003594                     	movf	((c:___xxtofl@val)),c,w
 14607  003594  5024               iorwf	((c:___xxtofl@val+1)),c,w
 14608  003596  1025               iorwf	((c:___xxtofl@val+2)),c,w
 14609  003598  1026               iorwf	((c:___xxtofl@val+3)),c,w
 14610  00359A  1027               	btfss	status,2
 14611  00359C  A4D8               	goto	u4131
 14612  00359E  EFD3  F01A         	goto	u4130
 14613  0035A2  EFD5  F01A         
 14614                           u4131:
 14615  0035A6                     	goto	l4013
 14616  0035A6  EFE1  F01A         u4130:
 14617  0035AA                     	line	22
 14618                           	
 14619                           l4009:
 14620  0035AA                     	movlw	low(normalize32(0.0000000000000000))
 14621  0035AA  0E00               	movwf	((c:?___xxtofl)),c
 14622  0035AC  6E24               	movlw	high(normalize32(0.0000000000000000))
 14623  0035AE  0E00               	movwf	((c:?___xxtofl+1)),c
 14624  0035B0  6E25               	movlw	low highword(normalize32(0.0000000000000000))
 14625  0035B2  0E00               	movwf	((c:?___xxtofl+2)),c
 14626  0035B4  6E26               	movlw	high highword(normalize32(0.0000000000000000))
 14627  0035B6  0E00               	movwf	((c:?___xxtofl+3)),c
 14628  0035B8  6E27               	goto	l1060
 14629  0035BA  EF87  F01B         	
 14630                           l4011:
 14631  0035BE                     	goto	l1060
 14632  0035BE  EF87  F01B         	
 14633                           l1059:
 14634  0035C2                     	line	23
 14635                           	
 14636                           l4013:
 14637  0035C2                     	movlw	low(096h)
 14638  0035C2  0E96               	movwf	((c:___xxtofl@exp)),c
 14639  0035C4  6E2D               	line	24
 14640                           	goto	l4017
 14641  0035C6  EFED  F01A         	
 14642                           l1062:
 14643  0035CA                     	line	25
 14644                           	
 14645                           l4015:
 14646  0035CA                     	incf	((c:___xxtofl@exp)),c
 14647  0035CA  2A2D               	line	26
 14648                           	bcf	status,0
 14649  0035CC  90D8               	rrcf	((c:___xxtofl@arg+3)),c
 14650  0035CE  3231               	rrcf	((c:___xxtofl@arg+2)),c
 14651  0035D0  3230               	rrcf	((c:___xxtofl@arg+1)),c
 14652  0035D2  322F               	rrcf	((c:___xxtofl@arg)),c
 14653  0035D4  322E               	goto	l4017
 14654  0035D6  EFED  F01A         	line	27
 14655                           	
 14656                           l1061:
 14657  0035DA                     	line	24
 14658                           	
 14659                           l4017:
 14660  0035DA                     	movlw	0
 14661  0035DA  0E00               	andwf	((c:___xxtofl@arg)),c,w
 14662  0035DC  142E               	movwf	(??___xxtofl+0+0)&0ffh,c
 14663  0035DE  6E28               	movlw	0
 14664  0035E0  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
 14665  0035E2  142F               	movwf	1+(??___xxtofl+0+0)&0ffh,c
 14666  0035E4  6E29               	
 14667                           	movlw	0
 14668  0035E6  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
 14669  0035E8  1430               	movwf	2+(??___xxtofl+0+0)&0ffh,c
 14670  0035EA  6E2A               	
 14671                           	movlw	0FEh
 14672  0035EC  0EFE               	andwf	((c:___xxtofl@arg+3)),c,w
 14673  0035EE  1431               	movwf	3+(??___xxtofl+0+0)&0ffh,c
 14674  0035F0  6E2B               	movf	(??___xxtofl+0+0),c,w
 14675  0035F2  5028               iorwf	(??___xxtofl+0+1),c,w
 14676  0035F4  1029               iorwf	(??___xxtofl+0+2),c,w
 14677  0035F6  102A               iorwf	(??___xxtofl+0+3),c,w
 14678  0035F8  102B               	btfss	status,2
 14679  0035FA  A4D8               	goto	u4141
 14680  0035FC  EF02  F01B         	goto	u4140
 14681  003600  EF04  F01B         
 14682                           u4141:
 14683  003604                     	goto	l4015
 14684  003604  EFE5  F01A         u4140:
 14685  003608                     	goto	l1064
 14686  003608  EF14  F01B         	
 14687                           l1063:
 14688  00360C                     	line	28
 14689                           	goto	l1064
 14690  00360C  EF14  F01B         	
 14691                           l1065:
 14692  003610                     	line	29
 14693                           	
 14694                           l4019:
 14695  003610                     	incf	((c:___xxtofl@exp)),c
 14696  003610  2A2D               	line	30
 14697                           	
 14698                           l4021:
 14699  003612                     	movlw	low(01h)
 14700  003612  0E01               	addwf	((c:___xxtofl@arg)),c
 14701  003614  262E               	movlw	0
 14702  003616  0E00               	addwfc	((c:___xxtofl@arg+1)),c
 14703  003618  222F               	addwfc	((c:___xxtofl@arg+2)),c
 14704  00361A  2230               	addwfc	((c:___xxtofl@arg+3)),c
 14705  00361C  2231               	line	31
 14706                           	
 14707                           l4023:
 14708  00361E                     	bcf	status,0
 14709  00361E  90D8               	rrcf	((c:___xxtofl@arg+3)),c
 14710  003620  3231               	rrcf	((c:___xxtofl@arg+2)),c
 14711  003622  3230               	rrcf	((c:___xxtofl@arg+1)),c
 14712  003624  322F               	rrcf	((c:___xxtofl@arg)),c
 14713  003626  322E               	line	32
 14714                           	
 14715                           l1064:
 14716  003628                     	line	28
 14717                           	movlw	0
 14718  003628  0E00               	andwf	((c:___xxtofl@arg)),c,w
 14719  00362A  142E               	movwf	(??___xxtofl+0+0)&0ffh,c
 14720  00362C  6E28               	movlw	0
 14721  00362E  0E00               	andwf	((c:___xxtofl@arg+1)),c,w
 14722  003630  142F               	movwf	1+(??___xxtofl+0+0)&0ffh,c
 14723  003632  6E29               	
 14724                           	movlw	0
 14725  003634  0E00               	andwf	((c:___xxtofl@arg+2)),c,w
 14726  003636  1430               	movwf	2+(??___xxtofl+0+0)&0ffh,c
 14727  003638  6E2A               	
 14728                           	movlw	0FFh
 14729  00363A  0EFF               	andwf	((c:___xxtofl@arg+3)),c,w
 14730  00363C  1431               	movwf	3+(??___xxtofl+0+0)&0ffh,c
 14731  00363E  6E2B               	movf	(??___xxtofl+0+0),c,w
 14732  003640  5028               iorwf	(??___xxtofl+0+1),c,w
 14733  003642  1029               iorwf	(??___xxtofl+0+2),c,w
 14734  003644  102A               iorwf	(??___xxtofl+0+3),c,w
 14735  003646  102B               	btfss	status,2
 14736  003648  A4D8               	goto	u4151
 14737  00364A  EF29  F01B         	goto	u4150
 14738  00364E  EF2B  F01B         
 14739                           u4151:
 14740  003652                     	goto	l4019
 14741  003652  EF08  F01B         u4150:
 14742  003656                     	goto	l4027
 14743  003656  EF37  F01B         	
 14744                           l1066:
 14745  00365A                     	line	33
 14746                           	goto	l4027
 14747  00365A  EF37  F01B         	
 14748                           l1068:
 14749  00365E                     	line	34
 14750                           	
 14751                           l4025:
 14752  00365E                     	decf	((c:___xxtofl@exp)),c
 14753  00365E  062D               	line	35
 14754                           	bcf	status,0
 14755  003660  90D8               	rlcf	((c:___xxtofl@arg)),c
 14756  003662  362E               	rlcf	((c:___xxtofl@arg+1)),c
 14757  003664  362F               	rlcf	((c:___xxtofl@arg+2)),c
 14758  003666  3630               	rlcf	((c:___xxtofl@arg+3)),c
 14759  003668  3631               	goto	l4027
 14760  00366A  EF37  F01B         	line	36
 14761                           	
 14762                           l1067:
 14763  00366E                     	line	33
 14764                           	
 14765                           l4027:
 14766  00366E                     	
 14767                           	btfsc	((c:___xxtofl@arg+2)),c,(23)&7
 14768  00366E  BE30               	goto	u4161
 14769  003670  EF3C  F01B         	goto	u4160
 14770  003674  EF3E  F01B         u4161:
 14771  003678                     	goto	l1071
 14772  003678  EF48  F01B         u4160:
 14773  00367C                     	
 14774                           l4029:
 14775  00367C                     		movlw	02h-0
 14776  00367C  0E02               	cpfslt	((c:___xxtofl@exp)),c
 14777  00367E  602D               	goto	u4171
 14778  003680  EF44  F01B         	goto	u4170
 14779  003684  EF46  F01B         
 14780                           u4171:
 14781  003688                     	goto	l4025
 14782  003688  EF2F  F01B         u4170:
 14783  00368C                     	goto	l1071
 14784  00368C  EF48  F01B         	
 14785                           l1070:
 14786  003690                     	
 14787                           l1071:
 14788  003690                     	line	37
 14789                           	
 14790                           	btfsc	((c:___xxtofl@exp)),c,(0)&7
 14791  003690  B02D               	goto	u4181
 14792  003692  EF4D  F01B         	goto	u4180
 14793  003696  EF4F  F01B         u4181:
 14794  00369A                     	goto	l1072
 14795  00369A  EF57  F01B         u4180:
 14796  00369E                     	line	38
 14797                           	
 14798                           l4031:
 14799  00369E                     	movlw	0FFh
 14800  00369E  0EFF               	andwf	((c:___xxtofl@arg)),c
 14801  0036A0  162E               	movlw	0FFh
 14802  0036A2  0EFF               	andwf	((c:___xxtofl@arg+1)),c
 14803  0036A4  162F               	movlw	07Fh
 14804  0036A6  0E7F               	andwf	((c:___xxtofl@arg+2)),c
 14805  0036A8  1630               	movlw	0FFh
 14806  0036AA  0EFF               	andwf	((c:___xxtofl@arg+3)),c
 14807  0036AC  1631               	
 14808                           l1072:
 14809  0036AE                     	line	39
 14810                           	bcf status,0
 14811  0036AE  90D8               	rrcf	((c:___xxtofl@exp)),c
 14812  0036B0  322D               
 14813                           	line	40
 14814                           	movff	(c:___xxtofl@exp),??___xxtofl+0+0
 14815  0036B2  C02D  F028         	clrf	(??___xxtofl+0+0+1)&0ffh,c
 14816  0036B6  6A29               	clrf	(??___xxtofl+0+0+2)&0ffh,c
 14817  0036B8  6A2A               	clrf	(??___xxtofl+0+0+3)&0ffh,c
 14818  0036BA  6A2B               	movff	??___xxtofl+0+0,??___xxtofl+0+3
 14819  0036BC  C028  F02B         	clrf	(??___xxtofl+0+2),c
 14820  0036C0  6A2A               	clrf	(??___xxtofl+0+1),c
 14821  0036C2  6A29               	clrf	(??___xxtofl+0+0),c
 14822  0036C4  6A28               	movf	(??___xxtofl+0+0),c,w
 14823  0036C6  5028               	iorwf	((c:___xxtofl@arg)),c
 14824  0036C8  122E               	movf	(??___xxtofl+0+1),c,w
 14825  0036CA  5029               	iorwf	((c:___xxtofl@arg+1)),c
 14826  0036CC  122F               	movf	(??___xxtofl+0+2),c,w
 14827  0036CE  502A               	iorwf	((c:___xxtofl@arg+2)),c
 14828  0036D0  1230               	movf	(??___xxtofl+0+3),c,w
 14829  0036D2  502B               	iorwf	((c:___xxtofl@arg+3)),c
 14830  0036D4  1231               
 14831                           	line	41
 14832                           	
 14833                           l4033:
 14834  0036D6                     	movf	((c:___xxtofl@sign)),c,w
 14835  0036D6  502C               	btfsc	status,2
 14836  0036D8  B4D8               	goto	u4191
 14837  0036DA  EF71  F01B         	goto	u4190
 14838  0036DE  EF73  F01B         u4191:
 14839  0036E2                     	goto	l4039
 14840  0036E2  EF7D  F01B         u4190:
 14841  0036E6                     	
 14842                           l4035:
 14843  0036E6                     	btfsc	((c:___xxtofl@val+3)),c,7
 14844  0036E6  BE27               	goto	u4200
 14845  0036E8  EF7A  F01B         	goto	u4201
 14846  0036EC  EF78  F01B         
 14847                           u4201:
 14848  0036F0                     	goto	l4039
 14849  0036F0  EF7D  F01B         u4200:
 14850  0036F4                     	line	42
 14851                           	
 14852                           l4037:
 14853  0036F4                     	bsf	(0+(31/8)+(c:___xxtofl@arg)),c,(31)&7
 14854  0036F4  8E31               	goto	l4039
 14855  0036F6  EF7D  F01B         	
 14856                           l1073:
 14857  0036FA                     	line	43
 14858                           	
 14859                           l4039:
 14860  0036FA                     	movff	(c:___xxtofl@arg),(c:?___xxtofl)
 14861  0036FA  C02E  F024         	movff	(c:___xxtofl@arg+1),(c:?___xxtofl+1)
 14862  0036FE  C02F  F025         	movff	(c:___xxtofl@arg+2),(c:?___xxtofl+2)
 14863  003702  C030  F026         	movff	(c:___xxtofl@arg+3),(c:?___xxtofl+3)
 14864  003706  C031  F027         	goto	l1060
 14865  00370A  EF87  F01B         	
 14866                           l4041:
 14867  00370E                     	line	44
 14868                           	
 14869                           l1060:
 14870  00370E                     	return	;funcret
 14871  00370E  0012               	opt stack 0
 14872                           GLOBAL	__end_of___xxtofl
 14873                           	__end_of___xxtofl:
 14874  003710                     	signat	___xxtofl,8316
 14875                           	global	___wmul
 14876                           
 14877 ;; *************** function ___wmul *****************
 14878 ;; Defined at:
 14879 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14880 ;; Parameters:    Size  Location     Type
 14881 ;;  multiplier      2   29[COMRAM] unsigned int 
 14882 ;;  multiplicand    2   31[COMRAM] unsigned int 
 14883 ;; Auto vars:     Size  Location     Type
 14884 ;;  product         2   33[COMRAM] unsigned int 
 14885 ;; Return value:  Size  Location     Type
 14886 ;;                  2   29[COMRAM] unsigned int 
 14887 ;; Registers used:
 14888 ;;		wreg, status,2, status,0, prodl, prodh
 14889 ;; Tracked objects:
 14890 ;;		On entry : 0/0
 14891 ;;		On exit  : 0/0
 14892 ;;		Unchanged: 0/0
 14893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 14894 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14895 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14896 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14897 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14898 ;;Total ram usage:        6 bytes
 14899 ;; Hardware stack levels used:    1
 14900 ;; Hardware stack levels required when called:    3
 14901 ;; This function calls:
 14902 ;;		Nothing
 14903 ;; This function is called by:
 14904 ;;		_read_adc_voltage
 14905 ;;		_main
 14906 ;;		_sprintf
 14907 ;; This function uses a non-reentrant model
 14908 ;;
 14909                           psect	text23,class=CODE,space=0,reloc=2,group=1
 14910                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14911                           	line	15
 14912                           global __ptext23
 14913                           __ptext23:
 14914  0047F2                     psect	text23
 14915                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
 14916                           	line	15
 14917                           	global	__size_of___wmul
 14918                           	__size_of___wmul	equ	__end_of___wmul-___wmul
 14919  0000                     	
 14920                           ___wmul:
 14921  0047F2                     ;incstack = 0
 14922                           	opt	stack 26
 14923                           	line	37
 14924                           	
 14925                           l3741:
 14926  0047F2                     	movf	((c:___wmul@multiplier)),c,w
 14927  0047F2  501E               	mulwf	((c:___wmul@multiplicand)),c
 14928  0047F4  0220               	movff	prodl,(c:___wmul@product)
 14929  0047F6  CFF3 F022          	movff	prodh,(c:___wmul@product+1)
 14930  0047FA  CFF4 F023          	line	38
 14931                           	movf	((c:___wmul@multiplier)),c,w
 14932  0047FE  501E               	mulwf	(0+((c:___wmul@multiplicand)+01h)),c
 14933  004800  0221               	movf	(prodl),c,w
 14934  004802  50F3               	addwf	((c:___wmul@product+1)),c
 14935  004804  2623               
 14936                           	line	39
 14937                           	movf	(0+((c:___wmul@multiplier)+01h)),c,w
 14938  004806  501F               	mulwf	((c:___wmul@multiplicand)),c
 14939  004808  0220               	movf	(prodl),c,w
 14940  00480A  50F3               	addwf	((c:___wmul@product+1)),c
 14941  00480C  2623               
 14942                           	line	52
 14943                           	
 14944                           l3743:
 14945  00480E                     	movff	(c:___wmul@product),(c:?___wmul)
 14946  00480E  C022  F01E         	movff	(c:___wmul@product+1),(c:?___wmul+1)
 14947  004812  C023  F01F         	goto	l469
 14948  004816  EF0D  F024         	
 14949                           l3745:
 14950  00481A                     	line	53
 14951                           	
 14952                           l469:
 14953  00481A                     	return	;funcret
 14954  00481A  0012               	opt stack 0
 14955                           GLOBAL	__end_of___wmul
 14956                           	__end_of___wmul:
 14957  00481C                     	signat	___wmul,8314
 14958                           	global	___fldiv
 14959                           
 14960 ;; *************** function ___fldiv *****************
 14961 ;; Defined at:
 14962 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 14963 ;; Parameters:    Size  Location     Type
 14964 ;;  b               4   68[COMRAM] unsigned int 
 14965 ;;  a               4   72[COMRAM] unsigned int 
 14966 ;; Auto vars:     Size  Location     Type
 14967 ;;  grs             4    7[BANK0 ] unsigned long 
 14968 ;;  rem             4    1[BANK0 ] unsigned long 
 14969 ;;  new_exp         2    5[BANK0 ] int 
 14970 ;;  aexp            1   12[BANK0 ] unsigned char 
 14971 ;;  bexp            1   11[BANK0 ] unsigned char 
 14972 ;;  sign            1    0[BANK0 ] unsigned char 
 14973 ;; Return value:  Size  Location     Type
 14974 ;;                  4   68[COMRAM] unsigned char 
 14975 ;; Registers used:
 14976 ;;		wreg, status,2, status,0
 14977 ;; Tracked objects:
 14978 ;;		On entry : 0/0
 14979 ;;		On exit  : 0/0
 14980 ;;		Unchanged: 0/0
 14981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 14982 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14983 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14984 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14985 ;;      Totals:        12      13       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 14986 ;;Total ram usage:       25 bytes
 14987 ;; Hardware stack levels used:    1
 14988 ;; Hardware stack levels required when called:    3
 14989 ;; This function calls:
 14990 ;;		Nothing
 14991 ;; This function is called by:
 14992 ;;		_read_adc_voltage
 14993 ;;		_set_pwm1_percent
 14994 ;;		_main
 14995 ;;		_set_pwm1_voltage
 14996 ;;		_set_pwm1_general
 14997 ;; This function uses a non-reentrant model
 14998 ;;
 14999                           psect	text24,class=CODE,space=0,reloc=2,group=1
 15000                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 15001                           	line	11
 15002                           global __ptext24
 15003                           __ptext24:
 15004  002ADE                     psect	text24
 15005                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\sprcdiv.c"
 15006                           	line	11
 15007                           	global	__size_of___fldiv
 15008                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
 15009  0000                     	
 15010                           ___fldiv:
 15011  002ADE                     ;incstack = 0
 15012                           	opt	stack 26
 15013                           	line	26
 15014                           	
 15015                           l5181:
 15016  002ADE                     	movf	(0+((c:___fldiv@b)+03h)),c,w
 15017  002ADE  5048               	andlw	low(080h)
 15018  002AE0  0B80               	movlb	0	; () banked
 15019  002AE2  0100               	movwf	((___fldiv@sign))&0ffh
 15020  002AE4  6F80               	line	27
 15021                           	movf	(0+((c:___fldiv@b)+03h)),c,w
 15022  002AE6  5048               	addwf	(0+((c:___fldiv@b)+03h)),c,w
 15023  002AE8  2448               	movwf	((___fldiv@bexp))&0ffh
 15024  002AEA  6F8B               	line	28
 15025                           	
 15026                           l5183:; BSR set to: 0
 15027  002AEC                     
 15028                           	
 15029                           	btfss	(0+((c:___fldiv@b)+02h)),c,(7)&7
 15030  002AEC  AE47               	goto	u5761
 15031  002AEE  EF7B  F015         	goto	u5760
 15032  002AF2  EF7D  F015         u5761:
 15033  002AF6                     	goto	l5187
 15034  002AF6  EF80  F015         u5760:
 15035  002AFA                     	line	29
 15036                           	
 15037                           l5185:; BSR set to: 0
 15038  002AFA                     
 15039                           	bsf	(0+(0/8)+(___fldiv@bexp))&0ffh,(0)&7
 15040  002AFA  818B               	goto	l5187
 15041  002AFC  EF80  F015         	line	30
 15042                           	
 15043                           l994:; BSR set to: 0
 15044  002B00                     
 15045                           	line	33
 15046                           	
 15047                           l5187:; BSR set to: 0
 15048  002B00                     
 15049                           	movf	((___fldiv@bexp))&0ffh,w
 15050  002B00  518B               	btfsc	status,2
 15051  002B02  B4D8               	goto	u5771
 15052  002B04  EF86  F015         	goto	u5770
 15053  002B08  EF88  F015         u5771:
 15054  002B0C                     	goto	l5197
 15055  002B0C  EF9F  F015         u5770:
 15056  002B10                     	line	35
 15057                           	
 15058                           l5189:; BSR set to: 0
 15059  002B10                     
 15060                           		incf	((___fldiv@bexp))&0ffh,w
 15061  002B10  298B               	btfss	status,2
 15062  002B12  A4D8               	goto	u5781
 15063  002B14  EF8E  F015         	goto	u5780
 15064  002B18  EF90  F015         
 15065                           u5781:
 15066  002B1C                     	goto	l5193
 15067  002B1C  EF9A  F015         u5780:
 15068  002B20                     	line	37
 15069                           	
 15070                           l5191:; BSR set to: 0
 15071  002B20                     
 15072                           	movlw	low(normalize32(0.0000000000000000))
 15073  002B20  0E00               	movwf	((c:___fldiv@b)),c
 15074  002B22  6E45               	movlw	high(normalize32(0.0000000000000000))
 15075  002B24  0E00               	movwf	((c:___fldiv@b+1)),c
 15076  002B26  6E46               	movlw	low highword(normalize32(0.0000000000000000))
 15077  002B28  0E00               	movwf	((c:___fldiv@b+2)),c
 15078  002B2A  6E47               	movlw	high highword(normalize32(0.0000000000000000))
 15079  002B2C  0E00               	movwf	((c:___fldiv@b+3)),c
 15080  002B2E  6E48               	goto	l5193
 15081  002B30  EF9A  F015         	line	38
 15082                           	
 15083                           l996:; BSR set to: 0
 15084  002B34                     
 15085                           	line	40
 15086                           	
 15087                           l5193:; BSR set to: 0
 15088  002B34                     
 15089                           	bsf	(0+(23/8)+(c:___fldiv@b)),c,(23)&7
 15090  002B34  8E47               	line	42
 15091                           	
 15092                           l5195:; BSR set to: 0
 15093  002B36                     
 15094                           	movlw	low(0)
 15095  002B36  0E00               	movwf	(0+((c:___fldiv@b)+03h)),c
 15096  002B38  6E48               	line	43
 15097                           	goto	l5199
 15098  002B3A  EFA9  F015         	line	44
 15099                           	
 15100                           l995:; BSR set to: 0
 15101  002B3E                     
 15102                           	line	46
 15103                           	
 15104                           l5197:; BSR set to: 0
 15105  002B3E                     
 15106                           	movlw	low(normalize32(0.0000000000000000))
 15107  002B3E  0E00               	movwf	((c:___fldiv@b)),c
 15108  002B40  6E45               	movlw	high(normalize32(0.0000000000000000))
 15109  002B42  0E00               	movwf	((c:___fldiv@b+1)),c
 15110  002B44  6E46               	movlw	low highword(normalize32(0.0000000000000000))
 15111  002B46  0E00               	movwf	((c:___fldiv@b+2)),c
 15112  002B48  6E47               	movlw	high highword(normalize32(0.0000000000000000))
 15113  002B4A  0E00               	movwf	((c:___fldiv@b+3)),c
 15114  002B4C  6E48               	goto	l5199
 15115  002B4E  EFA9  F015         	line	47
 15116                           	
 15117                           l997:; BSR set to: 0
 15118  002B52                     
 15119                           	line	49
 15120                           	
 15121                           l5199:; BSR set to: 0
 15122  002B52                     
 15123                           	movf	(0+((c:___fldiv@a)+03h)),c,w
 15124  002B52  504C               	andlw	low(080h)
 15125  002B54  0B80               	xorwf	((___fldiv@sign))&0ffh
 15126  002B56  1B80               	line	50
 15127                           	
 15128                           l5201:; BSR set to: 0
 15129  002B58                     
 15130                           	movf	(0+((c:___fldiv@a)+03h)),c,w
 15131  002B58  504C               	addwf	(0+((c:___fldiv@a)+03h)),c,w
 15132  002B5A  244C               	movwf	((___fldiv@aexp))&0ffh
 15133  002B5C  6F8C               	line	51
 15134                           	
 15135                           l5203:; BSR set to: 0
 15136  002B5E                     
 15137                           	
 15138                           	btfss	(0+((c:___fldiv@a)+02h)),c,(7)&7
 15139  002B5E  AE4B               	goto	u5791
 15140  002B60  EFB4  F015         	goto	u5790
 15141  002B64  EFB6  F015         u5791:
 15142  002B68                     	goto	l5207
 15143  002B68  EFB9  F015         u5790:
 15144  002B6C                     	line	52
 15145                           	
 15146                           l5205:; BSR set to: 0
 15147  002B6C                     
 15148                           	bsf	(0+(0/8)+(___fldiv@aexp))&0ffh,(0)&7
 15149  002B6C  818C               	goto	l5207
 15150  002B6E  EFB9  F015         	line	53
 15151                           	
 15152                           l998:; BSR set to: 0
 15153  002B72                     
 15154                           	line	56
 15155                           	
 15156                           l5207:; BSR set to: 0
 15157  002B72                     
 15158                           	movf	((___fldiv@aexp))&0ffh,w
 15159  002B72  518C               	btfsc	status,2
 15160  002B74  B4D8               	goto	u5801
 15161  002B76  EFBF  F015         	goto	u5800
 15162  002B7A  EFC1  F015         u5801:
 15163  002B7E                     	goto	l5217
 15164  002B7E  EFD8  F015         u5800:
 15165  002B82                     	line	58
 15166                           	
 15167                           l5209:; BSR set to: 0
 15168  002B82                     
 15169                           		incf	((___fldiv@aexp))&0ffh,w
 15170  002B82  298C               	btfss	status,2
 15171  002B84  A4D8               	goto	u5811
 15172  002B86  EFC7  F015         	goto	u5810
 15173  002B8A  EFC9  F015         
 15174                           u5811:
 15175  002B8E                     	goto	l5213
 15176  002B8E  EFD3  F015         u5810:
 15177  002B92                     	line	60
 15178                           	
 15179                           l5211:; BSR set to: 0
 15180  002B92                     
 15181                           	movlw	low(normalize32(0.0000000000000000))
 15182  002B92  0E00               	movwf	((c:___fldiv@a)),c
 15183  002B94  6E49               	movlw	high(normalize32(0.0000000000000000))
 15184  002B96  0E00               	movwf	((c:___fldiv@a+1)),c
 15185  002B98  6E4A               	movlw	low highword(normalize32(0.0000000000000000))
 15186  002B9A  0E00               	movwf	((c:___fldiv@a+2)),c
 15187  002B9C  6E4B               	movlw	high highword(normalize32(0.0000000000000000))
 15188  002B9E  0E00               	movwf	((c:___fldiv@a+3)),c
 15189  002BA0  6E4C               	goto	l5213
 15190  002BA2  EFD3  F015         	line	61
 15191                           	
 15192                           l1000:; BSR set to: 0
 15193  002BA6                     
 15194                           	line	63
 15195                           	
 15196                           l5213:; BSR set to: 0
 15197  002BA6                     
 15198                           	bsf	(0+(23/8)+(c:___fldiv@a)),c,(23)&7
 15199  002BA6  8E4B               	line	65
 15200                           	
 15201                           l5215:; BSR set to: 0
 15202  002BA8                     
 15203                           	movlw	low(0)
 15204  002BA8  0E00               	movwf	(0+((c:___fldiv@a)+03h)),c
 15205  002BAA  6E4C               	line	66
 15206                           	goto	l5219
 15207  002BAC  EFE2  F015         	line	67
 15208                           	
 15209                           l999:; BSR set to: 0
 15210  002BB0                     
 15211                           	line	69
 15212                           	
 15213                           l5217:; BSR set to: 0
 15214  002BB0                     
 15215                           	movlw	low(normalize32(0.0000000000000000))
 15216  002BB0  0E00               	movwf	((c:___fldiv@a)),c
 15217  002BB2  6E49               	movlw	high(normalize32(0.0000000000000000))
 15218  002BB4  0E00               	movwf	((c:___fldiv@a+1)),c
 15219  002BB6  6E4A               	movlw	low highword(normalize32(0.0000000000000000))
 15220  002BB8  0E00               	movwf	((c:___fldiv@a+2)),c
 15221  002BBA  6E4B               	movlw	high highword(normalize32(0.0000000000000000))
 15222  002BBC  0E00               	movwf	((c:___fldiv@a+3)),c
 15223  002BBE  6E4C               	goto	l5219
 15224  002BC0  EFE2  F015         	line	70
 15225                           	
 15226                           l1001:; BSR set to: 0
 15227  002BC4                     
 15228                           	line	75
 15229                           	
 15230                           l5219:; BSR set to: 0
 15231  002BC4                     
 15232                           	movf	((c:___fldiv@a)),c,w
 15233  002BC4  5049               iorwf	((c:___fldiv@a+1)),c,w
 15234  002BC6  104A               iorwf	((c:___fldiv@a+2)),c,w
 15235  002BC8  104B               iorwf	((c:___fldiv@a+3)),c,w
 15236  002BCA  104C               	btfss	status,2
 15237  002BCC  A4D8               	goto	u5821
 15238  002BCE  EFEB  F015         	goto	u5820
 15239  002BD2  EFED  F015         
 15240                           u5821:
 15241  002BD6                     	goto	l5229
 15242  002BD6  EF05  F016         u5820:
 15243  002BDA                     	line	76
 15244                           	
 15245                           l5221:; BSR set to: 0
 15246  002BDA                     
 15247                           	movlw	low(0)
 15248  002BDA  0E00               	movwf	((c:___fldiv@b)),c
 15249  002BDC  6E45               	movlw	high(0)
 15250  002BDE  0E00               	movwf	((c:___fldiv@b+1)),c
 15251  002BE0  6E46               	movlw	low highword(0)
 15252  002BE2  0E00               	movwf	((c:___fldiv@b+2)),c
 15253  002BE4  6E47               	movlw	high highword(0)
 15254  002BE6  0E00               	movwf	((c:___fldiv@b+3)),c
 15255  002BE8  6E48               	line	77
 15256                           	
 15257                           l5223:; BSR set to: 0
 15258  002BEA                     
 15259                           	movlw	low(07F80h)
 15260  002BEA  0E80               	iorwf	(0+((c:___fldiv@b)+02h)),c
 15261  002BEC  1247               	movlw	high(07F80h)
 15262  002BEE  0E7F               	iorwf	(1+((c:___fldiv@b)+02h)),c
 15263  002BF0  1248               	line	78
 15264                           	
 15265                           l5225:; BSR set to: 0
 15266  002BF2                     
 15267                           	movff	(c:___fldiv@b),(c:?___fldiv)
 15268  002BF2  C045  F045         	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
 15269  002BF6  C046  F046         	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
 15270  002BFA  C047  F047         	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
 15271  002BFE  C048  F048         	goto	l1003
 15272  002C02  EF7D  F017         	
 15273                           l5227:; BSR set to: 0
 15274  002C06                     
 15275                           	goto	l1003
 15276  002C06  EF7D  F017         	line	79
 15277                           	
 15278                           l1002:; BSR set to: 0
 15279  002C0A                     
 15280                           	line	82
 15281                           	
 15282                           l5229:; BSR set to: 0
 15283  002C0A                     
 15284                           	movf	((___fldiv@bexp))&0ffh,w
 15285  002C0A  518B               	btfss	status,2
 15286  002C0C  A4D8               	goto	u5831
 15287  002C0E  EF0B  F016         	goto	u5830
 15288  002C12  EF0D  F016         u5831:
 15289  002C16                     	goto	l5237
 15290  002C16  EF21  F016         u5830:
 15291  002C1A                     	line	83
 15292                           	
 15293                           l5231:; BSR set to: 0
 15294  002C1A                     
 15295                           	movlw	low(0)
 15296  002C1A  0E00               	movwf	((c:___fldiv@b)),c
 15297  002C1C  6E45               	movlw	high(0)
 15298  002C1E  0E00               	movwf	((c:___fldiv@b+1)),c
 15299  002C20  6E46               	movlw	low highword(0)
 15300  002C22  0E00               	movwf	((c:___fldiv@b+2)),c
 15301  002C24  6E47               	movlw	high highword(0)
 15302  002C26  0E00               	movwf	((c:___fldiv@b+3)),c
 15303  002C28  6E48               	line	84
 15304                           	
 15305                           l5233:; BSR set to: 0
 15306  002C2A                     
 15307                           	movff	(c:___fldiv@b),(c:?___fldiv)
 15308  002C2A  C045  F045         	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
 15309  002C2E  C046  F046         	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
 15310  002C32  C047  F047         	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
 15311  002C36  C048  F048         	goto	l1003
 15312  002C3A  EF7D  F017         	
 15313                           l5235:; BSR set to: 0
 15314  002C3E                     
 15315                           	goto	l1003
 15316  002C3E  EF7D  F017         	line	85
 15317                           	
 15318                           l1004:; BSR set to: 0
 15319  002C42                     
 15320                           	line	88
 15321                           	
 15322                           l5237:; BSR set to: 0
 15323  002C42                     
 15324                           	movf	((___fldiv@aexp))&0ffh,w
 15325  002C42  518C               	movwf	(??___fldiv+0+0)&0ffh,c
 15326  002C44  6E4D               	clrf	(??___fldiv+0+0+1)&0ffh,c
 15327  002C46  6A4E               
 15328                           	comf	(??___fldiv+0+0),c
 15329  002C48  1E4D               	comf	(??___fldiv+0+1),c
 15330  002C4A  1E4E               	infsnz	(??___fldiv+0+0),c
 15331  002C4C  4A4D               	incf	(??___fldiv+0+1),c
 15332  002C4E  2A4E               	movf	((___fldiv@bexp))&0ffh,w
 15333  002C50  518B               	movwf	(??___fldiv+2+0)&0ffh,c
 15334  002C52  6E4F               	clrf	(??___fldiv+2+0+1)&0ffh,c
 15335  002C54  6A50               
 15336                           	movf	(??___fldiv+0+0),c,w
 15337  002C56  504D               	addwf	(??___fldiv+2+0),c
 15338  002C58  264F               	movf	(??___fldiv+0+1),c,w
 15339  002C5A  504E               	addwfc	(??___fldiv+2+1),c
 15340  002C5C  2250               	movlw	low(07Fh)
 15341  002C5E  0E7F               	addwf	(??___fldiv+2+0),c,w
 15342  002C60  244F               	movwf	((___fldiv@new_exp))&0ffh
 15343  002C62  6F85               	movlw	high(07Fh)
 15344  002C64  0E00               	addwfc	(??___fldiv+2+1),c,w
 15345  002C66  2050               	movwf	1+((___fldiv@new_exp))&0ffh
 15346  002C68  6F86               	line	91
 15347                           	
 15348                           l5239:; BSR set to: 0
 15349  002C6A                     
 15350                           	movff	(c:___fldiv@b),(___fldiv@rem)
 15351  002C6A  C045  F081         	movff	(c:___fldiv@b+1),(___fldiv@rem+1)
 15352  002C6E  C046  F082         	movff	(c:___fldiv@b+2),(___fldiv@rem+2)
 15353  002C72  C047  F083         	movff	(c:___fldiv@b+3),(___fldiv@rem+3)
 15354  002C76  C048  F084         	line	92
 15355                           	
 15356                           l5241:; BSR set to: 0
 15357  002C7A                     
 15358                           	movlw	low(0)
 15359  002C7A  0E00               	movwf	((c:___fldiv@b)),c
 15360  002C7C  6E45               	movlw	high(0)
 15361  002C7E  0E00               	movwf	((c:___fldiv@b+1)),c
 15362  002C80  6E46               	movlw	low highword(0)
 15363  002C82  0E00               	movwf	((c:___fldiv@b+2)),c
 15364  002C84  6E47               	movlw	high highword(0)
 15365  002C86  0E00               	movwf	((c:___fldiv@b+3)),c
 15366  002C88  6E48               	line	93
 15367                           	
 15368                           l5243:; BSR set to: 0
 15369  002C8A                     
 15370                           	movlw	low(0)
 15371  002C8A  0E00               	movwf	((___fldiv@grs))&0ffh
 15372  002C8C  6F87               	movlw	high(0)
 15373  002C8E  0E00               	movwf	((___fldiv@grs+1))&0ffh
 15374  002C90  6F88               	movlw	low highword(0)
 15375  002C92  0E00               	movwf	((___fldiv@grs+2))&0ffh
 15376  002C94  6F89               	movlw	high highword(0)
 15377  002C96  0E00               	movwf	((___fldiv@grs+3))&0ffh
 15378  002C98  6F8A               	line	95
 15379                           	
 15380                           l5245:; BSR set to: 0
 15381  002C9A                     
 15382                           	movlw	low(0)
 15383  002C9A  0E00               	movwf	((___fldiv@aexp))&0ffh
 15384  002C9C  6F8C               	line	96
 15385                           	goto	l1005
 15386  002C9E  EF8D  F016         	
 15387                           l1006:; BSR set to: 0
 15388  002CA2                     
 15389                           	line	99
 15390                           	
 15391                           l5247:; BSR set to: 0
 15392  002CA2                     
 15393                           	movf	((___fldiv@aexp))&0ffh,w
 15394  002CA2  518C               	btfsc	status,2
 15395  002CA4  B4D8               	goto	u5841
 15396  002CA6  EF57  F016         	goto	u5840
 15397  002CAA  EF59  F016         u5841:
 15398  002CAE                     	goto	l5255
 15399  002CAE  EF72  F016         u5840:
 15400  002CB2                     	line	100
 15401                           	
 15402                           l5249:; BSR set to: 0
 15403  002CB2                     
 15404                           	bcf	status,0
 15405  002CB2  90D8               	rlcf	((___fldiv@rem))&0ffh
 15406  002CB4  3781               	rlcf	((___fldiv@rem+1))&0ffh
 15407  002CB6  3782               	rlcf	((___fldiv@rem+2))&0ffh
 15408  002CB8  3783               	rlcf	((___fldiv@rem+3))&0ffh
 15409  002CBA  3784               	line	101
 15410                           	bcf	status,0
 15411  002CBC  90D8               	rlcf	((c:___fldiv@b)),c
 15412  002CBE  3645               	rlcf	((c:___fldiv@b+1)),c
 15413  002CC0  3646               	rlcf	((c:___fldiv@b+2)),c
 15414  002CC2  3647               	rlcf	((c:___fldiv@b+3)),c
 15415  002CC4  3648               	line	102
 15416                           	
 15417                           l5251:; BSR set to: 0
 15418  002CC6                     
 15419                           	
 15420                           	btfss	((___fldiv@grs+3))&0ffh,(31)&7
 15421  002CC6  AF8A               	goto	u5851
 15422  002CC8  EF68  F016         	goto	u5850
 15423  002CCC  EF6A  F016         u5851:
 15424  002CD0                     	goto	l1008
 15425  002CD0  EF6B  F016         u5850:
 15426  002CD4                     	line	103
 15427                           	
 15428                           l5253:; BSR set to: 0
 15429  002CD4                     
 15430                           	bsf	(0+(0/8)+(c:___fldiv@b)),c,(0)&7
 15431  002CD4  8045               	line	104
 15432                           	
 15433                           l1008:; BSR set to: 0
 15434  002CD6                     
 15435                           	line	105
 15436                           	bcf	status,0
 15437  002CD6  90D8               	rlcf	((___fldiv@grs))&0ffh
 15438  002CD8  3787               	rlcf	((___fldiv@grs+1))&0ffh
 15439  002CDA  3788               	rlcf	((___fldiv@grs+2))&0ffh
 15440  002CDC  3789               	rlcf	((___fldiv@grs+3))&0ffh
 15441  002CDE  378A               	goto	l5255
 15442  002CE0  EF72  F016         	line	106
 15443                           	
 15444                           l1007:; BSR set to: 0
 15445  002CE4                     
 15446                           	line	111
 15447                           	
 15448                           l5255:; BSR set to: 0
 15449  002CE4                     
 15450                           		movf	((c:___fldiv@a)),c,w
 15451  002CE4  5049               	subwf	((___fldiv@rem))&0ffh,w
 15452  002CE6  5D81               	movf	((c:___fldiv@a+1)),c,w
 15453  002CE8  504A               	subwfb	((___fldiv@rem+1))&0ffh,w
 15454  002CEA  5982               	movf	((c:___fldiv@a+2)),c,w
 15455  002CEC  504B               	subwfb	((___fldiv@rem+2))&0ffh,w
 15456  002CEE  5983               	movf	((c:___fldiv@a+3)),c,w
 15457  002CF0  504C               	subwfb	((___fldiv@rem+3))&0ffh,w
 15458  002CF2  5984               	btfss	status,0
 15459  002CF4  A0D8               	goto	u5861
 15460  002CF6  EF7F  F016         	goto	u5860
 15461  002CFA  EF81  F016         
 15462                           u5861:
 15463  002CFE                     	goto	l5261
 15464  002CFE  EF8C  F016         u5860:
 15465  002D02                     	line	114
 15466                           	
 15467                           l5257:; BSR set to: 0
 15468  002D02                     
 15469                           	bsf	(0+(30/8)+(___fldiv@grs))&0ffh,(30)&7
 15470  002D02  8D8A               	line	115
 15471                           	
 15472                           l5259:; BSR set to: 0
 15473  002D04                     
 15474                           	movf	((c:___fldiv@a)),c,w
 15475  002D04  5049               	subwf	((___fldiv@rem))&0ffh
 15476  002D06  5F81               	movf	((c:___fldiv@a+1)),c,w
 15477  002D08  504A               	subwfb	((___fldiv@rem+1))&0ffh
 15478  002D0A  5B82               	movf	((c:___fldiv@a+2)),c,w
 15479  002D0C  504B               	subwfb	((___fldiv@rem+2))&0ffh
 15480  002D0E  5B83               	movf	((c:___fldiv@a+3)),c,w
 15481  002D10  504C               	subwfb	((___fldiv@rem+3))&0ffh
 15482  002D12  5B84               	goto	l5261
 15483  002D14  EF8C  F016         	line	116
 15484                           	
 15485                           l1009:; BSR set to: 0
 15486  002D18                     
 15487                           	line	117
 15488                           	
 15489                           l5261:; BSR set to: 0
 15490  002D18                     
 15491                           	incf	((___fldiv@aexp))&0ffh
 15492  002D18  2B8C               	line	118
 15493                           	
 15494                           l1005:; BSR set to: 0
 15495  002D1A                     
 15496                           	line	96
 15497                           		movlw	01Ah-1
 15498  002D1A  0E19               	cpfsgt	((___fldiv@aexp))&0ffh
 15499  002D1C  658C               	goto	u5871
 15500  002D1E  EF93  F016         	goto	u5870
 15501  002D22  EF95  F016         
 15502                           u5871:
 15503  002D26                     	goto	l5247
 15504  002D26  EF51  F016         u5870:
 15505  002D2A                     	goto	l5263
 15506  002D2A  EF97  F016         	
 15507                           l1010:; BSR set to: 0
 15508  002D2E                     
 15509                           	line	121
 15510                           	
 15511                           l5263:; BSR set to: 0
 15512  002D2E                     
 15513                           	movf	((___fldiv@rem))&0ffh,w
 15514  002D2E  5181               iorwf	((___fldiv@rem+1))&0ffh,w
 15515  002D30  1182               iorwf	((___fldiv@rem+2))&0ffh,w
 15516  002D32  1183               iorwf	((___fldiv@rem+3))&0ffh,w
 15517  002D34  1184               	btfsc	status,2
 15518  002D36  B4D8               	goto	u5881
 15519  002D38  EFA0  F016         	goto	u5880
 15520  002D3C  EFA2  F016         
 15521                           u5881:
 15522  002D40                     	goto	l5273
 15523  002D40  EFBE  F016         u5880:
 15524  002D44                     	line	122
 15525                           	
 15526                           l5265:; BSR set to: 0
 15527  002D44                     
 15528                           	bsf	(0+(0/8)+(___fldiv@grs))&0ffh,(0)&7
 15529  002D44  8187               	goto	l5273
 15530  002D46  EFBE  F016         	line	123
 15531                           	
 15532                           l1011:; BSR set to: 0
 15533  002D4A                     
 15534                           	line	126
 15535                           	goto	l5273
 15536  002D4A  EFBE  F016         	
 15537                           l1013:; BSR set to: 0
 15538  002D4E                     
 15539                           	line	127
 15540                           	
 15541                           l5267:; BSR set to: 0
 15542  002D4E                     
 15543                           	bcf	status,0
 15544  002D4E  90D8               	rlcf	((c:___fldiv@b)),c
 15545  002D50  3645               	rlcf	((c:___fldiv@b+1)),c
 15546  002D52  3646               	rlcf	((c:___fldiv@b+2)),c
 15547  002D54  3647               	rlcf	((c:___fldiv@b+3)),c
 15548  002D56  3648               	line	128
 15549                           	
 15550                           l5269:; BSR set to: 0
 15551  002D58                     
 15552                           	
 15553                           	btfss	((___fldiv@grs+3))&0ffh,(31)&7
 15554  002D58  AF8A               	goto	u5891
 15555  002D5A  EFB1  F016         	goto	u5890
 15556  002D5E  EFB3  F016         u5891:
 15557  002D62                     	goto	l1014
 15558  002D62  EFB4  F016         u5890:
 15559  002D66                     	line	129
 15560                           	
 15561                           l5271:; BSR set to: 0
 15562  002D66                     
 15563                           	bsf	(0+(0/8)+(c:___fldiv@b)),c,(0)&7
 15564  002D66  8045               	line	130
 15565                           	
 15566                           l1014:; BSR set to: 0
 15567  002D68                     
 15568                           	line	131
 15569                           	bcf	status,0
 15570  002D68  90D8               	rlcf	((___fldiv@grs))&0ffh
 15571  002D6A  3787               	rlcf	((___fldiv@grs+1))&0ffh
 15572  002D6C  3788               	rlcf	((___fldiv@grs+2))&0ffh
 15573  002D6E  3789               	rlcf	((___fldiv@grs+3))&0ffh
 15574  002D70  378A               	line	132
 15575                           	decf	((___fldiv@new_exp))&0ffh
 15576  002D72  0785               	btfss	status,0
 15577  002D74  A0D8               	decf	((___fldiv@new_exp+1))&0ffh
 15578  002D76  0786               	goto	l5273
 15579  002D78  EFBE  F016         	line	133
 15580                           	
 15581                           l1012:; BSR set to: 0
 15582  002D7C                     
 15583                           	line	126
 15584                           	
 15585                           l5273:; BSR set to: 0
 15586  002D7C                     
 15587                           	
 15588                           	btfss	((c:___fldiv@b+2)),c,(23)&7
 15589  002D7C  AE47               	goto	u5901
 15590  002D7E  EFC3  F016         	goto	u5900
 15591  002D82  EFC5  F016         u5901:
 15592  002D86                     	goto	l5267
 15593  002D86  EFA7  F016         u5900:
 15594  002D8A                     	goto	l5275
 15595  002D8A  EFC7  F016         	
 15596                           l1015:; BSR set to: 0
 15597  002D8E                     
 15598                           	line	138
 15599                           	
 15600                           l5275:; BSR set to: 0
 15601  002D8E                     
 15602                           	movlw	low(0)
 15603  002D8E  0E00               	movwf	((___fldiv@aexp))&0ffh
 15604  002D90  6F8C               	line	139
 15605                           	
 15606                           l5277:; BSR set to: 0
 15607  002D92                     
 15608                           	
 15609                           	btfss	((___fldiv@grs+3))&0ffh,(31)&7
 15610  002D92  AF8A               	goto	u5911
 15611  002D94  EFCE  F016         	goto	u5910
 15612  002D98  EFD0  F016         u5911:
 15613  002D9C                     	goto	l1016
 15614  002D9C  EFF8  F016         u5910:
 15615  002DA0                     	line	140
 15616                           	
 15617                           l5279:; BSR set to: 0
 15618  002DA0                     
 15619                           	movlw	0FFh
 15620  002DA0  0EFF               	andwf	((___fldiv@grs))&0ffh,w
 15621  002DA2  1587               	movwf	(??___fldiv+0+0)&0ffh,c
 15622  002DA4  6E4D               	movlw	0FFh
 15623  002DA6  0EFF               	andwf	((___fldiv@grs+1))&0ffh,w
 15624  002DA8  1588               	movwf	1+(??___fldiv+0+0)&0ffh,c
 15625  002DAA  6E4E               	
 15626                           	movlw	0FFh
 15627  002DAC  0EFF               	andwf	((___fldiv@grs+2))&0ffh,w
 15628  002DAE  1589               	movwf	2+(??___fldiv+0+0)&0ffh,c
 15629  002DB0  6E4F               	
 15630                           	movlw	07Fh
 15631  002DB2  0E7F               	andwf	((___fldiv@grs+3))&0ffh,w
 15632  002DB4  158A               	movwf	3+(??___fldiv+0+0)&0ffh,c
 15633  002DB6  6E50               	movf	(??___fldiv+0+0),c,w
 15634  002DB8  504D               iorwf	(??___fldiv+0+1),c,w
 15635  002DBA  104E               iorwf	(??___fldiv+0+2),c,w
 15636  002DBC  104F               iorwf	(??___fldiv+0+3),c,w
 15637  002DBE  1050               	btfsc	status,2
 15638  002DC0  B4D8               	goto	u5921
 15639  002DC2  EFE5  F016         	goto	u5920
 15640  002DC6  EFE7  F016         
 15641                           u5921:
 15642  002DCA                     	goto	l1017
 15643  002DCA  EFEB  F016         u5920:
 15644  002DCE                     	line	141
 15645                           	
 15646                           l5281:; BSR set to: 0
 15647  002DCE                     
 15648                           	movlw	low(01h)
 15649  002DCE  0E01               	movwf	((___fldiv@aexp))&0ffh
 15650  002DD0  6F8C               	line	142
 15651                           	goto	l1016
 15652  002DD2  EFF8  F016         	line	143
 15653                           	
 15654                           l1017:; BSR set to: 0
 15655  002DD6                     
 15656                           	line	144
 15657                           	
 15658                           	btfss	((c:___fldiv@b)),c,(0)&7
 15659  002DD6  A045               	goto	u5931
 15660  002DD8  EFF0  F016         	goto	u5930
 15661  002DDC  EFF2  F016         u5931:
 15662  002DE0                     	goto	l1016
 15663  002DE0  EFF8  F016         u5930:
 15664  002DE4                     	line	145
 15665                           	
 15666                           l5283:; BSR set to: 0
 15667  002DE4                     
 15668                           	movlw	low(01h)
 15669  002DE4  0E01               	movwf	((___fldiv@aexp))&0ffh
 15670  002DE6  6F8C               	goto	l1016
 15671  002DE8  EFF8  F016         	line	146
 15672                           	
 15673                           l1019:; BSR set to: 0
 15674  002DEC                     
 15675                           	goto	l1016
 15676  002DEC  EFF8  F016         	line	147
 15677                           	
 15678                           l1018:; BSR set to: 0
 15679  002DF0                     
 15680                           	line	148
 15681                           	
 15682                           l1016:; BSR set to: 0
 15683  002DF0                     
 15684                           	line	149
 15685                           	movf	((___fldiv@aexp))&0ffh,w
 15686  002DF0  518C               	btfsc	status,2
 15687  002DF2  B4D8               	goto	u5941
 15688  002DF4  EFFE  F016         	goto	u5940
 15689  002DF8  EF00  F017         u5941:
 15690  002DFC                     	goto	l5293
 15691  002DFC  EF28  F017         u5940:
 15692  002E00                     	line	150
 15693                           	
 15694                           l5285:; BSR set to: 0
 15695  002E00                     
 15696                           	movlw	low(01h)
 15697  002E00  0E01               	addwf	((c:___fldiv@b)),c
 15698  002E02  2645               	movlw	0
 15699  002E04  0E00               	addwfc	((c:___fldiv@b+1)),c
 15700  002E06  2246               	addwfc	((c:___fldiv@b+2)),c
 15701  002E08  2247               	addwfc	((c:___fldiv@b+3)),c
 15702  002E0A  2248               	line	151
 15703                           	
 15704                           l5287:; BSR set to: 0
 15705  002E0C                     
 15706                           	
 15707                           	btfss	((c:___fldiv@b+3)),c,(24)&7
 15708  002E0C  A048               	goto	u5951
 15709  002E0E  EF0B  F017         	goto	u5950
 15710  002E12  EF0D  F017         u5951:
 15711  002E16                     	goto	l5293
 15712  002E16  EF28  F017         u5950:
 15713  002E1A                     	line	152
 15714                           	
 15715                           l5289:; BSR set to: 0
 15716  002E1A                     
 15717                           	movff	(c:___fldiv@b),??___fldiv+0+0
 15718  002E1A  C045  F04D         	movff	(c:___fldiv@b+1),??___fldiv+0+0+1
 15719  002E1E  C046  F04E         	movff	(c:___fldiv@b+2),??___fldiv+0+0+2
 15720  002E22  C047  F04F         	movff	(c:___fldiv@b+3),??___fldiv+0+0+3
 15721  002E26  C048  F050         	rlcf	(??___fldiv+0+3),c,w
 15722  002E2A  3450               	rrcf	(??___fldiv+0+3),c
 15723  002E2C  3250               	rrcf	(??___fldiv+0+2),c
 15724  002E2E  324F               	rrcf	(??___fldiv+0+1),c
 15725  002E30  324E               	rrcf	(??___fldiv+0+0),c
 15726  002E32  324D               	movff	??___fldiv+0+0,(c:___fldiv@b)
 15727  002E34  C04D  F045         	movff	??___fldiv+0+1,(c:___fldiv@b+1)
 15728  002E38  C04E  F046         	movff	??___fldiv+0+2,(c:___fldiv@b+2)
 15729  002E3C  C04F  F047         	movff	??___fldiv+0+3,(c:___fldiv@b+3)
 15730  002E40  C050  F048         	line	153
 15731                           	
 15732                           l5291:; BSR set to: 0
 15733  002E44                     
 15734                           	infsnz	((___fldiv@new_exp))&0ffh
 15735  002E44  4B85               	incf	((___fldiv@new_exp+1))&0ffh
 15736  002E46  2B86               	goto	l5293
 15737  002E48  EF28  F017         	line	154
 15738                           	
 15739                           l1021:; BSR set to: 0
 15740  002E4C                     
 15741                           	goto	l5293
 15742  002E4C  EF28  F017         	line	155
 15743                           	
 15744                           l1020:; BSR set to: 0
 15745  002E50                     
 15746                           	line	158
 15747                           	
 15748                           l5293:; BSR set to: 0
 15749  002E50                     
 15750                           	btfsc	((___fldiv@new_exp+1))&0ffh,7
 15751  002E50  BF86               	goto	u5961
 15752  002E52  EF33  F017         	movf	((___fldiv@new_exp+1))&0ffh,w
 15753  002E56  5186               	bnz	u5960
 15754  002E58  E108               	incf	((___fldiv@new_exp))&0ffh,w
 15755  002E5A  2985               	btfss	status,0
 15756  002E5C  A0D8               	goto	u5961
 15757  002E5E  EF33  F017         	goto	u5960
 15758  002E62  EF35  F017         
 15759                           u5961:
 15760  002E66                     	goto	l5297
 15761  002E66  EF42  F017         u5960:
 15762  002E6A                     	line	159
 15763                           	
 15764                           l5295:; BSR set to: 0
 15765  002E6A                     
 15766                           	movlw	high(0FFh)
 15767  002E6A  0E00               	movwf	((___fldiv@new_exp+1))&0ffh
 15768  002E6C  6F86               	setf	((___fldiv@new_exp))&0ffh
 15769  002E6E  6985               	line	160
 15770                           	movlw	low(0)
 15771  002E70  0E00               	movwf	((c:___fldiv@b)),c
 15772  002E72  6E45               	movlw	high(0)
 15773  002E74  0E00               	movwf	((c:___fldiv@b+1)),c
 15774  002E76  6E46               	movlw	low highword(0)
 15775  002E78  0E00               	movwf	((c:___fldiv@b+2)),c
 15776  002E7A  6E47               	movlw	high highword(0)
 15777  002E7C  0E00               	movwf	((c:___fldiv@b+3)),c
 15778  002E7E  6E48               	goto	l5297
 15779  002E80  EF42  F017         	line	161
 15780                           	
 15781                           l1022:; BSR set to: 0
 15782  002E84                     
 15783                           	line	164
 15784                           	
 15785                           l5297:; BSR set to: 0
 15786  002E84                     
 15787                           	btfsc	((___fldiv@new_exp+1))&0ffh,7
 15788  002E84  BF86               	goto	u5970
 15789  002E86  EF4F  F017         	movf	((___fldiv@new_exp+1))&0ffh,w
 15790  002E8A  5186               	bnz	u5971
 15791  002E8C  E106               	decf	((___fldiv@new_exp))&0ffh,w
 15792  002E8E  0585               	btfsc	status,0
 15793  002E90  B0D8               	goto	u5971
 15794  002E92  EF4D  F017         	goto	u5970
 15795  002E96  EF4F  F017         
 15796                           u5971:
 15797  002E9A                     	goto	l5301
 15798  002E9A  EF5F  F017         u5970:
 15799  002E9E                     	line	165
 15800                           	
 15801                           l5299:; BSR set to: 0
 15802  002E9E                     
 15803                           	movlw	high(0)
 15804  002E9E  0E00               	movwf	((___fldiv@new_exp+1))&0ffh
 15805  002EA0  6F86               	movlw	low(0)
 15806  002EA2  0E00               	movwf	((___fldiv@new_exp))&0ffh
 15807  002EA4  6F85               	line	166
 15808                           	movlw	low(0)
 15809  002EA6  0E00               	movwf	((c:___fldiv@b)),c
 15810  002EA8  6E45               	movlw	high(0)
 15811  002EAA  0E00               	movwf	((c:___fldiv@b+1)),c
 15812  002EAC  6E46               	movlw	low highword(0)
 15813  002EAE  0E00               	movwf	((c:___fldiv@b+2)),c
 15814  002EB0  6E47               	movlw	high highword(0)
 15815  002EB2  0E00               	movwf	((c:___fldiv@b+3)),c
 15816  002EB4  6E48               	line	168
 15817                           	movlw	low(0)
 15818  002EB6  0E00               	movwf	((___fldiv@sign))&0ffh
 15819  002EB8  6F80               	goto	l5301
 15820  002EBA  EF5F  F017         	line	169
 15821                           	
 15822                           l1023:; BSR set to: 0
 15823  002EBE                     
 15824                           	line	172
 15825                           	
 15826                           l5301:; BSR set to: 0
 15827  002EBE                     
 15828                           	movff	(___fldiv@new_exp),(___fldiv@bexp)
 15829  002EBE  C085  F08B         	line	174
 15830                           	
 15831                           l5303:; BSR set to: 0
 15832  002EC2                     
 15833                           	
 15834                           	btfss	((___fldiv@bexp))&0ffh,(0)&7
 15835  002EC2  A18B               	goto	u5981
 15836  002EC4  EF66  F017         	goto	u5980
 15837  002EC8  EF68  F017         u5981:
 15838  002ECC                     	goto	l5307
 15839  002ECC  EF6B  F017         u5980:
 15840  002ED0                     	line	175
 15841                           	
 15842                           l5305:; BSR set to: 0
 15843  002ED0                     
 15844                           	bsf	(0+(7/8)+0+((c:___fldiv@b)+02h)),c,(7)&7
 15845  002ED0  8E47               	line	176
 15846                           	goto	l5309
 15847  002ED2  EF6E  F017         	line	178
 15848                           	
 15849                           l1024:; BSR set to: 0
 15850  002ED6                     
 15851                           	line	179
 15852                           	
 15853                           l5307:; BSR set to: 0
 15854  002ED6                     
 15855                           	bcf	(0+(7/8)+0+((c:___fldiv@b)+02h)),c,(7)&7
 15856  002ED6  9E47               	goto	l5309
 15857  002ED8  EF6E  F017         	line	180
 15858                           	
 15859                           l1025:; BSR set to: 0
 15860  002EDC                     
 15861                           	line	181
 15862                           	
 15863                           l5309:; BSR set to: 0
 15864  002EDC                     
 15865                           	bcf	status,0
 15866  002EDC  90D8               	rrcf	((___fldiv@bexp))&0ffh,w
 15867  002EDE  318B               	movwf	(0+((c:___fldiv@b)+03h)),c
 15868  002EE0  6E48               	line	182
 15869                           	
 15870                           l5311:; BSR set to: 0
 15871  002EE2                     
 15872                           	movf	((___fldiv@sign))&0ffh,w
 15873  002EE2  5180               	iorwf	(0+((c:___fldiv@b)+03h)),c
 15874  002EE4  1248               	line	183
 15875                           	
 15876                           l5313:; BSR set to: 0
 15877  002EE6                     
 15878                           	movff	(c:___fldiv@b),(c:?___fldiv)
 15879  002EE6  C045  F045         	movff	(c:___fldiv@b+1),(c:?___fldiv+1)
 15880  002EEA  C046  F046         	movff	(c:___fldiv@b+2),(c:?___fldiv+2)
 15881  002EEE  C047  F047         	movff	(c:___fldiv@b+3),(c:?___fldiv+3)
 15882  002EF2  C048  F048         	goto	l1003
 15883  002EF6  EF7D  F017         	
 15884                           l5315:; BSR set to: 0
 15885  002EFA                     
 15886                           	line	184
 15887                           	
 15888                           l1003:; BSR set to: 0
 15889  002EFA                     
 15890                           	return	;funcret
 15891  002EFA  0012               	opt stack 0
 15892                           GLOBAL	__end_of___fldiv
 15893                           	__end_of___fldiv:
 15894  002EFC                     	signat	___fldiv,8316
 15895                           	global	_pwd_Timer3
 15896                           
 15897 ;; *************** function _pwd_Timer3 *****************
 15898 ;; Defined at:
 15899 ;;		line 220 in file "main.c"
 15900 ;; Parameters:    Size  Location     Type
 15901 ;;  limit           2   35[COMRAM] int 
 15902 ;; Auto vars:     Size  Location     Type
 15903 ;;		None
 15904 ;; Return value:  Size  Location     Type
 15905 ;;                  1    wreg      void 
 15906 ;; Registers used:
 15907 ;;		wreg, status,2, status,0, cstack
 15908 ;; Tracked objects:
 15909 ;;		On entry : 0/0
 15910 ;;		On exit  : 0/0
 15911 ;;		Unchanged: 0/0
 15912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 15913 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 15914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 15915 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 15916 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 15917 ;;Total ram usage:        3 bytes
 15918 ;; Hardware stack levels used:    1
 15919 ;; Hardware stack levels required when called:    4
 15920 ;; This function calls:
 15921 ;;		___awmod
 15922 ;; This function is called by:
 15923 ;;		_main
 15924 ;; This function uses a non-reentrant model
 15925 ;;
 15926                           psect	text25,class=CODE,space=0,reloc=2,group=0
 15927                           	file	"main.c"
 15928                           	line	220
 15929                           global __ptext25
 15930                           __ptext25:
 15931  004316                     psect	text25
 15932                           	file	"main.c"
 15933                           	line	220
 15934                           	global	__size_of_pwd_Timer3
 15935                           	__size_of_pwd_Timer3	equ	__end_of_pwd_Timer3-_pwd_Timer3
 15936  0000                     	
 15937                           _pwd_Timer3:; BSR set to: 0
 15938  004316                     
 15939                           ;incstack = 0
 15940                           	opt	stack 26
 15941                           	line	222
 15942                           	
 15943                           l4205:
 15944  004316                     ;main.c: 222: timer3Counter = (timer3Counter) % 11;
 15945                           	movff	(c:_timer3Counter),(c:___awmod@dividend)
 15946  004316  C056  F01E         	movff	(c:_timer3Counter+1),(c:___awmod@dividend+1)
 15947  00431A  C057  F01F         	movlw	high(0Bh)
 15948  00431E  0E00               	movwf	((c:___awmod@divisor+1)),c
 15949  004320  6E21               	movlw	low(0Bh)
 15950  004322  0E0B               	movwf	((c:___awmod@divisor)),c
 15951  004324  6E20               	call	___awmod	;wreg free
 15952  004326  EC0A  F01F         	movff	0+?___awmod,(c:_timer3Counter)
 15953  00432A  C01E  F056         	movff	1+?___awmod,(c:_timer3Counter+1)
 15954  00432E  C01F  F057         	line	223
 15955                           	
 15956                           l4207:
 15957  004332                     ;main.c: 223: if ((timer3Counter <= limit) && (limit != 0)) {
 15958                           		movf	((c:_timer3Counter)),c,w
 15959  004332  5056               	subwf	((c:pwd_Timer3@limit)),c,w
 15960  004334  5C24               	movf	((c:pwd_Timer3@limit+1)),c,w
 15961  004336  5025               	xorlw	80h
 15962  004338  0A80               	movwf	(??_pwd_Timer3+0+0)&0ffh,c
 15963  00433A  6E26               	movf	((c:_timer3Counter+1)),c,w
 15964  00433C  5057               	xorlw	80h
 15965  00433E  0A80               	subwfb	(??_pwd_Timer3+0+0)&0ffh,c,w
 15966  004340  5826               	btfss	status,0
 15967  004342  A0D8               	goto	u4331
 15968  004344  EFA6  F021         	goto	u4330
 15969  004348  EFA8  F021         
 15970                           u4331:
 15971  00434C                     	goto	l276
 15972  00434C  EFB9  F021         u4330:
 15973  004350                     	
 15974                           l4209:
 15975  004350                     	movf	((c:pwd_Timer3@limit)),c,w
 15976  004350  5024               iorwf	((c:pwd_Timer3@limit+1)),c,w
 15977  004352  1025               	btfsc	status,2
 15978  004354  B4D8               	goto	u4341
 15979  004356  EFAF  F021         	goto	u4340
 15980  00435A  EFB1  F021         
 15981                           u4341:
 15982  00435E                     	goto	l276
 15983  00435E  EFB9  F021         u4340:
 15984  004362                     	line	224
 15985                           	
 15986                           l4211:
 15987  004362                     ;main.c: 224: PORTCbits.RC5 = 1;
 15988                           	bsf	((c:3970)),c,5	;volatile
 15989  004362  8A82               	line	225
 15990                           	
 15991                           l4213:
 15992  004364                     ;main.c: 225: heaterON = 1;
 15993                           	movlw	low(01h)
 15994  004364  0E01               	movlb	1	; () banked
 15995  004366  0101               	movwf	((_heaterON))&0ffh
 15996  004368  6F5E               	line	226
 15997                           	
 15998                           l4215:; BSR set to: 1
 15999  00436A                     
 16000                           ;main.c: 226: timer3Counter++;
 16001                           	infsnz	((c:_timer3Counter)),c
 16002  00436A  4A56               	incf	((c:_timer3Counter+1)),c
 16003  00436C  2A57               	line	228
 16004                           ;main.c: 228: } else {
 16005                           	goto	l4219
 16006  00436E  EFBE  F021         	
 16007                           l276:
 16008  004372                     	line	229
 16009                           ;main.c: 229: PORTCbits.RC5 = 0;
 16010                           	bcf	((c:3970)),c,5	;volatile
 16011  004372  9A82               	line	230
 16012                           	
 16013                           l4217:
 16014  004374                     ;main.c: 230: timer3Counter++;
 16015                           	infsnz	((c:_timer3Counter)),c
 16016  004374  4A56               	incf	((c:_timer3Counter+1)),c
 16017  004376  2A57               	goto	l4219
 16018  004378  EFBE  F021         	line	231
 16019                           	
 16020                           l277:
 16021  00437C                     	line	232
 16022                           	
 16023                           l4219:
 16024  00437C                     ;main.c: 231: }
 16025                           ;main.c: 232: if (limit == 0) {
 16026                           	movf	((c:pwd_Timer3@limit)),c,w
 16027  00437C  5024               iorwf	((c:pwd_Timer3@limit+1)),c,w
 16028  00437E  1025               	btfss	status,2
 16029  004380  A4D8               	goto	u4351
 16030  004382  EFC5  F021         	goto	u4350
 16031  004386  EFC7  F021         
 16032                           u4351:
 16033  00438A                     	goto	l279
 16034  00438A  EFCC  F021         u4350:
 16035  00438E                     	line	233
 16036                           	
 16037                           l4221:
 16038  00438E                     ;main.c: 233: heaterON = 0;
 16039                           	movlw	low(0)
 16040  00438E  0E00               	movlb	1	; () banked
 16041  004390  0101               	movwf	((_heaterON))&0ffh
 16042  004392  6F5E               	goto	l279
 16043  004394  EFCC  F021         	line	234
 16044                           	
 16045                           l278:; BSR set to: 1
 16046  004398                     
 16047                           	line	236
 16048                           	
 16049                           l279:
 16050  004398                     	return	;funcret
 16051  004398  0012               	opt stack 0
 16052                           GLOBAL	__end_of_pwd_Timer3
 16053                           	__end_of_pwd_Timer3:
 16054  00439A                     	signat	_pwd_Timer3,4217
 16055                           	global	___awmod
 16056                           
 16057 ;; *************** function ___awmod *****************
 16058 ;; Defined at:
 16059 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 16060 ;; Parameters:    Size  Location     Type
 16061 ;;  dividend        2   29[COMRAM] int 
 16062 ;;  divisor         2   31[COMRAM] int 
 16063 ;; Auto vars:     Size  Location     Type
 16064 ;;  sign            1   34[COMRAM] unsigned char 
 16065 ;;  counter         1   33[COMRAM] unsigned char 
 16066 ;; Return value:  Size  Location     Type
 16067 ;;                  2   29[COMRAM] int 
 16068 ;; Registers used:
 16069 ;;		wreg, status,2, status,0
 16070 ;; Tracked objects:
 16071 ;;		On entry : 0/0
 16072 ;;		On exit  : 0/0
 16073 ;;		Unchanged: 0/0
 16074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 16075 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16076 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16078 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16079 ;;Total ram usage:        6 bytes
 16080 ;; Hardware stack levels used:    1
 16081 ;; Hardware stack levels required when called:    3
 16082 ;; This function calls:
 16083 ;;		Nothing
 16084 ;; This function is called by:
 16085 ;;		_pwd_Timer3
 16086 ;;		_fround
 16087 ;;		_scale
 16088 ;; This function uses a non-reentrant model
 16089 ;;
 16090                           psect	text26,class=CODE,space=0,reloc=2,group=1
 16091                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 16092                           	line	8
 16093                           global __ptext26
 16094                           __ptext26:
 16095  003E14                     psect	text26
 16096                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 16097                           	line	8
 16098                           	global	__size_of___awmod
 16099                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 16100  0000                     	
 16101                           ___awmod:
 16102  003E14                     ;incstack = 0
 16103                           	opt	stack 25
 16104                           	line	13
 16105                           	
 16106                           l3491:
 16107  003E14                     	movlw	low(0)
 16108  003E14  0E00               	movwf	((c:___awmod@sign)),c
 16109  003E16  6E23               	line	14
 16110                           	
 16111                           l3493:
 16112  003E18                     	btfsc	((c:___awmod@dividend+1)),c,7
 16113  003E18  BE1F               	goto	u3370
 16114  003E1A  EF13  F01F         	goto	u3371
 16115  003E1E  EF11  F01F         
 16116                           u3371:
 16117  003E22                     	goto	l3499
 16118  003E22  EF1B  F01F         u3370:
 16119  003E26                     	line	15
 16120                           	
 16121                           l3495:
 16122  003E26                     	negf	((c:___awmod@dividend)),c
 16123  003E26  6C1E               	comf	((c:___awmod@dividend+1)),c
 16124  003E28  1E1F               	btfsc	status,0
 16125  003E2A  B0D8               	incf	((c:___awmod@dividend+1)),c
 16126  003E2C  2A1F               	line	16
 16127                           	
 16128                           l3497:
 16129  003E2E                     	movlw	low(01h)
 16130  003E2E  0E01               	movwf	((c:___awmod@sign)),c
 16131  003E30  6E23               	goto	l3499
 16132  003E32  EF1B  F01F         	line	17
 16133                           	
 16134                           l647:
 16135  003E36                     	line	18
 16136                           	
 16137                           l3499:
 16138  003E36                     	btfsc	((c:___awmod@divisor+1)),c,7
 16139  003E36  BE21               	goto	u3380
 16140  003E38  EF22  F01F         	goto	u3381
 16141  003E3C  EF20  F01F         
 16142                           u3381:
 16143  003E40                     	goto	l3503
 16144  003E40  EF28  F01F         u3380:
 16145  003E44                     	line	19
 16146                           	
 16147                           l3501:
 16148  003E44                     	negf	((c:___awmod@divisor)),c
 16149  003E44  6C20               	comf	((c:___awmod@divisor+1)),c
 16150  003E46  1E21               	btfsc	status,0
 16151  003E48  B0D8               	incf	((c:___awmod@divisor+1)),c
 16152  003E4A  2A21               	goto	l3503
 16153  003E4C  EF28  F01F         	
 16154                           l648:
 16155  003E50                     	line	20
 16156                           	
 16157                           l3503:
 16158  003E50                     	movf	((c:___awmod@divisor)),c,w
 16159  003E50  5020               iorwf	((c:___awmod@divisor+1)),c,w
 16160  003E52  1021               	btfsc	status,2
 16161  003E54  B4D8               	goto	u3391
 16162  003E56  EF2F  F01F         	goto	u3390
 16163  003E5A  EF31  F01F         
 16164                           u3391:
 16165  003E5E                     	goto	l3519
 16166  003E5E  EF61  F01F         u3390:
 16167  003E62                     	line	21
 16168                           	
 16169                           l3505:
 16170  003E62                     	movlw	low(01h)
 16171  003E62  0E01               	movwf	((c:___awmod@counter)),c
 16172  003E64  6E22               	line	22
 16173                           	goto	l3509
 16174  003E66  EF3B  F01F         	
 16175                           l651:
 16176  003E6A                     	line	23
 16177                           	
 16178                           l3507:
 16179  003E6A                     	bcf	status,0
 16180  003E6A  90D8               	rlcf	((c:___awmod@divisor)),c
 16181  003E6C  3620               	rlcf	((c:___awmod@divisor+1)),c
 16182  003E6E  3621               	line	24
 16183                           	incf	((c:___awmod@counter)),c
 16184  003E70  2A22               	goto	l3509
 16185  003E72  EF3B  F01F         	line	25
 16186                           	
 16187                           l650:
 16188  003E76                     	line	22
 16189                           	
 16190                           l3509:
 16191  003E76                     	
 16192                           	btfss	((c:___awmod@divisor+1)),c,(15)&7
 16193  003E76  AE21               	goto	u3401
 16194  003E78  EF40  F01F         	goto	u3400
 16195  003E7C  EF42  F01F         u3401:
 16196  003E80                     	goto	l3507
 16197  003E80  EF35  F01F         u3400:
 16198  003E84                     	goto	l3511
 16199  003E84  EF46  F01F         	
 16200                           l652:
 16201  003E88                     	goto	l3511
 16202  003E88  EF46  F01F         	line	26
 16203                           	
 16204                           l653:
 16205  003E8C                     	line	27
 16206                           	
 16207                           l3511:
 16208  003E8C                     		movf	((c:___awmod@divisor)),c,w
 16209  003E8C  5020               	subwf	((c:___awmod@dividend)),c,w
 16210  003E8E  5C1E               	movf	((c:___awmod@divisor+1)),c,w
 16211  003E90  5021               	subwfb	((c:___awmod@dividend+1)),c,w
 16212  003E92  581F               	btfss	status,0
 16213  003E94  A0D8               	goto	u3411
 16214  003E96  EF4F  F01F         	goto	u3410
 16215  003E9A  EF51  F01F         
 16216                           u3411:
 16217  003E9E                     	goto	l3515
 16218  003E9E  EF57  F01F         u3410:
 16219  003EA2                     	line	28
 16220                           	
 16221                           l3513:
 16222  003EA2                     	movf	((c:___awmod@divisor)),c,w
 16223  003EA2  5020               	subwf	((c:___awmod@dividend)),c
 16224  003EA4  5E1E               	movf	((c:___awmod@divisor+1)),c,w
 16225  003EA6  5021               	subwfb	((c:___awmod@dividend+1)),c
 16226  003EA8  5A1F               
 16227                           	goto	l3515
 16228  003EAA  EF57  F01F         	
 16229                           l654:
 16230  003EAE                     	line	29
 16231                           	
 16232                           l3515:
 16233  003EAE                     	bcf	status,0
 16234  003EAE  90D8               	rrcf	((c:___awmod@divisor+1)),c
 16235  003EB0  3221               	rrcf	((c:___awmod@divisor)),c
 16236  003EB2  3220               	line	30
 16237                           	
 16238                           l3517:
 16239  003EB4                     	decfsz	((c:___awmod@counter)),c
 16240  003EB4  2E22               	
 16241                           	goto	l3511
 16242  003EB6  EF46  F01F         	goto	l3519
 16243  003EBA  EF61  F01F         	
 16244                           l655:
 16245  003EBE                     	goto	l3519
 16246  003EBE  EF61  F01F         	line	31
 16247                           	
 16248                           l649:
 16249  003EC2                     	line	32
 16250                           	
 16251                           l3519:
 16252  003EC2                     	movf	((c:___awmod@sign)),c,w
 16253  003EC2  5023               	btfsc	status,2
 16254  003EC4  B4D8               	goto	u3421
 16255  003EC6  EF67  F01F         	goto	u3420
 16256  003ECA  EF69  F01F         u3421:
 16257  003ECE                     	goto	l3523
 16258  003ECE  EF6F  F01F         u3420:
 16259  003ED2                     	line	33
 16260                           	
 16261                           l3521:
 16262  003ED2                     	negf	((c:___awmod@dividend)),c
 16263  003ED2  6C1E               	comf	((c:___awmod@dividend+1)),c
 16264  003ED4  1E1F               	btfsc	status,0
 16265  003ED6  B0D8               	incf	((c:___awmod@dividend+1)),c
 16266  003ED8  2A1F               	goto	l3523
 16267  003EDA  EF6F  F01F         	
 16268                           l656:
 16269  003EDE                     	line	34
 16270                           	
 16271                           l3523:
 16272  003EDE                     	movff	(c:___awmod@dividend),(c:?___awmod)
 16273  003EDE  C01E  F01E         	movff	(c:___awmod@dividend+1),(c:?___awmod+1)
 16274  003EE2  C01F  F01F         	goto	l657
 16275  003EE6  EF75  F01F         	
 16276                           l3525:
 16277  003EEA                     	line	35
 16278                           	
 16279                           l657:
 16280  003EEA                     	return	;funcret
 16281  003EEA  0012               	opt stack 0
 16282                           GLOBAL	__end_of___awmod
 16283                           	__end_of___awmod:
 16284  003EEC                     	signat	___awmod,8314
 16285                           	global	_lcd_puts
 16286                           
 16287 ;; *************** function _lcd_puts *****************
 16288 ;; Defined at:
 16289 ;;		line 120 in file "lcd_x8.c"
 16290 ;; Parameters:    Size  Location     Type
 16291 ;;  s               2   43[COMRAM] PTR unsigned char 
 16292 ;;		 -> main@Buffer(32), 
 16293 ;; Auto vars:     Size  Location     Type
 16294 ;;		None
 16295 ;; Return value:  Size  Location     Type
 16296 ;;                  1    wreg      void 
 16297 ;; Registers used:
 16298 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 16299 ;; Tracked objects:
 16300 ;;		On entry : 0/0
 16301 ;;		On exit  : 0/0
 16302 ;;		Unchanged: 0/0
 16303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 16304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16308 ;;Total ram usage:        2 bytes
 16309 ;; Hardware stack levels used:    1
 16310 ;; Hardware stack levels required when called:    8
 16311 ;; This function calls:
 16312 ;;		_lcd_putc
 16313 ;; This function is called by:
 16314 ;;		_main
 16315 ;; This function uses a non-reentrant model
 16316 ;;
 16317                           psect	text27,class=CODE,space=0,reloc=2,group=0
 16318                           	file	"lcd_x8.c"
 16319                           	line	120
 16320                           global __ptext27
 16321                           __ptext27:
 16322  0046F6                     psect	text27
 16323                           	file	"lcd_x8.c"
 16324                           	line	120
 16325                           	global	__size_of_lcd_puts
 16326                           	__size_of_lcd_puts	equ	__end_of_lcd_puts-_lcd_puts
 16327  0000                     	
 16328                           _lcd_puts:
 16329  0046F6                     ;incstack = 0
 16330                           	opt	stack 22
 16331                           	line	121
 16332                           	
 16333                           l4139:
 16334  0046F6                     ;lcd_x8.c: 121: while (*s) {
 16335                           	goto	l4145
 16336  0046F6  EF88  F023         	
 16337                           l111:
 16338  0046FA                     	line	122
 16339                           	
 16340                           l4141:
 16341  0046FA                     ;lcd_x8.c: 122: lcd_putc(*s);
 16342                           	movff	(c:lcd_puts@s),fsr2l
 16343  0046FA  C02C  FFD9         	movff	(c:lcd_puts@s+1),fsr2h
 16344  0046FE  C02D  FFDA         	movf	indf2,w
 16345  004702  50DF               	
 16346                           	call	_lcd_putc
 16347  004704  EC0F  F022         	line	123
 16348                           	
 16349                           l4143:
 16350  004708                     ;lcd_x8.c: 123: s++;
 16351                           	infsnz	((c:lcd_puts@s)),c
 16352  004708  4A2C               	incf	((c:lcd_puts@s+1)),c
 16353  00470A  2A2D               	goto	l4145
 16354  00470C  EF88  F023         	line	124
 16355                           	
 16356                           l110:
 16357  004710                     	line	121
 16358                           	
 16359                           l4145:
 16360  004710                     	movff	(c:lcd_puts@s),fsr2l
 16361  004710  C02C  FFD9         	movff	(c:lcd_puts@s+1),fsr2h
 16362  004714  C02D  FFDA         	movf	indf2,w
 16363  004718  50DF               	btfss	status,2
 16364  00471A  A4D8               	goto	u4321
 16365  00471C  EF92  F023         	goto	u4320
 16366  004720  EF94  F023         u4321:
 16367  004724                     	goto	l4141
 16368  004724  EF7D  F023         u4320:
 16369  004728                     	goto	l113
 16370  004728  EF96  F023         	
 16371                           l112:
 16372  00472C                     	line	125
 16373                           	
 16374                           l113:
 16375  00472C                     	return	;funcret
 16376  00472C  0012               	opt stack 0
 16377                           GLOBAL	__end_of_lcd_puts
 16378                           	__end_of_lcd_puts:
 16379  00472E                     	signat	_lcd_puts,4217
 16380                           	global	_lcd_putc
 16381                           
 16382 ;; *************** function _lcd_putc *****************
 16383 ;; Defined at:
 16384 ;;		line 106 in file "lcd_x8.c"
 16385 ;; Parameters:    Size  Location     Type
 16386 ;;  c               1    wreg     unsigned char 
 16387 ;; Auto vars:     Size  Location     Type
 16388 ;;  c               1   42[COMRAM] unsigned char 
 16389 ;; Return value:  Size  Location     Type
 16390 ;;                  1    wreg      void 
 16391 ;; Registers used:
 16392 ;;		wreg, status,2, status,0, cstack
 16393 ;; Tracked objects:
 16394 ;;		On entry : 0/0
 16395 ;;		On exit  : 0/0
 16396 ;;		Unchanged: 0/0
 16397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 16398 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16399 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16401 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16402 ;;Total ram usage:        1 bytes
 16403 ;; Hardware stack levels used:    1
 16404 ;; Hardware stack levels required when called:    7
 16405 ;; This function calls:
 16406 ;;		_delay_ms
 16407 ;;		_lcd_gotoxy
 16408 ;;		_lcd_send_byte
 16409 ;; This function is called by:
 16410 ;;		_lcd_puts
 16411 ;;		_main
 16412 ;; This function uses a non-reentrant model
 16413 ;;
 16414                           psect	text28,class=CODE,space=0,reloc=2,group=0
 16415                           	line	106
 16416                           global __ptext28
 16417                           __ptext28:
 16418  00441E                     psect	text28
 16419                           	file	"lcd_x8.c"
 16420                           	line	106
 16421                           	global	__size_of_lcd_putc
 16422                           	__size_of_lcd_putc	equ	__end_of_lcd_putc-_lcd_putc
 16423  0000                     	
 16424                           _lcd_putc:
 16425  00441E                     ;incstack = 0
 16426                           	opt	stack 22
 16427                           ;lcd_putc@c stored from wreg
 16428                           	movwf	((c:lcd_putc@c)),c
 16429  00441E  6E2B               	line	107
 16430                           	
 16431                           l3539:
 16432  004420                     ;lcd_x8.c: 107: switch (c) {
 16433                           	goto	l3551
 16434  004420  EF36  F022         	line	108
 16435                           ;lcd_x8.c: 108: case '\f': lcd_send_byte(0, 1);
 16436                           	
 16437                           l102:
 16438  004424                     	
 16439                           l3541:
 16440  004424                     	movlw	low(01h)
 16441  004424  0E01               	movwf	((c:lcd_send_byte@n)),c
 16442  004426  6E26               	movlw	(0)&0ffh
 16443  004428  0E00               	
 16444                           	call	_lcd_send_byte
 16445  00442A  ECA3  F022         	line	109
 16446                           ;lcd_x8.c: 109: delay_ms(2);
 16447                           	movlw	high(02h)
 16448  00442E  0E00               	movwf	((c:delay_ms@n+1)),c
 16449  004430  6E1F               	movlw	low(02h)
 16450  004432  0E02               	movwf	((c:delay_ms@n)),c
 16451  004434  6E1E               	call	_delay_ms	;wreg free
 16452  004436  EC97  F023         	line	110
 16453                           ;lcd_x8.c: 110: break;
 16454                           	goto	l107
 16455  00443A  EF45  F022         	line	111
 16456                           ;lcd_x8.c: 111: case '\n': lcd_gotoxy(1, 2);
 16457                           	
 16458                           l104:
 16459  00443E                     	
 16460                           l3543:
 16461  00443E                     	movlw	low(02h)
 16462  00443E  0E02               	movwf	((c:lcd_gotoxy@y)),c
 16463  004440  6E28               	movlw	(01h)&0ffh
 16464  004442  0E01               	
 16465                           	call	_lcd_gotoxy
 16466  004444  EC46  F022         	line	112
 16467                           ;lcd_x8.c: 112: break;
 16468                           	goto	l107
 16469  004448  EF45  F022         	line	113
 16470                           ;lcd_x8.c: 113: case '\b': lcd_send_byte(0, 0x10);
 16471                           	
 16472                           l105:
 16473  00444C                     	
 16474                           l3545:
 16475  00444C                     	movlw	low(010h)
 16476  00444C  0E10               	movwf	((c:lcd_send_byte@n)),c
 16477  00444E  6E26               	movlw	(0)&0ffh
 16478  004450  0E00               	
 16479                           	call	_lcd_send_byte
 16480  004452  ECA3  F022         	line	114
 16481                           ;lcd_x8.c: 114: break;
 16482                           	goto	l107
 16483  004456  EF45  F022         	line	115
 16484                           ;lcd_x8.c: 115: default: lcd_send_byte(1, c);
 16485                           	
 16486                           l106:
 16487  00445A                     	
 16488                           l3547:
 16489  00445A                     	movff	(c:lcd_putc@c),(c:lcd_send_byte@n)
 16490  00445A  C02B  F026         	movlw	(01h)&0ffh
 16491  00445E  0E01               	
 16492                           	call	_lcd_send_byte
 16493  004460  ECA3  F022         	line	116
 16494                           ;lcd_x8.c: 116: break;
 16495                           	goto	l107
 16496  004464  EF45  F022         	line	117
 16497                           	
 16498                           l3549:
 16499  004468                     ;lcd_x8.c: 117: }
 16500                           	goto	l107
 16501  004468  EF45  F022         	line	107
 16502                           	
 16503                           l101:
 16504  00446C                     	
 16505                           l3551:
 16506  00446C                     	movf	((c:lcd_putc@c)),c,w
 16507  00446C  502B               	; Switch size 1, requested type "space"
 16508                           ; Number of cases is 3, Range of values is 8 to 12
 16509                           ; switch strategies available:
 16510                           ; Name         Instructions Cycles
 16511                           ; simple_byte           10     6 (average)
 16512                           ;	Chosen strategy is simple_byte
 16513                           
 16514                           	xorlw	8^0	; case 8
 16515  00446E  0A08               	skipnz
 16516  004470  B4D8               	goto	l3545
 16517  004472  EF26  F022         	xorlw	10^8	; case 10
 16518  004476  0A02               	skipnz
 16519  004478  B4D8               	goto	l3543
 16520  00447A  EF1F  F022         	xorlw	12^10	; case 12
 16521  00447E  0A06               	skipnz
 16522  004480  B4D8               	goto	l3541
 16523  004482  EF12  F022         	goto	l3547
 16524  004486  EF2D  F022         
 16525                           	line	117
 16526                           	
 16527                           l103:
 16528  00448A                     	line	118
 16529                           	
 16530                           l107:
 16531  00448A                     	return	;funcret
 16532  00448A  0012               	opt stack 0
 16533                           GLOBAL	__end_of_lcd_putc
 16534                           	__end_of_lcd_putc:
 16535  00448C                     	signat	_lcd_putc,4217
 16536                           	global	_lcd_gotoxy
 16537                           
 16538 ;; *************** function _lcd_gotoxy *****************
 16539 ;; Defined at:
 16540 ;;		line 89 in file "lcd_x8.c"
 16541 ;; Parameters:    Size  Location     Type
 16542 ;;  x               1    wreg     unsigned char 
 16543 ;;  y               1   39[COMRAM] unsigned char 
 16544 ;; Auto vars:     Size  Location     Type
 16545 ;;  x               1   40[COMRAM] unsigned char 
 16546 ;;  address         1   41[COMRAM] unsigned char 
 16547 ;; Return value:  Size  Location     Type
 16548 ;;                  1    wreg      void 
 16549 ;; Registers used:
 16550 ;;		wreg, status,2, status,0, cstack
 16551 ;; Tracked objects:
 16552 ;;		On entry : 0/0
 16553 ;;		On exit  : 0/0
 16554 ;;		Unchanged: 0/0
 16555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 16556 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16558 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16559 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16560 ;;Total ram usage:        3 bytes
 16561 ;; Hardware stack levels used:    1
 16562 ;; Hardware stack levels required when called:    6
 16563 ;; This function calls:
 16564 ;;		_lcd_send_byte
 16565 ;; This function is called by:
 16566 ;;		_lcd_putc
 16567 ;;		_main
 16568 ;; This function uses a non-reentrant model
 16569 ;;
 16570                           psect	text29,class=CODE,space=0,reloc=2,group=0
 16571                           	line	89
 16572                           global __ptext29
 16573                           __ptext29:
 16574  00448C                     psect	text29
 16575                           	file	"lcd_x8.c"
 16576                           	line	89
 16577                           	global	__size_of_lcd_gotoxy
 16578                           	__size_of_lcd_gotoxy	equ	__end_of_lcd_gotoxy-_lcd_gotoxy
 16579  0000                     	
 16580                           _lcd_gotoxy:
 16581  00448C                     ;incstack = 0
 16582                           	opt	stack 22
 16583                           ;lcd_gotoxy@x stored from wreg
 16584                           	movwf	((c:lcd_gotoxy@x)),c
 16585  00448C  6E29               	line	92
 16586                           	
 16587                           l3097:
 16588  00448E                     ;lcd_x8.c: 90: unsigned char address;
 16589                           ;lcd_x8.c: 92: switch (y) {
 16590                           	goto	l3109
 16591  00448E  EF5B  F022         	line	93
 16592                           ;lcd_x8.c: 93: case 1: address = 0x80;
 16593                           	
 16594                           l93:
 16595  004492                     	
 16596                           l3099:
 16597  004492                     	movlw	low(080h)
 16598  004492  0E80               	movwf	((c:lcd_gotoxy@address)),c
 16599  004494  6E2A               	line	94
 16600                           ;lcd_x8.c: 94: break;
 16601                           	goto	l3111
 16602  004496  EF6E  F022         	line	95
 16603                           ;lcd_x8.c: 95: case 2: address = 0xc0;
 16604                           	
 16605                           l95:
 16606  00449A                     	
 16607                           l3101:
 16608  00449A                     	movlw	low(0C0h)
 16609  00449A  0EC0               	movwf	((c:lcd_gotoxy@address)),c
 16610  00449C  6E2A               	line	96
 16611                           ;lcd_x8.c: 96: break;
 16612                           	goto	l3111
 16613  00449E  EF6E  F022         	line	97
 16614                           ;lcd_x8.c: 97: case 3: address = 0x80 + 16;
 16615                           	
 16616                           l96:
 16617  0044A2                     	
 16618                           l3103:
 16619  0044A2                     	movlw	low(090h)
 16620  0044A2  0E90               	movwf	((c:lcd_gotoxy@address)),c
 16621  0044A4  6E2A               	line	98
 16622                           ;lcd_x8.c: 98: break;
 16623                           	goto	l3111
 16624  0044A6  EF6E  F022         	line	99
 16625                           ;lcd_x8.c: 99: case 4: address = 0xc0 + 16;
 16626                           	
 16627                           l97:
 16628  0044AA                     	
 16629                           l3105:
 16630  0044AA                     	movlw	low(0D0h)
 16631  0044AA  0ED0               	movwf	((c:lcd_gotoxy@address)),c
 16632  0044AC  6E2A               	line	100
 16633                           ;lcd_x8.c: 100: break;
 16634                           	goto	l3111
 16635  0044AE  EF6E  F022         	line	101
 16636                           	
 16637                           l3107:
 16638  0044B2                     ;lcd_x8.c: 101: }
 16639                           	goto	l3111
 16640  0044B2  EF6E  F022         	line	92
 16641                           	
 16642                           l92:
 16643  0044B6                     	
 16644                           l3109:
 16645  0044B6                     	movf	((c:lcd_gotoxy@y)),c,w
 16646  0044B6  5028               	; Switch size 1, requested type "space"
 16647                           ; Number of cases is 4, Range of values is 1 to 4
 16648                           ; switch strategies available:
 16649                           ; Name         Instructions Cycles
 16650                           ; simple_byte           13     7 (average)
 16651                           ;	Chosen strategy is simple_byte
 16652                           
 16653                           	xorlw	1^0	; case 1
 16654  0044B8  0A01               	skipnz
 16655  0044BA  B4D8               	goto	l3099
 16656  0044BC  EF49  F022         	xorlw	2^1	; case 2
 16657  0044C0  0A03               	skipnz
 16658  0044C2  B4D8               	goto	l3101
 16659  0044C4  EF4D  F022         	xorlw	3^2	; case 3
 16660  0044C8  0A01               	skipnz
 16661  0044CA  B4D8               	goto	l3103
 16662  0044CC  EF51  F022         	xorlw	4^3	; case 4
 16663  0044D0  0A07               	skipnz
 16664  0044D2  B4D8               	goto	l3105
 16665  0044D4  EF55  F022         	goto	l3111
 16666  0044D8  EF6E  F022         
 16667                           	line	101
 16668                           	
 16669                           l94:
 16670  0044DC                     	line	102
 16671                           	
 16672                           l3111:
 16673  0044DC                     ;lcd_x8.c: 102: address += x - 1;
 16674                           	decf	((c:lcd_gotoxy@x)),c,w
 16675  0044DC  0429               	addwf	((c:lcd_gotoxy@address)),c
 16676  0044DE  262A               	line	103
 16677                           	
 16678                           l3113:
 16679  0044E0                     ;lcd_x8.c: 103: lcd_send_byte(0, (unsigned char) (0x80 | address));
 16680                           	movf	((c:lcd_gotoxy@address)),c,w
 16681  0044E0  502A               	iorlw	low(080h)
 16682  0044E2  0980               	movwf	((c:lcd_send_byte@n)),c
 16683  0044E4  6E26               	movlw	(0)&0ffh
 16684  0044E6  0E00               	
 16685                           	call	_lcd_send_byte
 16686  0044E8  ECA3  F022         	line	104
 16687                           	
 16688                           l98:
 16689  0044EC                     	return	;funcret
 16690  0044EC  0012               	opt stack 0
 16691                           GLOBAL	__end_of_lcd_gotoxy
 16692                           	__end_of_lcd_gotoxy:
 16693  0044EE                     	signat	_lcd_gotoxy,8313
 16694                           	global	_lcd_init
 16695                           
 16696 ;; *************** function _lcd_init *****************
 16697 ;; Defined at:
 16698 ;;		line 56 in file "lcd_x8.c"
 16699 ;; Parameters:    Size  Location     Type
 16700 ;;		None
 16701 ;; Auto vars:     Size  Location     Type
 16702 ;;  i               1   39[COMRAM] unsigned char 
 16703 ;; Return value:  Size  Location     Type
 16704 ;;                  1    wreg      void 
 16705 ;; Registers used:
 16706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16707 ;; Tracked objects:
 16708 ;;		On entry : 0/0
 16709 ;;		On exit  : 0/0
 16710 ;;		Unchanged: 0/0
 16711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 16712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16716 ;;Total ram usage:        1 bytes
 16717 ;; Hardware stack levels used:    1
 16718 ;; Hardware stack levels required when called:    6
 16719 ;; This function calls:
 16720 ;;		_delay_ms
 16721 ;;		_lcd_send_byte
 16722 ;;		_lcd_send_nibble
 16723 ;; This function is called by:
 16724 ;;		_main
 16725 ;; This function uses a non-reentrant model
 16726 ;;
 16727                           psect	text30,class=CODE,space=0,reloc=2,group=0
 16728                           	line	56
 16729                           global __ptext30
 16730                           __ptext30:
 16731  004148                     psect	text30
 16732                           	file	"lcd_x8.c"
 16733                           	line	56
 16734                           	global	__size_of_lcd_init
 16735                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
 16736  0000                     	
 16737                           _lcd_init:
 16738  004148                     ;incstack = 0
 16739                           	opt	stack 24
 16740                           	line	61
 16741                           	
 16742                           l4109:
 16743  004148                     ;lcd_x8.c: 58: unsigned char i;
 16744                           ;lcd_x8.c: 61: PORTEbits.RE2 = 0;
 16745                           	bcf	((c:3972)),c,2	;volatile
 16746  004148  9484               	line	63
 16747                           ;lcd_x8.c: 63: PORTEbits.RE1 = 0;
 16748                           	bcf	((c:3972)),c,1	;volatile
 16749  00414A  9284               	line	65
 16750                           	
 16751                           l4111:
 16752  00414C                     ;lcd_x8.c: 65: delay_ms(25);
 16753                           	movlw	high(019h)
 16754  00414C  0E00               	movwf	((c:delay_ms@n+1)),c
 16755  00414E  6E1F               	movlw	low(019h)
 16756  004150  0E19               	movwf	((c:delay_ms@n)),c
 16757  004152  6E1E               	call	_delay_ms	;wreg free
 16758  004154  EC97  F023         	line	66
 16759                           	
 16760                           l4113:
 16761  004158                     ;lcd_x8.c: 66: for (i = 1; i <= 3; ++i) {
 16762                           	movlw	low(01h)
 16763  004158  0E01               	movwf	((c:lcd_init@i)),c
 16764  00415A  6E28               	
 16765                           l4115:
 16766  00415C                     		movlw	04h-1
 16767  00415C  0E03               	cpfsgt	((c:lcd_init@i)),c
 16768  00415E  6428               	goto	u4281
 16769  004160  EFB4  F020         	goto	u4280
 16770  004164  EFB6  F020         
 16771                           u4281:
 16772  004168                     	goto	l4119
 16773  004168  EFBA  F020         u4280:
 16774  00416C                     	goto	l4125
 16775  00416C  EFCE  F020         	
 16776                           l4117:
 16777  004170                     	goto	l4125
 16778  004170  EFCE  F020         	
 16779                           l85:
 16780  004174                     	line	67
 16781                           	
 16782                           l4119:
 16783  004174                     ;lcd_x8.c: 67: lcd_send_nibble(3);
 16784                           	movlw	(03h)&0ffh
 16785  004174  0E03               	
 16786                           	call	_lcd_send_nibble
 16787  004176  EC0E  F024         	line	69
 16788                           ;lcd_x8.c: 69: delay_ms(6);
 16789                           	movlw	high(06h)
 16790  00417A  0E00               	movwf	((c:delay_ms@n+1)),c
 16791  00417C  6E1F               	movlw	low(06h)
 16792  00417E  0E06               	movwf	((c:delay_ms@n)),c
 16793  004180  6E1E               	call	_delay_ms	;wreg free
 16794  004182  EC97  F023         	line	66
 16795                           	
 16796                           l4121:
 16797  004186                     	incf	((c:lcd_init@i)),c
 16798  004186  2A28               	
 16799                           l4123:
 16800  004188                     		movlw	04h-1
 16801  004188  0E03               	cpfsgt	((c:lcd_init@i)),c
 16802  00418A  6428               	goto	u4291
 16803  00418C  EFCA  F020         	goto	u4290
 16804  004190  EFCC  F020         
 16805                           u4291:
 16806  004194                     	goto	l4119
 16807  004194  EFBA  F020         u4290:
 16808  004198                     	goto	l4125
 16809  004198  EFCE  F020         	
 16810                           l86:
 16811  00419C                     	line	72
 16812                           	
 16813                           l4125:
 16814  00419C                     ;lcd_x8.c: 70: }
 16815                           ;lcd_x8.c: 72: lcd_send_nibble(2);
 16816                           	movlw	(02h)&0ffh
 16817  00419C  0E02               	
 16818                           	call	_lcd_send_nibble
 16819  00419E  EC0E  F024         	line	74
 16820                           	
 16821                           l4127:
 16822  0041A2                     ;lcd_x8.c: 74: for (i = 0; i <= 3; ++i)
 16823                           	movlw	low(0)
 16824  0041A2  0E00               	movwf	((c:lcd_init@i)),c
 16825  0041A4  6E28               	
 16826                           l4129:
 16827  0041A6                     		movlw	04h-1
 16828  0041A6  0E03               	cpfsgt	((c:lcd_init@i)),c
 16829  0041A8  6428               	goto	u4301
 16830  0041AA  EFD9  F020         	goto	u4300
 16831  0041AE  EFDB  F020         
 16832                           u4301:
 16833  0041B2                     	goto	l4133
 16834  0041B2  EFDF  F020         u4300:
 16835  0041B6                     	goto	l89
 16836  0041B6  EFF7  F020         	
 16837                           l4131:
 16838  0041BA                     	goto	l89
 16839  0041BA  EFF7  F020         	line	75
 16840                           	
 16841                           l87:
 16842  0041BE                     	
 16843                           l4133:
 16844  0041BE                     ;lcd_x8.c: 75: lcd_send_byte(0, LCD_INIT_STRING[i]);
 16845                           	movf	((c:lcd_init@i)),c,w
 16846  0041BE  5028               	mullw	01h
 16847  0041C0  0D01               	movlw	low(_LCD_INIT_STRING)
 16848  0041C2  0E5E               	addwf	(prodl),c,w
 16849  0041C4  24F3               	movwf	c:fsr2l
 16850  0041C6  6ED9               	movlw	high(_LCD_INIT_STRING)
 16851  0041C8  0E00               	addwfc	prod+1,w
 16852  0041CA  20F4               	movwf	1+c:fsr2l
 16853  0041CC  6EDA               	movf	indf2,w
 16854  0041CE  50DF               	movwf	((c:lcd_send_byte@n)),c
 16855  0041D0  6E26               	movlw	(0)&0ffh
 16856  0041D2  0E00               	
 16857                           	call	_lcd_send_byte
 16858  0041D4  ECA3  F022         	line	74
 16859                           	
 16860                           l4135:
 16861  0041D8                     	incf	((c:lcd_init@i)),c
 16862  0041D8  2A28               	
 16863                           l4137:
 16864  0041DA                     		movlw	04h-1
 16865  0041DA  0E03               	cpfsgt	((c:lcd_init@i)),c
 16866  0041DC  6428               	goto	u4311
 16867  0041DE  EFF3  F020         	goto	u4310
 16868  0041E2  EFF5  F020         
 16869                           u4311:
 16870  0041E6                     	goto	l4133
 16871  0041E6  EFDF  F020         u4310:
 16872  0041EA                     	goto	l89
 16873  0041EA  EFF7  F020         	
 16874                           l88:
 16875  0041EE                     	line	76
 16876                           	
 16877                           l89:
 16878  0041EE                     	return	;funcret
 16879  0041EE  0012               	opt stack 0
 16880                           GLOBAL	__end_of_lcd_init
 16881                           	__end_of_lcd_init:
 16882  0041F0                     	signat	_lcd_init,89
 16883                           	global	_lcd_send_byte
 16884                           
 16885 ;; *************** function _lcd_send_byte *****************
 16886 ;; Defined at:
 16887 ;;		line 39 in file "lcd_x8.c"
 16888 ;; Parameters:    Size  Location     Type
 16889 ;;  cm_data         1    wreg     unsigned char 
 16890 ;;  n               1   37[COMRAM] unsigned char 
 16891 ;; Auto vars:     Size  Location     Type
 16892 ;;  cm_data         1   38[COMRAM] unsigned char 
 16893 ;; Return value:  Size  Location     Type
 16894 ;;                  1    wreg      void 
 16895 ;; Registers used:
 16896 ;;		wreg, status,2, status,0, cstack
 16897 ;; Tracked objects:
 16898 ;;		On entry : 0/0
 16899 ;;		On exit  : 0/0
 16900 ;;		Unchanged: 0/0
 16901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 16902 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16903 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16904 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16905 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 16906 ;;Total ram usage:        2 bytes
 16907 ;; Hardware stack levels used:    1
 16908 ;; Hardware stack levels required when called:    5
 16909 ;; This function calls:
 16910 ;;		_delay_cycles
 16911 ;;		_delay_ms
 16912 ;;		_lcd_send_nibble
 16913 ;; This function is called by:
 16914 ;;		_lcd_init
 16915 ;;		_lcd_gotoxy
 16916 ;;		_lcd_putc
 16917 ;;		_Lcd_Shift_Right
 16918 ;;		_Lcd_Shift_Left
 16919 ;; This function uses a non-reentrant model
 16920 ;;
 16921                           psect	text31,class=CODE,space=0,reloc=2,group=0
 16922                           	line	39
 16923                           global __ptext31
 16924                           __ptext31:
 16925  004546                     psect	text31
 16926                           	file	"lcd_x8.c"
 16927                           	line	39
 16928                           	global	__size_of_lcd_send_byte
 16929                           	__size_of_lcd_send_byte	equ	__end_of_lcd_send_byte-_lcd_send_byte
 16930  0000                     	
 16931                           _lcd_send_byte:
 16932  004546                     ;incstack = 0
 16933                           	opt	stack 23
 16934                           ;lcd_send_byte@cm_data stored from wreg
 16935                           	movwf	((c:lcd_send_byte@cm_data)),c
 16936  004546  6E27               	line	43
 16937                           	
 16938                           l3079:
 16939  004548                     ;lcd_x8.c: 43: PORTEbits.RE2 = cm_data;
 16940                           	btfsc	(c:lcd_send_byte@cm_data),c,0
 16941  004548  B027               	bra	u2715
 16942  00454A  D002               	bcf	((c:3972)),c,2	;volatile
 16943  00454C  9484               	bra	u2716
 16944  00454E  D001               	u2715:
 16945  004550                     	bsf	((c:3972)),c,2	;volatile
 16946  004550  8484               	u2716:
 16947  004552                     
 16948                           	line	44
 16949                           	
 16950                           l3081:
 16951  004552                     ;lcd_x8.c: 44: delay_cycles(1);
 16952                           	movlw	(01h)&0ffh
 16953  004552  0E01               	
 16954                           	call	_delay_cycles
 16955  004554  EC1D  F023         	line	46
 16956                           	
 16957                           l3083:
 16958  004558                     ;lcd_x8.c: 46: delay_cycles(1);
 16959                           	movlw	(01h)&0ffh
 16960  004558  0E01               	
 16961                           	call	_delay_cycles
 16962  00455A  EC1D  F023         	line	47
 16963                           	
 16964                           l3085:
 16965  00455E                     ;lcd_x8.c: 47: PORTEbits.RE1 = 0;
 16966                           	bcf	((c:3972)),c,1	;volatile
 16967  00455E  9284               	line	48
 16968                           	
 16969                           l3087:
 16970  004560                     ;lcd_x8.c: 48: lcd_send_nibble(n >> 4);
 16971                           	swapf	((c:lcd_send_byte@n)),c,w
 16972  004560  3826               	andlw	(0ffh shr 4) & 0ffh
 16973  004562  0B0F               	
 16974                           	call	_lcd_send_nibble
 16975  004564  EC0E  F024         	line	49
 16976                           	
 16977                           l3089:
 16978  004568                     ;lcd_x8.c: 49: lcd_send_nibble(n & 0x0f);
 16979                           	movf	((c:lcd_send_byte@n)),c,w
 16980  004568  5026               	andlw	low(0Fh)
 16981  00456A  0B0F               	
 16982                           	call	_lcd_send_nibble
 16983  00456C  EC0E  F024         	line	50
 16984                           	
 16985                           l3091:
 16986  004570                     ;lcd_x8.c: 50: if (cm_data) _delaywdt((unsigned long)((200)*(4000000UL/4000000.0)));
 16987                           	movf	((c:lcd_send_byte@cm_data)),c,w
 16988  004570  5027               	btfsc	status,2
 16989  004572  B4D8               	goto	u2721
 16990  004574  EFBE  F022         	goto	u2720
 16991  004578  EFC0  F022         u2721:
 16992  00457C                     	goto	l3095
 16993  00457C  EFC6  F022         u2720:
 16994  004580                     	
 16995                           l3093:
 16996  004580                     	opt asmopt_push
 16997                           opt asmopt_off
 16998                           	movlw	50
 16999  004580  0E32               u6877:
 17000  004582                     	clrwdt
 17001  004582  0004               decfsz	wreg,f
 17002  004584  2EE8               	bra	u6877
 17003  004586  D7FD               opt asmopt_pop
 17004                           
 17005                           	goto	l82
 17006  004588  EFCE  F022         	line	51
 17007                           	
 17008                           l80:
 17009  00458C                     	line	52
 17010                           	
 17011                           l3095:
 17012  00458C                     ;lcd_x8.c: 51: else
 17013                           ;lcd_x8.c: 52: delay_ms(2);
 17014                           	movlw	high(02h)
 17015  00458C  0E00               	movwf	((c:delay_ms@n+1)),c
 17016  00458E  6E1F               	movlw	low(02h)
 17017  004590  0E02               	movwf	((c:delay_ms@n)),c
 17018  004592  6E1E               	call	_delay_ms	;wreg free
 17019  004594  EC97  F023         	goto	l82
 17020  004598  EFCE  F022         	
 17021                           l81:
 17022  00459C                     	line	54
 17023                           	
 17024                           l82:
 17025  00459C                     	return	;funcret
 17026  00459C  0012               	opt stack 0
 17027                           GLOBAL	__end_of_lcd_send_byte
 17028                           	__end_of_lcd_send_byte:
 17029  00459E                     	signat	_lcd_send_byte,8313
 17030                           	global	_lcd_send_nibble
 17031                           
 17032 ;; *************** function _lcd_send_nibble *****************
 17033 ;; Defined at:
 17034 ;;		line 29 in file "lcd_x8.c"
 17035 ;; Parameters:    Size  Location     Type
 17036 ;;  n               1    wreg     unsigned char 
 17037 ;; Auto vars:     Size  Location     Type
 17038 ;;  n               1   36[COMRAM] unsigned char 
 17039 ;; Return value:  Size  Location     Type
 17040 ;;                  1    wreg      void 
 17041 ;; Registers used:
 17042 ;;		wreg, status,2, status,0, cstack
 17043 ;; Tracked objects:
 17044 ;;		On entry : 0/0
 17045 ;;		On exit  : 0/0
 17046 ;;		Unchanged: 0/0
 17047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 17048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17049 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17050 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17051 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17052 ;;Total ram usage:        2 bytes
 17053 ;; Hardware stack levels used:    1
 17054 ;; Hardware stack levels required when called:    4
 17055 ;; This function calls:
 17056 ;;		_delay_cycles
 17057 ;; This function is called by:
 17058 ;;		_lcd_send_byte
 17059 ;;		_lcd_init
 17060 ;; This function uses a non-reentrant model
 17061 ;;
 17062                           psect	text32,class=CODE,space=0,reloc=2,group=0
 17063                           	line	29
 17064                           global __ptext32
 17065                           __ptext32:
 17066  00481C                     psect	text32
 17067                           	file	"lcd_x8.c"
 17068                           	line	29
 17069                           	global	__size_of_lcd_send_nibble
 17070                           	__size_of_lcd_send_nibble	equ	__end_of_lcd_send_nibble-_lcd_send_nibble
 17071  0000                     	
 17072                           _lcd_send_nibble:
 17073  00481C                     ;incstack = 0
 17074                           	opt	stack 23
 17075                           ;lcd_send_nibble@n stored from wreg
 17076                           	movwf	((c:lcd_send_nibble@n)),c
 17077  00481C  6E25               	line	31
 17078                           	
 17079                           l3069:
 17080  00481E                     ;lcd_x8.c: 31: lcd.data = n;
 17081                           	movff	(c:lcd_send_nibble@n),??_lcd_send_nibble+0+0
 17082  00481E  C025  F024         	swapf	(??_lcd_send_nibble+0+0),c
 17083  004822  3A24               	movf	((c:3971)),c,w
 17084  004824  5083               	xorwf	(??_lcd_send_nibble+0+0),c,w
 17085  004826  1824               	andlw	not (((1<<4)-1)<<4)
 17086  004828  0B0F               	xorwf	(??_lcd_send_nibble+0+0),c,w
 17087  00482A  1824               	movwf	((c:3971)),c
 17088  00482C  6E83               	line	33
 17089                           	
 17090                           l3071:
 17091  00482E                     ;lcd_x8.c: 33: delay_cycles(1);
 17092                           	movlw	(01h)&0ffh
 17093  00482E  0E01               	
 17094                           	call	_delay_cycles
 17095  004830  EC1D  F023         	line	34
 17096                           	
 17097                           l3073:
 17098  004834                     ;lcd_x8.c: 34: PORTEbits.RE1 = 1;
 17099                           	bsf	((c:3972)),c,1	;volatile
 17100  004834  8284               	line	35
 17101                           	
 17102                           l3075:
 17103  004836                     ;lcd_x8.c: 35: _delaywdt((unsigned long)((2)*(4000000UL/4000000.0)));
 17104                           		opt asmopt_push
 17105                           	opt asmopt_off
 17106                           	clrwdt
 17107  004836  0004               	nop	;2 cycle nop
 17108  004838  F000               	opt asmopt_pop
 17109                           
 17110                           	line	36
 17111                           	
 17112                           l3077:
 17113  00483A                     ;lcd_x8.c: 36: PORTEbits.RE1 = 0;
 17114                           	bcf	((c:3972)),c,1	;volatile
 17115  00483A  9284               	line	37
 17116                           	
 17117                           l77:
 17118  00483C                     	return	;funcret
 17119  00483C  0012               	opt stack 0
 17120                           GLOBAL	__end_of_lcd_send_nibble
 17121                           	__end_of_lcd_send_nibble:
 17122  00483E                     	signat	_lcd_send_nibble,4217
 17123                           	global	_delay_cycles
 17124                           
 17125 ;; *************** function _delay_cycles *****************
 17126 ;; Defined at:
 17127 ;;		line 20 in file "lcd_x8.c"
 17128 ;; Parameters:    Size  Location     Type
 17129 ;;  n               1    wreg     unsigned char 
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;  n               1   32[COMRAM] unsigned char 
 17132 ;;  x               2   33[COMRAM] int 
 17133 ;; Return value:  Size  Location     Type
 17134 ;;                  1    wreg      void 
 17135 ;; Registers used:
 17136 ;;		wreg, status,2, status,0
 17137 ;; Tracked objects:
 17138 ;;		On entry : 0/0
 17139 ;;		On exit  : 0/0
 17140 ;;		Unchanged: 0/0
 17141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 17142 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17143 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17144 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17145 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17146 ;;Total ram usage:        6 bytes
 17147 ;; Hardware stack levels used:    1
 17148 ;; Hardware stack levels required when called:    3
 17149 ;; This function calls:
 17150 ;;		Nothing
 17151 ;; This function is called by:
 17152 ;;		_lcd_send_nibble
 17153 ;;		_lcd_send_byte
 17154 ;; This function uses a non-reentrant model
 17155 ;;
 17156                           psect	text33,class=CODE,space=0,reloc=2,group=0
 17157                           	line	20
 17158                           global __ptext33
 17159                           __ptext33:
 17160  00463A                     psect	text33
 17161                           	file	"lcd_x8.c"
 17162                           	line	20
 17163                           	global	__size_of_delay_cycles
 17164                           	__size_of_delay_cycles	equ	__end_of_delay_cycles-_delay_cycles
 17165  0000                     	
 17166                           _delay_cycles:
 17167  00463A                     ;incstack = 0
 17168                           	opt	stack 23
 17169                           ;delay_cycles@n stored from wreg
 17170                           	movwf	((c:delay_cycles@n)),c
 17171  00463A  6E21               	line	22
 17172                           	
 17173                           l3057:
 17174  00463C                     ;lcd_x8.c: 21: int x;
 17175                           ;lcd_x8.c: 22: for (x = 0; x <= n; x++) {
 17176                           	movlw	high(0)
 17177  00463C  0E00               	movwf	((c:delay_cycles@x+1)),c
 17178  00463E  6E23               	movlw	low(0)
 17179  004640  0E00               	movwf	((c:delay_cycles@x)),c
 17180  004642  6E22               	goto	l3061
 17181  004644  EF29  F023         	
 17182                           l72:
 17183  004648                     	line	23
 17184                           # 23 "lcd_x8.c"
 17185                           clrwdt ;# 
 17186  004648  0004               psect	text33
 17187                           	line	22
 17188                           	
 17189                           l3059:
 17190  00464A                     	infsnz	((c:delay_cycles@x)),c
 17191  00464A  4A22               	incf	((c:delay_cycles@x+1)),c
 17192  00464C  2A23               	goto	l3061
 17193  00464E  EF29  F023         	
 17194                           l71:
 17195  004652                     	
 17196                           l3061:
 17197  004652                     	movf	((c:delay_cycles@n)),c,w
 17198  004652  5021               	movwf	(??_delay_cycles+0+0)&0ffh,c
 17199  004654  6E1E               	clrf	(??_delay_cycles+0+0+1)&0ffh,c
 17200  004656  6A1F               
 17201                           		movf	((c:delay_cycles@x)),c,w
 17202  004658  5022               	subwf	(??_delay_cycles+0+0),c,w
 17203  00465A  5C1E               	movf	(??_delay_cycles+0+1),c,w
 17204  00465C  501F               	xorlw	80h
 17205  00465E  0A80               	movwf	(??_delay_cycles+2+0)&0ffh,c
 17206  004660  6E20               	movf	((c:delay_cycles@x+1)),c,w
 17207  004662  5023               	xorlw	80h
 17208  004664  0A80               	subwfb	(??_delay_cycles+2+0)&0ffh,c,w
 17209  004666  5820               	btfsc	status,0
 17210  004668  B0D8               	goto	u2691
 17211  00466A  EF39  F023         	goto	u2690
 17212  00466E  EF3B  F023         
 17213                           u2691:
 17214  004672                     	goto	l72
 17215  004672  EF24  F023         u2690:
 17216  004676                     	goto	l74
 17217  004676  EF3D  F023         	
 17218                           l73:
 17219  00467A                     	line	26
 17220                           	
 17221                           l74:
 17222  00467A                     	return	;funcret
 17223  00467A  0012               	opt stack 0
 17224                           GLOBAL	__end_of_delay_cycles
 17225                           	__end_of_delay_cycles:
 17226  00467C                     	signat	_delay_cycles,4217
 17227                           	global	_delay_ms
 17228                           
 17229 ;; *************** function _delay_ms *****************
 17230 ;; Defined at:
 17231 ;;		line 12 in file "lcd_x8.c"
 17232 ;; Parameters:    Size  Location     Type
 17233 ;;  n               2   29[COMRAM] unsigned int 
 17234 ;; Auto vars:     Size  Location     Type
 17235 ;;  x               2   31[COMRAM] int 
 17236 ;; Return value:  Size  Location     Type
 17237 ;;                  1    wreg      void 
 17238 ;; Registers used:
 17239 ;;		wreg, status,2, status,0
 17240 ;; Tracked objects:
 17241 ;;		On entry : 0/0
 17242 ;;		On exit  : 0/0
 17243 ;;		Unchanged: 0/0
 17244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 17245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17246 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17248 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17249 ;;Total ram usage:        4 bytes
 17250 ;; Hardware stack levels used:    1
 17251 ;; Hardware stack levels required when called:    3
 17252 ;; This function calls:
 17253 ;;		Nothing
 17254 ;; This function is called by:
 17255 ;;		_lcd_send_byte
 17256 ;;		_lcd_init
 17257 ;;		_lcd_putc
 17258 ;; This function uses a non-reentrant model
 17259 ;;
 17260                           psect	text34,class=CODE,space=0,reloc=2,group=0
 17261                           	line	12
 17262                           global __ptext34
 17263                           __ptext34:
 17264  00472E                     psect	text34
 17265                           	file	"lcd_x8.c"
 17266                           	line	12
 17267                           	global	__size_of_delay_ms
 17268                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
 17269  0000                     	
 17270                           _delay_ms:
 17271  00472E                     ;incstack = 0
 17272                           	opt	stack 24
 17273                           	line	14
 17274                           	
 17275                           l3063:
 17276  00472E                     ;lcd_x8.c: 13: int x;
 17277                           ;lcd_x8.c: 14: for (x = 0; x <= n; x++) {
 17278                           	movlw	high(0)
 17279  00472E  0E00               	movwf	((c:delay_ms@x+1)),c
 17280  004730  6E21               	movlw	low(0)
 17281  004732  0E00               	movwf	((c:delay_ms@x)),c
 17282  004734  6E20               	goto	l65
 17283  004736  EFA4  F023         	
 17284                           l66:
 17285  00473A                     	line	15
 17286                           	
 17287                           l3065:
 17288  00473A                     ;lcd_x8.c: 15: _delaywdt((unsigned long)((1)*(4000000UL/4000.0)));
 17289                           	opt asmopt_push
 17290                           opt asmopt_off
 17291                           	movlw	200
 17292  00473A  0EC8               u6887:
 17293  00473C                     	clrwdt
 17294  00473C  0004               	clrwdt
 17295  00473E  0004               decfsz	wreg,f
 17296  004740  2EE8               	bra	u6887
 17297  004742  D7FC               opt asmopt_pop
 17298                           
 17299                           	line	14
 17300                           	
 17301                           l3067:
 17302  004744                     	infsnz	((c:delay_ms@x)),c
 17303  004744  4A20               	incf	((c:delay_ms@x+1)),c
 17304  004746  2A21               	
 17305                           l65:
 17306  004748                     		movf	((c:delay_ms@x)),c,w
 17307  004748  5020               	subwf	((c:delay_ms@n)),c,w
 17308  00474A  5C1E               	movf	((c:delay_ms@x+1)),c,w
 17309  00474C  5021               	subwfb	((c:delay_ms@n+1)),c,w
 17310  00474E  581F               	btfsc	status,0
 17311  004750  B0D8               	goto	u2701
 17312  004752  EFAD  F023         	goto	u2700
 17313  004756  EFAF  F023         
 17314                           u2701:
 17315  00475A                     	goto	l3065
 17316  00475A  EF9D  F023         u2700:
 17317  00475E                     	goto	l68
 17318  00475E  EFB1  F023         	
 17319                           l67:
 17320  004762                     	line	18
 17321                           	
 17322                           l68:
 17323  004762                     	return	;funcret
 17324  004762  0012               	opt stack 0
 17325                           GLOBAL	__end_of_delay_ms
 17326                           	__end_of_delay_ms:
 17327  004764                     	signat	_delay_ms,4217
 17328                           	global	_initialization
 17329                           
 17330 ;; *************** function _initialization *****************
 17331 ;; Defined at:
 17332 ;;		line 127 in file "main.c"
 17333 ;; Parameters:    Size  Location     Type
 17334 ;;		None
 17335 ;; Auto vars:     Size  Location     Type
 17336 ;;		None
 17337 ;; Return value:  Size  Location     Type
 17338 ;;                  1    wreg      void 
 17339 ;; Registers used:
 17340 ;;		wreg, status,2
 17341 ;; Tracked objects:
 17342 ;;		On entry : 0/0
 17343 ;;		On exit  : 0/0
 17344 ;;		Unchanged: 0/0
 17345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 17346 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17347 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17348 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17349 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17350 ;;Total ram usage:        0 bytes
 17351 ;; Hardware stack levels used:    1
 17352 ;; Hardware stack levels required when called:    3
 17353 ;; This function calls:
 17354 ;;		Nothing
 17355 ;; This function is called by:
 17356 ;;		_main
 17357 ;; This function uses a non-reentrant model
 17358 ;;
 17359                           psect	text35,class=CODE,space=0,reloc=2,group=0
 17360                           	file	"main.c"
 17361                           	line	127
 17362                           global __ptext35
 17363                           __ptext35:
 17364  004764                     psect	text35
 17365                           	file	"main.c"
 17366                           	line	127
 17367                           	global	__size_of_initialization
 17368                           	__size_of_initialization	equ	__end_of_initialization-_initialization
 17369  0000                     	
 17370                           _initialization:
 17371  004764                     ;incstack = 0
 17372                           	opt	stack 27
 17373                           	line	128
 17374                           	
 17375                           l4175:
 17376  004764                     ;main.c: 128: PIR1 = 0;
 17377                           	movlw	low(0)
 17378  004764  0E00               	movwf	((c:3998)),c	;volatile
 17379  004766  6E9E               	line	129
 17380                           ;main.c: 129: PIR2 = 0;
 17381                           	movlw	low(0)
 17382  004768  0E00               	movwf	((c:4001)),c	;volatile
 17383  00476A  6EA1               	line	130
 17384                           	
 17385                           l4177:
 17386  00476C                     ;main.c: 130: PIE2bits.TMR3IE = 0;
 17387                           	bcf	((c:4000)),c,1	;volatile
 17388  00476C  92A0               	line	131
 17389                           ;main.c: 131: T3CON = 0;
 17390                           	movlw	low(0)
 17391  00476E  0E00               	movwf	((c:4017)),c	;volatile
 17392  004770  6EB1               	line	132
 17393                           ;main.c: 132: PIE2 = 0;
 17394                           	movlw	low(0)
 17395  004772  0E00               	movwf	((c:4000)),c	;volatile
 17396  004774  6EA0               	line	133
 17397                           	
 17398                           l4179:
 17399  004776                     ;main.c: 133: PIE2bits.TMR3IE = 1;
 17400                           	bsf	((c:4000)),c,1	;volatile
 17401  004776  82A0               	line	134
 17402                           	
 17403                           l4181:
 17404  004778                     ;main.c: 134: T3CONbits.TMR3ON = 1;
 17405                           	bsf	((c:4017)),c,0	;volatile
 17406  004778  80B1               	line	135
 17407                           	
 17408                           l4183:
 17409  00477A                     ;main.c: 135: RCONbits.IPEN = 0;
 17410                           	bcf	((c:4048)),c,7	;volatile
 17411  00477A  9ED0               	line	136
 17412                           ;main.c: 136: INTCON3 = 0;
 17413                           	movlw	low(0)
 17414  00477C  0E00               	movwf	((c:4080)),c	;volatile
 17415  00477E  6EF0               	line	137
 17416                           	
 17417                           l4185:
 17418  004780                     ;main.c: 137: INTCON3bits.INT1E = 1;
 17419                           	bsf	((c:4080)),c,3	;volatile
 17420  004780  86F0               	line	138
 17421                           	
 17422                           l4187:
 17423  004782                     ;main.c: 138: INTCON3bits.INT2E = 1;
 17424                           	bsf	((c:4080)),c,4	;volatile
 17425  004782  88F0               	line	139
 17426                           ;main.c: 139: INTCON2 = 0;
 17427                           	movlw	low(0)
 17428  004784  0E00               	movwf	((c:4081)),c	;volatile
 17429  004786  6EF1               	line	140
 17430                           ;main.c: 140: INTCON = 0;
 17431                           	movlw	low(0)
 17432  004788  0E00               	movwf	((c:4082)),c	;volatile
 17433  00478A  6EF2               	line	141
 17434                           	
 17435                           l4189:
 17436  00478C                     ;main.c: 141: INTCONbits.GIE = 1;
 17437                           	bsf	((c:4082)),c,7	;volatile
 17438  00478C  8EF2               	line	142
 17439                           	
 17440                           l4191:
 17441  00478E                     ;main.c: 142: INTCONbits.PEIE = 1;
 17442                           	bsf	((c:4082)),c,6	;volatile
 17443  00478E  8CF2               	line	143
 17444                           	
 17445                           l4193:
 17446  004790                     ;main.c: 143: INTCONbits.INT0E = 1;
 17447                           	bsf	((c:4082)),c,4	;volatile
 17448  004790  88F2               	line	144
 17449                           	
 17450                           l4195:
 17451  004792                     ;main.c: 144: INTCONbits.TMR0IE = 1;
 17452                           	bsf	((c:4082)),c,5	;volatile
 17453  004792  8AF2               	line	145
 17454                           	
 17455                           l4197:
 17456  004794                     ;main.c: 145: INTCONbits.INT0F = 0;
 17457                           	bcf	((c:4082)),c,1	;volatile
 17458  004794  92F2               	line	146
 17459                           	
 17460                           l238:
 17461  004796                     	return	;funcret
 17462  004796  0012               	opt stack 0
 17463                           GLOBAL	__end_of_initialization
 17464                           	__end_of_initialization:
 17465  004798                     	signat	_initialization,89
 17466                           	global	_init_pwm1
 17467                           
 17468 ;; *************** function _init_pwm1 *****************
 17469 ;; Defined at:
 17470 ;;		line 5 in file "my_pwm.c"
 17471 ;; Parameters:    Size  Location     Type
 17472 ;;		None
 17473 ;; Auto vars:     Size  Location     Type
 17474 ;;		None
 17475 ;; Return value:  Size  Location     Type
 17476 ;;                  1    wreg      void 
 17477 ;; Registers used:
 17478 ;;		wreg, status,2
 17479 ;; Tracked objects:
 17480 ;;		On entry : 0/0
 17481 ;;		On exit  : 0/0
 17482 ;;		Unchanged: 0/0
 17483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 17484 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17487 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17488 ;;Total ram usage:        0 bytes
 17489 ;; Hardware stack levels used:    1
 17490 ;; Hardware stack levels required when called:    3
 17491 ;; This function calls:
 17492 ;;		Nothing
 17493 ;; This function is called by:
 17494 ;;		_main
 17495 ;; This function uses a non-reentrant model
 17496 ;;
 17497                           psect	text36,class=CODE,space=0,reloc=2,group=0
 17498                           	file	"my_pwm.c"
 17499                           	line	5
 17500                           global __ptext36
 17501                           __ptext36:
 17502  004858                     psect	text36
 17503                           	file	"my_pwm.c"
 17504                           	line	5
 17505                           	global	__size_of_init_pwm1
 17506                           	__size_of_init_pwm1	equ	__end_of_init_pwm1-_init_pwm1
 17507  0000                     	
 17508                           _init_pwm1:
 17509  004858                     ;incstack = 0
 17510                           	opt	stack 27
 17511                           	line	7
 17512                           	
 17513                           l4091:
 17514  004858                     ;my_pwm.c: 7: PR2 = 255;
 17515                           	setf	((c:4043)),c	;volatile
 17516  004858  68CB               	line	8
 17517                           	
 17518                           l4093:
 17519  00485A                     ;my_pwm.c: 8: T2CON = 0;
 17520                           	movlw	low(0)
 17521  00485A  0E00               	movwf	((c:4042)),c	;volatile
 17522  00485C  6ECA               	line	9
 17523                           ;my_pwm.c: 9: CCP1CON = 0x0C;
 17524                           	movlw	low(0Ch)
 17525  00485E  0E0C               	movwf	((c:4029)),c	;volatile
 17526  004860  6EBD               	line	11
 17527                           	
 17528                           l4095:
 17529  004862                     ;my_pwm.c: 11: T2CONbits.TMR2ON = 1;
 17530                           	bsf	((c:4042)),c,2	;volatile
 17531  004862  84CA               	line	12
 17532                           	
 17533                           l4097:
 17534  004864                     ;my_pwm.c: 12: TRISCbits.RC2 =0;
 17535                           	bcf	((c:3988)),c,2	;volatile
 17536  004864  9494               	line	13
 17537                           	
 17538                           l39:
 17539  004866                     	return	;funcret
 17540  004866  0012               	opt stack 0
 17541                           GLOBAL	__end_of_init_pwm1
 17542                           	__end_of_init_pwm1:
 17543  004868                     	signat	_init_pwm1,89
 17544                           	global	_init_adc_no_lib
 17545                           
 17546 ;; *************** function _init_adc_no_lib *****************
 17547 ;; Defined at:
 17548 ;;		line 11 in file "my_adc.c"
 17549 ;; Parameters:    Size  Location     Type
 17550 ;;		None
 17551 ;; Auto vars:     Size  Location     Type
 17552 ;;		None
 17553 ;; Return value:  Size  Location     Type
 17554 ;;                  1    wreg      void 
 17555 ;; Registers used:
 17556 ;;		wreg, status,2
 17557 ;; Tracked objects:
 17558 ;;		On entry : 0/0
 17559 ;;		On exit  : 0/0
 17560 ;;		Unchanged: 0/0
 17561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 17562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17566 ;;Total ram usage:        0 bytes
 17567 ;; Hardware stack levels used:    1
 17568 ;; Hardware stack levels required when called:    3
 17569 ;; This function calls:
 17570 ;;		Nothing
 17571 ;; This function is called by:
 17572 ;;		_main
 17573 ;; This function uses a non-reentrant model
 17574 ;;
 17575                           psect	text37,class=CODE,space=0,reloc=2,group=0
 17576                           	file	"my_adc.c"
 17577                           	line	11
 17578                           global __ptext37
 17579                           __ptext37:
 17580  004874                     psect	text37
 17581                           	file	"my_adc.c"
 17582                           	line	11
 17583                           	global	__size_of_init_adc_no_lib
 17584                           	__size_of_init_adc_no_lib	equ	__end_of_init_adc_no_lib-_init_adc_no_lib
 17585  0000                     	
 17586                           _init_adc_no_lib:
 17587  004874                     ;incstack = 0
 17588                           	opt	stack 27
 17589                           	line	14
 17590                           	
 17591                           l4079:
 17592  004874                     ;my_adc.c: 14: ADCON0 = 0;
 17593                           	movlw	low(0)
 17594  004874  0E00               	movwf	((c:4034)),c	;volatile
 17595  004876  6EC2               	line	15
 17596                           	
 17597                           l4081:
 17598  004878                     ;my_adc.c: 15: ADCON0bits.ADON = 1;
 17599                           	bsf	((c:4034)),c,0	;volatile
 17600  004878  80C2               	line	18
 17601                           ;my_adc.c: 18: ADCON2 = 0b10001001;
 17602                           	movlw	low(089h)
 17603  00487A  0E89               	movwf	((c:4032)),c	;volatile
 17604  00487C  6EC0               	line	27
 17605                           	
 17606                           l13:
 17607  00487E                     	return	;funcret
 17608  00487E  0012               	opt stack 0
 17609                           GLOBAL	__end_of_init_adc_no_lib
 17610                           	__end_of_init_adc_no_lib:
 17611  004880                     	signat	_init_adc_no_lib,89
 17612                           	global	_initTimers01
 17613                           
 17614 ;; *************** function _initTimers01 *****************
 17615 ;; Defined at:
 17616 ;;		line 98 in file "main.c"
 17617 ;; Parameters:    Size  Location     Type
 17618 ;;		None
 17619 ;; Auto vars:     Size  Location     Type
 17620 ;;		None
 17621 ;; Return value:  Size  Location     Type
 17622 ;;                  1    wreg      void 
 17623 ;; Registers used:
 17624 ;;		wreg, status,2
 17625 ;; Tracked objects:
 17626 ;;		On entry : 0/0
 17627 ;;		On exit  : 0/0
 17628 ;;		Unchanged: 0/0
 17629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 17630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17632 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17633 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17634 ;;Total ram usage:        0 bytes
 17635 ;; Hardware stack levels used:    1
 17636 ;; Hardware stack levels required when called:    3
 17637 ;; This function calls:
 17638 ;;		Nothing
 17639 ;; This function is called by:
 17640 ;;		_main
 17641 ;; This function uses a non-reentrant model
 17642 ;;
 17643                           psect	text38,class=CODE,space=0,reloc=2,group=0
 17644                           	file	"main.c"
 17645                           	line	98
 17646                           global __ptext38
 17647                           __ptext38:
 17648  0047C6                     psect	text38
 17649                           	file	"main.c"
 17650                           	line	98
 17651                           	global	__size_of_initTimers01
 17652                           	__size_of_initTimers01	equ	__end_of_initTimers01-_initTimers01
 17653  0000                     	
 17654                           _initTimers01:
 17655  0047C6                     ;incstack = 0
 17656                           	opt	stack 27
 17657                           	line	99
 17658                           	
 17659                           l4147:
 17660  0047C6                     ;main.c: 99: T0CON = 0;
 17661                           	movlw	low(0)
 17662  0047C6  0E00               	movwf	((c:4053)),c	;volatile
 17663  0047C8  6ED5               	line	103
 17664                           	
 17665                           l4149:
 17666  0047CA                     ;main.c: 103: INTCONbits.T0IF = 0;
 17667                           	bcf	((c:4082)),c,2	;volatile
 17668  0047CA  94F2               	line	104
 17669                           	
 17670                           l4151:
 17671  0047CC                     ;main.c: 104: T0CONbits.T0PS0 = 1;
 17672                           	bsf	((c:4053)),c,0	;volatile
 17673  0047CC  80D5               	line	105
 17674                           	
 17675                           l4153:
 17676  0047CE                     ;main.c: 105: T0CONbits.T0PS1 = 1;
 17677                           	bsf	((c:4053)),c,1	;volatile
 17678  0047CE  82D5               	line	106
 17679                           	
 17680                           l4155:
 17681  0047D0                     ;main.c: 106: T0CONbits.T0PS2 = 0;
 17682                           	bcf	((c:4053)),c,2	;volatile
 17683  0047D0  94D5               	line	107
 17684                           ;main.c: 107: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 17685                           	movlw	low(0Bh)
 17686  0047D2  0E0B               	movwf	((c:4055)),c	;volatile
 17687  0047D4  6ED7               	line	108
 17688                           ;main.c: 108: TMR0L = (unsigned char) (3036 & 0x00FF);
 17689                           	movlw	low(0DCh)
 17690  0047D6  0EDC               	movwf	((c:4054)),c	;volatile
 17691  0047D8  6ED6               	line	109
 17692                           	
 17693                           l4157:
 17694  0047DA                     ;main.c: 109: T1CONbits.TMR1CS = 1;
 17695                           	bsf	((c:4045)),c,1	;volatile
 17696  0047DA  82CD               	line	110
 17697                           	
 17698                           l4159:
 17699  0047DC                     ;main.c: 110: T1CONbits.T1CKPS1 = 0;
 17700                           	bcf	((c:4045)),c,5	;volatile
 17701  0047DC  9ACD               	line	111
 17702                           	
 17703                           l4161:
 17704  0047DE                     ;main.c: 111: T1CONbits.T1CKPS0 = 0;
 17705                           	bcf	((c:4045)),c,4	;volatile
 17706  0047DE  98CD               	line	112
 17707                           ;main.c: 112: TMR1H = 0;
 17708                           	movlw	low(0)
 17709  0047E0  0E00               	movwf	((c:4047)),c	;volatile
 17710  0047E2  6ECF               	line	113
 17711                           ;main.c: 113: TMR1L = 0;
 17712                           	movlw	low(0)
 17713  0047E4  0E00               	movwf	((c:4046)),c	;volatile
 17714  0047E6  6ECE               	line	114
 17715                           	
 17716                           l4163:
 17717  0047E8                     ;main.c: 114: INTCONbits.GIE = 1;
 17718                           	bsf	((c:4082)),c,7	;volatile
 17719  0047E8  8EF2               	line	115
 17720                           	
 17721                           l4165:
 17722  0047EA                     ;main.c: 115: INTCONbits.T0IE = 1;
 17723                           	bsf	((c:4082)),c,5	;volatile
 17724  0047EA  8AF2               	line	116
 17725                           	
 17726                           l4167:
 17727  0047EC                     ;main.c: 116: T1CONbits.TMR1ON = 1;
 17728                           	bsf	((c:4045)),c,0	;volatile
 17729  0047EC  80CD               	line	117
 17730                           	
 17731                           l4169:
 17732  0047EE                     ;main.c: 117: T0CONbits.TMR0ON = 1;
 17733                           	bsf	((c:4053)),c,7	;volatile
 17734  0047EE  8ED5               	line	119
 17735                           	
 17736                           l232:
 17737  0047F0                     	return	;funcret
 17738  0047F0  0012               	opt stack 0
 17739                           GLOBAL	__end_of_initTimers01
 17740                           	__end_of_initTimers01:
 17741  0047F2                     	signat	_initTimers01,89
 17742                           	global	_highIsr
 17743                           
 17744 ;; *************** function _highIsr *****************
 17745 ;; Defined at:
 17746 ;;		line 158 in file "main.c"
 17747 ;; Parameters:    Size  Location     Type
 17748 ;;		None
 17749 ;; Auto vars:     Size  Location     Type
 17750 ;;		None
 17751 ;; Return value:  Size  Location     Type
 17752 ;;                  1    wreg      void 
 17753 ;; Registers used:
 17754 ;;		wreg, status,2, status,0, cstack
 17755 ;; Tracked objects:
 17756 ;;		On entry : 0/0
 17757 ;;		On exit  : 0/0
 17758 ;;		Unchanged: 0/0
 17759 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 17760 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17761 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17762 ;;      Temps:         20       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17763 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 17764 ;;Total ram usage:       20 bytes
 17765 ;; Hardware stack levels used:    1
 17766 ;; Hardware stack levels required when called:    2
 17767 ;; This function calls:
 17768 ;;		i2___awmod
 17769 ;;		i2_pwd_Timer3
 17770 ;;		i2_reloadTimer3
 17771 ;; This function is called by:
 17772 ;;		Interrupt level 2
 17773 ;; This function uses a non-reentrant model
 17774 ;;
 17775                           psect	intcode,class=CODE,space=0,reloc=2
 17776                           global __pintcode
 17777                           __pintcode:
 17778  000008                     psect	intcode
 17779                           	file	"main.c"
 17780                           	line	158
 17781                           	global	__size_of_highIsr
 17782                           	__size_of_highIsr	equ	__end_of_highIsr-_highIsr
 17783  0000                     	
 17784                           _highIsr:
 17785  000008                     ;incstack = 0
 17786                           	opt	stack 22
 17787                           	bsf int$flags,1,c ;set compiler interrupt flag (level 2)
 17788  000008  8262               	global	int_func
 17789                           	call	int_func,f	;refresh shadow registers
 17790  00000A  ED7E  F017         psect	intcode_body,class=CODE,space=0,reloc=2
 17791                           global __pintcode_body
 17792                           __pintcode_body:
 17793  002EFC                     int_func:
 17794  002EFC                     
 17795                           	pop	; remove dummy address from shadow register refresh
 17796  002EFC  0006               	movff	pclath+0,??_highIsr+2
 17797  002EFE  CFFA F00C          	movff	pclath+1,??_highIsr+3
 17798  002F02  CFFB F00D          	movff	fsr0l+0,??_highIsr+4
 17799  002F06  CFE9 F00E          	movff	fsr0h+0,??_highIsr+5
 17800  002F0A  CFEA F00F          	movff	fsr1l+0,??_highIsr+6
 17801  002F0E  CFE1 F010          	movff	fsr1h+0,??_highIsr+7
 17802  002F12  CFE2 F011          	movff	fsr2l+0,??_highIsr+8
 17803  002F16  CFD9 F012          	movff	fsr2h+0,??_highIsr+9
 17804  002F1A  CFDA F013          	movff	prodl+0,??_highIsr+10
 17805  002F1E  CFF3 F014          	movff	prodh+0,??_highIsr+11
 17806  002F22  CFF4 F015          	movff	tblptrl+0,??_highIsr+12
 17807  002F26  CFF6 F016          	movff	tblptrh+0,??_highIsr+13
 17808  002F2A  CFF7 F017          	movff	tblptru+0,??_highIsr+14
 17809  002F2E  CFF8 F018          	movff	tablat+0,??_highIsr+15
 17810  002F32  CFF5 F019          	movff	btemp+0,??_highIsr+16
 17811  002F36  C062  F01A         	movff	btemp+1+0,??_highIsr+17
 17812  002F3A  C063  F01B         	movff	btemp+2+0,??_highIsr+18
 17813  002F3E  C064  F01C         	movff	btemp+3+0,??_highIsr+19
 17814  002F42  C065  F01D         	line	160
 17815                           	
 17816                           i2l4601:
 17817  002F46                     ;main.c: 160: if (PIR2bits.TMR3IF) {
 17818                           	btfss	((c:4001)),c,1	;volatile
 17819  002F46  A2A1               	goto	i2u497_41
 17820  002F48  EFA8  F017         	goto	i2u497_40
 17821  002F4C  EFAA  F017         i2u497_41:
 17822  002F50                     	goto	i2l246
 17823  002F50  EFBF  F017         i2u497_40:
 17824  002F54                     	line	161
 17825                           	
 17826                           i2l4603:
 17827  002F54                     ;main.c: 161: reloadTimer3();
 17828                           	call	i2_reloadTimer3	;wreg free
 17829  002F54  EC40  F024         	line	162
 17830                           	
 17831                           i2l4605:
 17832  002F58                     ;main.c: 162: if (operationModes == 0) {
 17833                           	movf	((c:_operationModes)),c,w
 17834  002F58  5058               iorwf	((c:_operationModes+1)),c,w
 17835  002F5A  1059               	btfss	status,2
 17836  002F5C  A4D8               	goto	i2u498_41
 17837  002F5E  EFB3  F017         	goto	i2u498_40
 17838  002F62  EFB5  F017         
 17839                           i2u498_41:
 17840  002F66                     	goto	i2l273
 17841  002F66  EF14  F019         i2u498_40:
 17842  002F6A                     	line	163
 17843                           	
 17844                           i2l4607:
 17845  002F6A                     ;main.c: 163: pwd_Timer3(percentHeatCounter);
 17846                           	movff	(c:_percentHeatCounter),(c:i2pwd_Timer3@limit)
 17847  002F6A  C05C  F007         	movff	(c:_percentHeatCounter+1),(c:i2pwd_Timer3@limit+1)
 17848  002F6E  C05D  F008         	call	i2_pwd_Timer3	;wreg free
 17849  002F72  ECCD  F021         	goto	i2l273
 17850  002F76  EF14  F019         	line	164
 17851                           	
 17852                           i2l247:
 17853  002F7A                     	line	169
 17854                           ;main.c: 164: }
 17855                           ;main.c: 169: } else if (INTCONbits.INT0IF) {
 17856                           	goto	i2l273
 17857  002F7A  EF14  F019         	
 17858                           i2l246:
 17859  002F7E                     	btfss	((c:4082)),c,1	;volatile
 17860  002F7E  A2F2               	goto	i2u499_41
 17861  002F80  EFC4  F017         	goto	i2u499_40
 17862  002F84  EFC6  F017         i2u499_41:
 17863  002F88                     	goto	i2l249
 17864  002F88  EFE9  F017         i2u499_40:
 17865  002F8C                     	line	170
 17866                           	
 17867                           i2l4609:
 17868  002F8C                     ;main.c: 170: INTCONbits.INT0IF = 0;
 17869                           	bcf	((c:4082)),c,1	;volatile
 17870  002F8C  92F2               	line	171
 17871                           	
 17872                           i2l4611:
 17873  002F8E                     ;main.c: 171: operationModes = (operationModes + 1) % 3;
 17874                           	movlw	low(01h)
 17875  002F8E  0E01               	addwf	((c:_operationModes)),c,w
 17876  002F90  2458               	movwf	((c:i2___awmod@dividend)),c
 17877  002F92  6E01               	movlw	high(01h)
 17878  002F94  0E00               	addwfc	((c:_operationModes+1)),c,w
 17879  002F96  2059               	movwf	1+((c:i2___awmod@dividend)),c
 17880  002F98  6E02               	movlw	high(03h)
 17881  002F9A  0E00               	movwf	((c:i2___awmod@divisor+1)),c
 17882  002F9C  6E04               	movlw	low(03h)
 17883  002F9E  0E03               	movwf	((c:i2___awmod@divisor)),c
 17884  002FA0  6E03               	call	i2___awmod	;wreg free
 17885  002FA2  EC76  F01F         	movff	0+?i2___awmod,(c:_operationModes)
 17886  002FA6  C001  F058         	movff	1+?i2___awmod,(c:_operationModes+1)
 17887  002FAA  C002  F059         	line	172
 17888                           	
 17889                           i2l4613:
 17890  002FAE                     ;main.c: 172: timer3Counter = 0;
 17891                           	movlw	high(0)
 17892  002FAE  0E00               	movwf	((c:_timer3Counter+1)),c
 17893  002FB0  6E57               	movlw	low(0)
 17894  002FB2  0E00               	movwf	((c:_timer3Counter)),c
 17895  002FB4  6E56               	line	173
 17896                           	
 17897                           i2l4615:
 17898  002FB6                     ;main.c: 173: percentCoolCounter = percentHeatCounter = HS = 0;
 17899                           	movlw	high(0)
 17900  002FB6  0E00               	movwf	((c:_HS+1)),c
 17901  002FB8  6E55               	movlw	low(0)
 17902  002FBA  0E00               	movwf	((c:_HS)),c
 17903  002FBC  6E54               	movff	(c:_HS),(c:_percentHeatCounter)
 17904  002FBE  C054  F05C         	movff	(c:_HS+1),(c:_percentHeatCounter+1)
 17905  002FC2  C055  F05D         	movff	(c:_percentHeatCounter),(c:_percentCoolCounter)
 17906  002FC6  C05C  F05A         	movff	(c:_percentHeatCounter+1),(c:_percentCoolCounter+1)
 17907  002FCA  C05D  F05B         	line	174
 17908                           ;main.c: 174: } else if (INTCON3bits.INT1IF) {
 17909                           	goto	i2l273
 17910  002FCE  EF14  F019         	
 17911                           i2l249:
 17912  002FD2                     	btfss	((c:4080)),c,0	;volatile
 17913  002FD2  A0F0               	goto	i2u500_41
 17914  002FD4  EFEE  F017         	goto	i2u500_40
 17915  002FD8  EFF0  F017         i2u500_41:
 17916  002FDC                     	goto	i2l251
 17917  002FDC  EF6F  F018         i2u500_40:
 17918  002FE0                     	line	175
 17919                           	
 17920                           i2l4617:
 17921  002FE0                     ;main.c: 175: INTCON3bits.INT1IF = 0;
 17922                           	bcf	((c:4080)),c,0	;volatile
 17923  002FE0  90F0               	line	176
 17924                           	
 17925                           i2l4619:
 17926  002FE2                     ;main.c: 176: if (operationModes == 0) {
 17927                           	movf	((c:_operationModes)),c,w
 17928  002FE2  5058               iorwf	((c:_operationModes+1)),c,w
 17929  002FE4  1059               	btfss	status,2
 17930  002FE6  A4D8               	goto	i2u501_41
 17931  002FE8  EFF8  F017         	goto	i2u501_40
 17932  002FEC  EFFA  F017         
 17933                           i2u501_41:
 17934  002FF0                     	goto	i2l4625
 17935  002FF0  EF17  F018         i2u501_40:
 17936  002FF4                     	line	177
 17937                           	
 17938                           i2l4621:
 17939  002FF4                     ;main.c: 177: if (percentHeatCounter != 0) {
 17940                           	movf	((c:_percentHeatCounter)),c,w
 17941  002FF4  505C               iorwf	((c:_percentHeatCounter+1)),c,w
 17942  002FF6  105D               	btfsc	status,2
 17943  002FF8  B4D8               	goto	i2u502_41
 17944  002FFA  EF01  F018         	goto	i2u502_40
 17945  002FFE  EF03  F018         
 17946                           i2u502_41:
 17947  003002                     	goto	i2l273
 17948  003002  EF14  F019         i2u502_40:
 17949  003006                     	line	178
 17950                           	
 17951                           i2l4623:
 17952  003006                     ;main.c: 178: percentHeatCounter = (percentHeatCounter - 1) % 11;
 17953                           	movlw	low(-1)
 17954  003006  0EFF               	addwf	((c:_percentHeatCounter)),c,w
 17955  003008  245C               	movwf	((c:i2___awmod@dividend)),c
 17956  00300A  6E01               	movlw	high(-1)
 17957  00300C  0EFF               	addwfc	((c:_percentHeatCounter+1)),c,w
 17958  00300E  205D               	movwf	1+((c:i2___awmod@dividend)),c
 17959  003010  6E02               	movlw	high(0Bh)
 17960  003012  0E00               	movwf	((c:i2___awmod@divisor+1)),c
 17961  003014  6E04               	movlw	low(0Bh)
 17962  003016  0E0B               	movwf	((c:i2___awmod@divisor)),c
 17963  003018  6E03               	call	i2___awmod	;wreg free
 17964  00301A  EC76  F01F         	movff	0+?i2___awmod,(c:_percentHeatCounter)
 17965  00301E  C001  F05C         	movff	1+?i2___awmod,(c:_percentHeatCounter+1)
 17966  003022  C002  F05D         	goto	i2l273
 17967  003026  EF14  F019         	line	179
 17968                           	
 17969                           i2l253:
 17970  00302A                     	line	180
 17971                           ;main.c: 179: }
 17972                           ;main.c: 180: } else if (operationModes == 1) {
 17973                           	goto	i2l273
 17974  00302A  EF14  F019         	
 17975                           i2l252:
 17976  00302E                     	
 17977                           i2l4625:
 17978  00302E                     		decf	((c:_operationModes)),c,w
 17979  00302E  0458               iorwf	((c:_operationModes+1)),c,w
 17980  003030  1059               	btfss	status,2
 17981  003032  A4D8               	goto	i2u503_41
 17982  003034  EF1E  F018         	goto	i2u503_40
 17983  003038  EF20  F018         
 17984                           i2u503_41:
 17985  00303C                     	goto	i2l4633
 17986  00303C  EF42  F018         i2u503_40:
 17987  003040                     	line	181
 17988                           	
 17989                           i2l4627:
 17990  003040                     ;main.c: 181: if (percentCoolCounter != 0) {
 17991                           	movf	((c:_percentCoolCounter)),c,w
 17992  003040  505A               iorwf	((c:_percentCoolCounter+1)),c,w
 17993  003042  105B               	btfsc	status,2
 17994  003044  B4D8               	goto	i2u504_41
 17995  003046  EF27  F018         	goto	i2u504_40
 17996  00304A  EF29  F018         
 17997                           i2u504_41:
 17998  00304E                     	goto	i2l4631
 17999  00304E  EF3B  F018         i2u504_40:
 18000  003052                     	line	182
 18001                           	
 18002                           i2l4629:
 18003  003052                     ;main.c: 182: percentCoolCounter = (percentCoolCounter - 1) % 11;
 18004                           	movlw	low(-1)
 18005  003052  0EFF               	addwf	((c:_percentCoolCounter)),c,w
 18006  003054  245A               	movwf	((c:i2___awmod@dividend)),c
 18007  003056  6E01               	movlw	high(-1)
 18008  003058  0EFF               	addwfc	((c:_percentCoolCounter+1)),c,w
 18009  00305A  205B               	movwf	1+((c:i2___awmod@dividend)),c
 18010  00305C  6E02               	movlw	high(0Bh)
 18011  00305E  0E00               	movwf	((c:i2___awmod@divisor+1)),c
 18012  003060  6E04               	movlw	low(0Bh)
 18013  003062  0E0B               	movwf	((c:i2___awmod@divisor)),c
 18014  003064  6E03               	call	i2___awmod	;wreg free
 18015  003066  EC76  F01F         	movff	0+?i2___awmod,(c:_percentCoolCounter)
 18016  00306A  C001  F05A         	movff	1+?i2___awmod,(c:_percentCoolCounter+1)
 18017  00306E  C002  F05B         	line	183
 18018                           ;main.c: 183: } else {
 18019                           	goto	i2l273
 18020  003072  EF14  F019         	
 18021                           i2l256:
 18022  003076                     	line	184
 18023                           	
 18024                           i2l4631:
 18025  003076                     ;main.c: 184: coolerON = 0;
 18026                           	movlw	low(0)
 18027  003076  0E00               	movlb	1	; () banked
 18028  003078  0101               	movwf	((_coolerON))&0ffh
 18029  00307A  6F5D               	goto	i2l273
 18030  00307C  EF14  F019         	line	185
 18031                           	
 18032                           i2l257:; BSR set to: 1
 18033  003080                     
 18034                           	line	186
 18035                           ;main.c: 185: }
 18036                           ;main.c: 186: } else if (operationModes == 2) {
 18037                           	goto	i2l273
 18038  003080  EF14  F019         	
 18039                           i2l255:; BSR set to: 1
 18040  003084                     
 18041                           	
 18042                           i2l4633:
 18043  003084                     		movlw	2
 18044  003084  0E02               	xorwf	((c:_operationModes)),c,w
 18045  003086  1858               iorwf	((c:_operationModes+1)),c,w
 18046  003088  1059               	btfss	status,2
 18047  00308A  A4D8               	goto	i2u505_41
 18048  00308C  EF4A  F018         	goto	i2u505_40
 18049  003090  EF4C  F018         
 18050                           i2u505_41:
 18051  003094                     	goto	i2l273
 18052  003094  EF14  F019         i2u505_40:
 18053  003098                     	line	187
 18054                           	
 18055                           i2l4635:
 18056  003098                     ;main.c: 187: if (HS != 0) {
 18057                           	movf	((c:_HS)),c,w
 18058  003098  5054               iorwf	((c:_HS+1)),c,w
 18059  00309A  1055               	btfsc	status,2
 18060  00309C  B4D8               	goto	i2u506_41
 18061  00309E  EF53  F018         	goto	i2u506_40
 18062  0030A2  EF55  F018         
 18063                           i2u506_41:
 18064  0030A6                     	goto	i2l273
 18065  0030A6  EF14  F019         i2u506_40:
 18066  0030AA                     	line	188
 18067                           	
 18068                           i2l4637:
 18069  0030AA                     ;main.c: 188: HS = (HS - 1) % 6;
 18070                           	movlw	low(-1)
 18071  0030AA  0EFF               	addwf	((c:_HS)),c,w
 18072  0030AC  2454               	movwf	((c:i2___awmod@dividend)),c
 18073  0030AE  6E01               	movlw	high(-1)
 18074  0030B0  0EFF               	addwfc	((c:_HS+1)),c,w
 18075  0030B2  2055               	movwf	1+((c:i2___awmod@dividend)),c
 18076  0030B4  6E02               	movlw	high(06h)
 18077  0030B6  0E00               	movwf	((c:i2___awmod@divisor+1)),c
 18078  0030B8  6E04               	movlw	low(06h)
 18079  0030BA  0E06               	movwf	((c:i2___awmod@divisor)),c
 18080  0030BC  6E03               	call	i2___awmod	;wreg free
 18081  0030BE  EC76  F01F         	movff	0+?i2___awmod,(c:_HS)
 18082  0030C2  C001  F054         	movff	1+?i2___awmod,(c:_HS+1)
 18083  0030C6  C002  F055         	goto	i2l273
 18084  0030CA  EF14  F019         	line	189
 18085                           	
 18086                           i2l260:
 18087  0030CE                     	goto	i2l273
 18088  0030CE  EF14  F019         	line	190
 18089                           	
 18090                           i2l259:
 18091  0030D2                     	goto	i2l273
 18092  0030D2  EF14  F019         	line	194
 18093                           	
 18094                           i2l258:
 18095  0030D6                     	goto	i2l273
 18096  0030D6  EF14  F019         	
 18097                           i2l254:
 18098  0030DA                     ;main.c: 189: }
 18099                           ;main.c: 190: }
 18100                           ;main.c: 194: } else if (INTCON3bits.INT2IF) {
 18101                           	goto	i2l273
 18102  0030DA  EF14  F019         	
 18103                           i2l251:
 18104  0030DE                     	btfss	((c:4080)),c,1	;volatile
 18105  0030DE  A2F0               	goto	i2u507_41
 18106  0030E0  EF74  F018         	goto	i2u507_40
 18107  0030E4  EF76  F018         i2u507_41:
 18108  0030E8                     	goto	i2l262
 18109  0030E8  EFF3  F018         i2u507_40:
 18110  0030EC                     	line	195
 18111                           	
 18112                           i2l4639:
 18113  0030EC                     ;main.c: 195: INTCON3bits.INT2IF = 0;
 18114                           	bcf	((c:4080)),c,1	;volatile
 18115  0030EC  92F0               	line	196
 18116                           	
 18117                           i2l4641:
 18118  0030EE                     ;main.c: 196: if (operationModes == 0) {
 18119                           	movf	((c:_operationModes)),c,w
 18120  0030EE  5058               iorwf	((c:_operationModes+1)),c,w
 18121  0030F0  1059               	btfss	status,2
 18122  0030F2  A4D8               	goto	i2u508_41
 18123  0030F4  EF7E  F018         	goto	i2u508_40
 18124  0030F8  EF80  F018         
 18125                           i2u508_41:
 18126  0030FC                     	goto	i2l4647
 18127  0030FC  EF9E  F018         i2u508_40:
 18128  003100                     	line	197
 18129                           	
 18130                           i2l4643:
 18131  003100                     ;main.c: 197: if (percentHeatCounter != 10) {
 18132                           		movlw	10
 18133  003100  0E0A               	xorwf	((c:_percentHeatCounter)),c,w
 18134  003102  185C               iorwf	((c:_percentHeatCounter+1)),c,w
 18135  003104  105D               	btfsc	status,2
 18136  003106  B4D8               	goto	i2u509_41
 18137  003108  EF88  F018         	goto	i2u509_40
 18138  00310C  EF8A  F018         
 18139                           i2u509_41:
 18140  003110                     	goto	i2l273
 18141  003110  EF14  F019         i2u509_40:
 18142  003114                     	line	198
 18143                           	
 18144                           i2l4645:
 18145  003114                     ;main.c: 198: percentHeatCounter = (percentHeatCounter + 1) % 11;
 18146                           	movlw	low(01h)
 18147  003114  0E01               	addwf	((c:_percentHeatCounter)),c,w
 18148  003116  245C               	movwf	((c:i2___awmod@dividend)),c
 18149  003118  6E01               	movlw	high(01h)
 18150  00311A  0E00               	addwfc	((c:_percentHeatCounter+1)),c,w
 18151  00311C  205D               	movwf	1+((c:i2___awmod@dividend)),c
 18152  00311E  6E02               	movlw	high(0Bh)
 18153  003120  0E00               	movwf	((c:i2___awmod@divisor+1)),c
 18154  003122  6E04               	movlw	low(0Bh)
 18155  003124  0E0B               	movwf	((c:i2___awmod@divisor)),c
 18156  003126  6E03               	call	i2___awmod	;wreg free
 18157  003128  EC76  F01F         	movff	0+?i2___awmod,(c:_percentHeatCounter)
 18158  00312C  C001  F05C         	movff	1+?i2___awmod,(c:_percentHeatCounter+1)
 18159  003130  C002  F05D         	goto	i2l273
 18160  003134  EF14  F019         	line	199
 18161                           	
 18162                           i2l264:
 18163  003138                     	line	200
 18164                           ;main.c: 199: }
 18165                           ;main.c: 200: } else if (operationModes == 1) {
 18166                           	goto	i2l273
 18167  003138  EF14  F019         	
 18168                           i2l263:
 18169  00313C                     	
 18170                           i2l4647:
 18171  00313C                     		decf	((c:_operationModes)),c,w
 18172  00313C  0458               iorwf	((c:_operationModes+1)),c,w
 18173  00313E  1059               	btfss	status,2
 18174  003140  A4D8               	goto	i2u510_41
 18175  003142  EFA5  F018         	goto	i2u510_40
 18176  003146  EFA7  F018         
 18177                           i2u510_41:
 18178  00314A                     	goto	i2l4653
 18179  00314A  EFC5  F018         i2u510_40:
 18180  00314E                     	line	201
 18181                           	
 18182                           i2l4649:
 18183  00314E                     ;main.c: 201: if (percentCoolCounter != 10) {
 18184                           		movlw	10
 18185  00314E  0E0A               	xorwf	((c:_percentCoolCounter)),c,w
 18186  003150  185A               iorwf	((c:_percentCoolCounter+1)),c,w
 18187  003152  105B               	btfsc	status,2
 18188  003154  B4D8               	goto	i2u511_41
 18189  003156  EFAF  F018         	goto	i2u511_40
 18190  00315A  EFB1  F018         
 18191                           i2u511_41:
 18192  00315E                     	goto	i2l273
 18193  00315E  EF14  F019         i2u511_40:
 18194  003162                     	line	202
 18195                           	
 18196                           i2l4651:
 18197  003162                     ;main.c: 202: percentCoolCounter = (percentCoolCounter + 1) % 11;
 18198                           	movlw	low(01h)
 18199  003162  0E01               	addwf	((c:_percentCoolCounter)),c,w
 18200  003164  245A               	movwf	((c:i2___awmod@dividend)),c
 18201  003166  6E01               	movlw	high(01h)
 18202  003168  0E00               	addwfc	((c:_percentCoolCounter+1)),c,w
 18203  00316A  205B               	movwf	1+((c:i2___awmod@dividend)),c
 18204  00316C  6E02               	movlw	high(0Bh)
 18205  00316E  0E00               	movwf	((c:i2___awmod@divisor+1)),c
 18206  003170  6E04               	movlw	low(0Bh)
 18207  003172  0E0B               	movwf	((c:i2___awmod@divisor)),c
 18208  003174  6E03               	call	i2___awmod	;wreg free
 18209  003176  EC76  F01F         	movff	0+?i2___awmod,(c:_percentCoolCounter)
 18210  00317A  C001  F05A         	movff	1+?i2___awmod,(c:_percentCoolCounter+1)
 18211  00317E  C002  F05B         	goto	i2l273
 18212  003182  EF14  F019         	line	203
 18213                           	
 18214                           i2l267:
 18215  003186                     	line	204
 18216                           ;main.c: 203: }
 18217                           ;main.c: 204: } else if (operationModes == 2) {
 18218                           	goto	i2l273
 18219  003186  EF14  F019         	
 18220                           i2l266:
 18221  00318A                     	
 18222                           i2l4653:
 18223  00318A                     		movlw	2
 18224  00318A  0E02               	xorwf	((c:_operationModes)),c,w
 18225  00318C  1858               iorwf	((c:_operationModes+1)),c,w
 18226  00318E  1059               	btfss	status,2
 18227  003190  A4D8               	goto	i2u512_41
 18228  003192  EFCD  F018         	goto	i2u512_40
 18229  003196  EFCF  F018         
 18230                           i2u512_41:
 18231  00319A                     	goto	i2l273
 18232  00319A  EF14  F019         i2u512_40:
 18233  00319E                     	line	205
 18234                           	
 18235                           i2l4655:
 18236  00319E                     ;main.c: 205: if (HS != 5) {
 18237                           		movlw	5
 18238  00319E  0E05               	xorwf	((c:_HS)),c,w
 18239  0031A0  1854               iorwf	((c:_HS+1)),c,w
 18240  0031A2  1055               	btfsc	status,2
 18241  0031A4  B4D8               	goto	i2u513_41
 18242  0031A6  EFD7  F018         	goto	i2u513_40
 18243  0031AA  EFD9  F018         
 18244                           i2u513_41:
 18245  0031AE                     	goto	i2l273
 18246  0031AE  EF14  F019         i2u513_40:
 18247  0031B2                     	line	206
 18248                           	
 18249                           i2l4657:
 18250  0031B2                     ;main.c: 206: HS = (HS + 1) % 6;
 18251                           	movlw	low(01h)
 18252  0031B2  0E01               	addwf	((c:_HS)),c,w
 18253  0031B4  2454               	movwf	((c:i2___awmod@dividend)),c
 18254  0031B6  6E01               	movlw	high(01h)
 18255  0031B8  0E00               	addwfc	((c:_HS+1)),c,w
 18256  0031BA  2055               	movwf	1+((c:i2___awmod@dividend)),c
 18257  0031BC  6E02               	movlw	high(06h)
 18258  0031BE  0E00               	movwf	((c:i2___awmod@divisor+1)),c
 18259  0031C0  6E04               	movlw	low(06h)
 18260  0031C2  0E06               	movwf	((c:i2___awmod@divisor)),c
 18261  0031C4  6E03               	call	i2___awmod	;wreg free
 18262  0031C6  EC76  F01F         	movff	0+?i2___awmod,(c:_HS)
 18263  0031CA  C001  F054         	movff	1+?i2___awmod,(c:_HS+1)
 18264  0031CE  C002  F055         	goto	i2l273
 18265  0031D2  EF14  F019         	line	207
 18266                           	
 18267                           i2l270:
 18268  0031D6                     	goto	i2l273
 18269  0031D6  EF14  F019         	line	208
 18270                           	
 18271                           i2l269:
 18272  0031DA                     	goto	i2l273
 18273  0031DA  EF14  F019         	line	209
 18274                           	
 18275                           i2l268:
 18276  0031DE                     	goto	i2l273
 18277  0031DE  EF14  F019         	
 18278                           i2l265:
 18279  0031E2                     ;main.c: 207: }
 18280                           ;main.c: 208: }
 18281                           ;main.c: 209: } else if (INTCONbits.T0IF) {
 18282                           	goto	i2l273
 18283  0031E2  EF14  F019         	
 18284                           i2l262:
 18285  0031E6                     	btfss	((c:4082)),c,2	;volatile
 18286  0031E6  A4F2               	goto	i2u514_41
 18287  0031E8  EFF8  F018         	goto	i2u514_40
 18288  0031EC  EFFA  F018         i2u514_41:
 18289  0031F0                     	goto	i2l273
 18290  0031F0  EF14  F019         i2u514_40:
 18291  0031F4                     	line	210
 18292                           	
 18293                           i2l4659:
 18294  0031F4                     ;main.c: 210: RPS_count = ((unsigned int) TMR1H << 8) | (TMR1L);
 18295                           	movf	((c:4047)),c,w	;volatile
 18296  0031F4  50CF               	movwf	(??_highIsr+0+0)&0ffh,c
 18297  0031F6  6E0A               	movf	((c:4046)),c,w	;volatile
 18298  0031F8  50CE               	movlb	1	; () banked
 18299  0031FA  0101               	movwf	((_RPS_count))&0ffh
 18300  0031FC  6F5B               	movff	??_highIsr+0+0,((_RPS_count+1))
 18301  0031FE  C00A  F15C         	line	212
 18302                           ;main.c: 212: TMR0H = (unsigned char) ((3036 >> 8) & 0x00FF);
 18303                           	movlw	low(0Bh)
 18304  003202  0E0B               	movwf	((c:4055)),c	;volatile
 18305  003204  6ED7               	line	213
 18306                           ;main.c: 213: TMR0L = (unsigned char) (3036 & 0x00FF);
 18307                           	movlw	low(0DCh)
 18308  003206  0EDC               	movwf	((c:4054)),c	;volatile
 18309  003208  6ED6               	line	214
 18310                           ;main.c: 214: TMR1H = 0;
 18311                           	movlw	low(0)
 18312  00320A  0E00               	movwf	((c:4047)),c	;volatile
 18313  00320C  6ECF               	line	215
 18314                           ;main.c: 215: TMR1L = 0;
 18315                           	movlw	low(0)
 18316  00320E  0E00               	movwf	((c:4046)),c	;volatile
 18317  003210  6ECE               	line	216
 18318                           	
 18319                           i2l4661:; BSR set to: 1
 18320  003212                     
 18321                           ;main.c: 216: INTCONbits.T0IF = 0;
 18322                           	bcf	((c:4082)),c,2	;volatile
 18323  003212  94F2               	goto	i2l273
 18324  003214  EF14  F019         	line	217
 18325                           	
 18326                           i2l272:; BSR set to: 1
 18327  003218                     
 18328                           	goto	i2l273
 18329  003218  EF14  F019         	line	218
 18330                           	
 18331                           i2l271:; BSR set to: 1
 18332  00321C                     
 18333                           	goto	i2l273
 18334  00321C  EF14  F019         	
 18335                           i2l261:; BSR set to: 1
 18336  003220                     
 18337                           	goto	i2l273
 18338  003220  EF14  F019         	
 18339                           i2l250:; BSR set to: 1
 18340  003224                     
 18341                           	goto	i2l273
 18342  003224  EF14  F019         	
 18343                           i2l248:; BSR set to: 1
 18344  003228                     
 18345                           	
 18346                           i2l273:
 18347  003228                     	movff	??_highIsr+19,btemp+3+0
 18348  003228  C01D  F065         	movff	??_highIsr+18,btemp+2+0
 18349  00322C  C01C  F064         	movff	??_highIsr+17,btemp+1+0
 18350  003230  C01B  F063         	movff	??_highIsr+16,btemp+0
 18351  003234  C01A  F062         	movff	??_highIsr+15,tablat+0
 18352  003238  C019  FFF5         	movff	??_highIsr+14,tblptru+0
 18353  00323C  C018  FFF8         	movff	??_highIsr+13,tblptrh+0
 18354  003240  C017  FFF7         	movff	??_highIsr+12,tblptrl+0
 18355  003244  C016  FFF6         	movff	??_highIsr+11,prodh+0
 18356  003248  C015  FFF4         	movff	??_highIsr+10,prodl+0
 18357  00324C  C014  FFF3         	movff	??_highIsr+9,fsr2h+0
 18358  003250  C013  FFDA         	movff	??_highIsr+8,fsr2l+0
 18359  003254  C012  FFD9         	movff	??_highIsr+7,fsr1h+0
 18360  003258  C011  FFE2         	movff	??_highIsr+6,fsr1l+0
 18361  00325C  C010  FFE1         	movff	??_highIsr+5,fsr0h+0
 18362  003260  C00F  FFEA         	movff	??_highIsr+4,fsr0l+0
 18363  003264  C00E  FFE9         	movff	??_highIsr+3,pclath+1
 18364  003268  C00D  FFFB         	movff	??_highIsr+2,pclath+0
 18365  00326C  C00C  FFFA         	bcf int$flags,1,c ;clear compiler interrupt flag (level 2)
 18366  003270  9262               	retfie f
 18367  003272  0011               	opt stack 0
 18368                           GLOBAL	__end_of_highIsr
 18369                           	__end_of_highIsr:
 18370  003274                     	signat	_highIsr,89
 18371                           	global	i2_reloadTimer3
 18372                           
 18373 ;; *************** function i2_reloadTimer3 *****************
 18374 ;; Defined at:
 18375 ;;		line 121 in file "main.c"
 18376 ;; Parameters:    Size  Location     Type
 18377 ;;		None
 18378 ;; Auto vars:     Size  Location     Type
 18379 ;;		None
 18380 ;; Return value:  Size  Location     Type
 18381 ;;                  1    wreg      void 
 18382 ;; Registers used:
 18383 ;;		wreg, status,2
 18384 ;; Tracked objects:
 18385 ;;		On entry : 0/0
 18386 ;;		On exit  : 0/0
 18387 ;;		Unchanged: 0/0
 18388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 18389 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18392 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18393 ;;Total ram usage:        0 bytes
 18394 ;; Hardware stack levels used:    1
 18395 ;; This function calls:
 18396 ;;		Nothing
 18397 ;; This function is called by:
 18398 ;;		_highIsr
 18399 ;; This function uses a non-reentrant model
 18400 ;;
 18401                           psect	text40,class=CODE,space=0,reloc=2,group=0
 18402                           	line	121
 18403                           global __ptext40
 18404                           __ptext40:
 18405  004880                     psect	text40
 18406                           	file	"main.c"
 18407                           	line	121
 18408                           	global	__size_ofi2_reloadTimer3
 18409                           	__size_ofi2_reloadTimer3	equ	__end_ofi2_reloadTimer3-i2_reloadTimer3
 18410  0000                     	
 18411                           i2_reloadTimer3:
 18412  004880                     ;incstack = 0
 18413                           	opt	stack 23
 18414                           	line	122
 18415                           	
 18416                           i2l4555:
 18417  004880                     ;main.c: 122: TMR3H = 0x9E;
 18418                           	movlw	low(09Eh)
 18419  004880  0E9E               	movwf	((c:4019)),c	;volatile
 18420  004882  6EB3               	line	123
 18421                           ;main.c: 123: TMR3L = 0x58;
 18422                           	movlw	low(058h)
 18423  004884  0E58               	movwf	((c:4018)),c	;volatile
 18424  004886  6EB2               	line	124
 18425                           	
 18426                           i2l4557:
 18427  004888                     ;main.c: 124: PIR2bits.TMR3IF = 0;
 18428                           	bcf	((c:4001)),c,1	;volatile
 18429  004888  92A1               	line	125
 18430                           	
 18431                           i2l235:
 18432  00488A                     	return	;funcret
 18433  00488A  0012               	opt stack 0
 18434                           GLOBAL	__end_ofi2_reloadTimer3
 18435                           	__end_ofi2_reloadTimer3:
 18436  00488C                     	signat	i2_reloadTimer3,89
 18437                           	global	i2_pwd_Timer3
 18438                           
 18439 ;; *************** function i2_pwd_Timer3 *****************
 18440 ;; Defined at:
 18441 ;;		line 220 in file "main.c"
 18442 ;; Parameters:    Size  Location     Type
 18443 ;;  limit           2    6[COMRAM] int 
 18444 ;; Auto vars:     Size  Location     Type
 18445 ;;		None
 18446 ;; Return value:  Size  Location     Type
 18447 ;;                  1    wreg      void 
 18448 ;; Registers used:
 18449 ;;		wreg, status,2, status,0, cstack
 18450 ;; Tracked objects:
 18451 ;;		On entry : 0/0
 18452 ;;		On exit  : 0/0
 18453 ;;		Unchanged: 0/0
 18454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 18455 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18457 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18458 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18459 ;;Total ram usage:        3 bytes
 18460 ;; Hardware stack levels used:    1
 18461 ;; Hardware stack levels required when called:    1
 18462 ;; This function calls:
 18463 ;;		i2___awmod
 18464 ;; This function is called by:
 18465 ;;		_highIsr
 18466 ;; This function uses a non-reentrant model
 18467 ;;
 18468                           psect	text41,class=CODE,space=0,reloc=2,group=0
 18469                           	line	220
 18470                           global __ptext41
 18471                           __ptext41:
 18472  00439A                     psect	text41
 18473                           	file	"main.c"
 18474                           	line	220
 18475                           	global	__size_ofi2_pwd_Timer3
 18476                           	__size_ofi2_pwd_Timer3	equ	__end_ofi2_pwd_Timer3-i2_pwd_Timer3
 18477  0000                     	
 18478                           i2_pwd_Timer3:
 18479  00439A                     ;incstack = 0
 18480                           	opt	stack 22
 18481                           	line	222
 18482                           	
 18483                           i2l4559:
 18484  00439A                     ;main.c: 222: timer3Counter = (timer3Counter) % 11;
 18485                           	movff	(c:_timer3Counter),(c:i2___awmod@dividend)
 18486  00439A  C056  F001         	movff	(c:_timer3Counter+1),(c:i2___awmod@dividend+1)
 18487  00439E  C057  F002         	movlw	high(0Bh)
 18488  0043A2  0E00               	movwf	((c:i2___awmod@divisor+1)),c
 18489  0043A4  6E04               	movlw	low(0Bh)
 18490  0043A6  0E0B               	movwf	((c:i2___awmod@divisor)),c
 18491  0043A8  6E03               	call	i2___awmod	;wreg free
 18492  0043AA  EC76  F01F         	movff	0+?i2___awmod,(c:_timer3Counter)
 18493  0043AE  C001  F056         	movff	1+?i2___awmod,(c:_timer3Counter+1)
 18494  0043B2  C002  F057         	line	223
 18495                           	
 18496                           i2l4561:
 18497  0043B6                     ;main.c: 223: if ((timer3Counter <= limit) && (limit != 0)) {
 18498                           		movf	((c:_timer3Counter)),c,w
 18499  0043B6  5056               	subwf	((c:i2pwd_Timer3@limit)),c,w
 18500  0043B8  5C07               	movf	((c:i2pwd_Timer3@limit+1)),c,w
 18501  0043BA  5008               	xorlw	80h
 18502  0043BC  0A80               	movwf	(??i2_pwd_Timer3+0+0)&0ffh,c
 18503  0043BE  6E09               	movf	((c:_timer3Counter+1)),c,w
 18504  0043C0  5057               	xorlw	80h
 18505  0043C2  0A80               	subwfb	(??i2_pwd_Timer3+0+0)&0ffh,c,w
 18506  0043C4  5809               	btfss	status,0
 18507  0043C6  A0D8               	goto	i2u492_41
 18508  0043C8  EFE8  F021         	goto	i2u492_40
 18509  0043CC  EFEA  F021         
 18510                           i2u492_41:
 18511  0043D0                     	goto	i2l276
 18512  0043D0  EFFB  F021         i2u492_40:
 18513  0043D4                     	
 18514                           i2l4563:
 18515  0043D4                     	movf	((c:i2pwd_Timer3@limit)),c,w
 18516  0043D4  5007               iorwf	((c:i2pwd_Timer3@limit+1)),c,w
 18517  0043D6  1008               	btfsc	status,2
 18518  0043D8  B4D8               	goto	i2u493_41
 18519  0043DA  EFF1  F021         	goto	i2u493_40
 18520  0043DE  EFF3  F021         
 18521                           i2u493_41:
 18522  0043E2                     	goto	i2l276
 18523  0043E2  EFFB  F021         i2u493_40:
 18524  0043E6                     	line	224
 18525                           	
 18526                           i2l4565:
 18527  0043E6                     ;main.c: 224: PORTCbits.RC5 = 1;
 18528                           	bsf	((c:3970)),c,5	;volatile
 18529  0043E6  8A82               	line	225
 18530                           	
 18531                           i2l4567:
 18532  0043E8                     ;main.c: 225: heaterON = 1;
 18533                           	movlw	low(01h)
 18534  0043E8  0E01               	movlb	1	; () banked
 18535  0043EA  0101               	movwf	((_heaterON))&0ffh
 18536  0043EC  6F5E               	line	226
 18537                           	
 18538                           i2l4569:; BSR set to: 1
 18539  0043EE                     
 18540                           ;main.c: 226: timer3Counter++;
 18541                           	infsnz	((c:_timer3Counter)),c
 18542  0043EE  4A56               	incf	((c:_timer3Counter+1)),c
 18543  0043F0  2A57               	line	228
 18544                           ;main.c: 228: } else {
 18545                           	goto	i2l4573
 18546  0043F2  EF00  F022         	
 18547                           i2l276:
 18548  0043F6                     	line	229
 18549                           ;main.c: 229: PORTCbits.RC5 = 0;
 18550                           	bcf	((c:3970)),c,5	;volatile
 18551  0043F6  9A82               	line	230
 18552                           	
 18553                           i2l4571:
 18554  0043F8                     ;main.c: 230: timer3Counter++;
 18555                           	infsnz	((c:_timer3Counter)),c
 18556  0043F8  4A56               	incf	((c:_timer3Counter+1)),c
 18557  0043FA  2A57               	goto	i2l4573
 18558  0043FC  EF00  F022         	line	231
 18559                           	
 18560                           i2l277:
 18561  004400                     	line	232
 18562                           	
 18563                           i2l4573:
 18564  004400                     ;main.c: 231: }
 18565                           ;main.c: 232: if (limit == 0) {
 18566                           	movf	((c:i2pwd_Timer3@limit)),c,w
 18567  004400  5007               iorwf	((c:i2pwd_Timer3@limit+1)),c,w
 18568  004402  1008               	btfss	status,2
 18569  004404  A4D8               	goto	i2u494_41
 18570  004406  EF07  F022         	goto	i2u494_40
 18571  00440A  EF09  F022         
 18572                           i2u494_41:
 18573  00440E                     	goto	i2l279
 18574  00440E  EF0E  F022         i2u494_40:
 18575  004412                     	line	233
 18576                           	
 18577                           i2l4575:
 18578  004412                     ;main.c: 233: heaterON = 0;
 18579                           	movlw	low(0)
 18580  004412  0E00               	movlb	1	; () banked
 18581  004414  0101               	movwf	((_heaterON))&0ffh
 18582  004416  6F5E               	goto	i2l279
 18583  004418  EF0E  F022         	line	234
 18584                           	
 18585                           i2l278:; BSR set to: 1
 18586  00441C                     
 18587                           	line	236
 18588                           	
 18589                           i2l279:
 18590  00441C                     	return	;funcret
 18591  00441C  0012               	opt stack 0
 18592                           GLOBAL	__end_ofi2_pwd_Timer3
 18593                           	__end_ofi2_pwd_Timer3:
 18594  00441E                     	signat	i2_pwd_Timer3,89
 18595                           	global	i2___awmod
 18596                           
 18597 ;; *************** function i2___awmod *****************
 18598 ;; Defined at:
 18599 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 18600 ;; Parameters:    Size  Location     Type
 18601 ;;  dividend        2    0[COMRAM] int 
 18602 ;;  divisor         2    2[COMRAM] int 
 18603 ;; Auto vars:     Size  Location     Type
 18604 ;;  __awmod         1    5[COMRAM] unsigned char 
 18605 ;;  __awmod         1    4[COMRAM] unsigned char 
 18606 ;; Return value:  Size  Location     Type
 18607 ;;                  2    0[COMRAM] int 
 18608 ;; Registers used:
 18609 ;;		wreg, status,2, status,0
 18610 ;; Tracked objects:
 18611 ;;		On entry : 0/0
 18612 ;;		On exit  : 0/0
 18613 ;;		Unchanged: 0/0
 18614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
       1  BANK12  BANK13  BANK14  BANK15
 18615 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18616 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18618 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
       0       0       0       0       0
 18619 ;;Total ram usage:        6 bytes
 18620 ;; Hardware stack levels used:    1
 18621 ;; This function calls:
 18622 ;;		Nothing
 18623 ;; This function is called by:
 18624 ;;		_highIsr
 18625 ;;		i2_pwd_Timer3
 18626 ;; This function uses a non-reentrant model
 18627 ;;
 18628                           psect	text42,class=CODE,space=0,reloc=2,group=0
 18629                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 18630                           	line	8
 18631                           global __ptext42
 18632                           __ptext42:
 18633  003EEC                     psect	text42
 18634                           	file	"C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\awmod.c"
 18635                           	line	8
 18636                           	global	__size_ofi2___awmod
 18637                           	__size_ofi2___awmod	equ	__end_ofi2___awmod-i2___awmod
 18638  0000                     	
 18639                           i2___awmod:
 18640  003EEC                     ;incstack = 0
 18641                           	opt	stack 22
 18642                           	line	13
 18643                           	
 18644                           i2l4043:
 18645  003EEC                     	movlw	low(0)
 18646  003EEC  0E00               	movwf	((c:i2___awmod@sign)),c
 18647  003EEE  6E06               	line	14
 18648                           	
 18649                           i2l4045:
 18650  003EF0                     	btfsc	((c:i2___awmod@dividend+1)),c,7
 18651  003EF0  BE02               	goto	i2u421_40
 18652  003EF2  EF7F  F01F         	goto	i2u421_41
 18653  003EF6  EF7D  F01F         
 18654                           i2u421_41:
 18655  003EFA                     	goto	i2l4051
 18656  003EFA  EF87  F01F         i2u421_40:
 18657  003EFE                     	line	15
 18658                           	
 18659                           i2l4047:
 18660  003EFE                     	negf	((c:i2___awmod@dividend)),c
 18661  003EFE  6C01               	comf	((c:i2___awmod@dividend+1)),c
 18662  003F00  1E02               	btfsc	status,0
 18663  003F02  B0D8               	incf	((c:i2___awmod@dividend+1)),c
 18664  003F04  2A02               	line	16
 18665                           	
 18666                           i2l4049:
 18667  003F06                     	movlw	low(01h)
 18668  003F06  0E01               	movwf	((c:i2___awmod@sign)),c
 18669  003F08  6E06               	goto	i2l4051
 18670  003F0A  EF87  F01F         	line	17
 18671                           	
 18672                           i2l647:
 18673  003F0E                     	line	18
 18674                           	
 18675                           i2l4051:
 18676  003F0E                     	btfsc	((c:i2___awmod@divisor+1)),c,7
 18677  003F0E  BE04               	goto	i2u422_40
 18678  003F10  EF8E  F01F         	goto	i2u422_41
 18679  003F14  EF8C  F01F         
 18680                           i2u422_41:
 18681  003F18                     	goto	i2l4055
 18682  003F18  EF94  F01F         i2u422_40:
 18683  003F1C                     	line	19
 18684                           	
 18685                           i2l4053:
 18686  003F1C                     	negf	((c:i2___awmod@divisor)),c
 18687  003F1C  6C03               	comf	((c:i2___awmod@divisor+1)),c
 18688  003F1E  1E04               	btfsc	status,0
 18689  003F20  B0D8               	incf	((c:i2___awmod@divisor+1)),c
 18690  003F22  2A04               	goto	i2l4055
 18691  003F24  EF94  F01F         	
 18692                           i2l648:
 18693  003F28                     	line	20
 18694                           	
 18695                           i2l4055:
 18696  003F28                     	movf	((c:i2___awmod@divisor)),c,w
 18697  003F28  5003               iorwf	((c:i2___awmod@divisor+1)),c,w
 18698  003F2A  1004               	btfsc	status,2
 18699  003F2C  B4D8               	goto	i2u423_41
 18700  003F2E  EF9B  F01F         	goto	i2u423_40
 18701  003F32  EF9D  F01F         
 18702                           i2u423_41:
 18703  003F36                     	goto	i2l4071
 18704  003F36  EFCD  F01F         i2u423_40:
 18705  003F3A                     	line	21
 18706                           	
 18707                           i2l4057:
 18708  003F3A                     	movlw	low(01h)
 18709  003F3A  0E01               	movwf	((c:i2___awmod@counter)),c
 18710  003F3C  6E05               	line	22
 18711                           	goto	i2l4061
 18712  003F3E  EFA7  F01F         	
 18713                           i2l651:
 18714  003F42                     	line	23
 18715                           	
 18716                           i2l4059:
 18717  003F42                     	bcf	status,0
 18718  003F42  90D8               	rlcf	((c:i2___awmod@divisor)),c
 18719  003F44  3603               	rlcf	((c:i2___awmod@divisor+1)),c
 18720  003F46  3604               	line	24
 18721                           	incf	((c:i2___awmod@counter)),c
 18722  003F48  2A05               	goto	i2l4061
 18723  003F4A  EFA7  F01F         	line	25
 18724                           	
 18725                           i2l650:
 18726  003F4E                     	line	22
 18727                           	
 18728                           i2l4061:
 18729  003F4E                     	
 18730                           	btfss	((c:i2___awmod@divisor+1)),c,(15)&7
 18731  003F4E  AE04               	goto	i2u424_41
 18732  003F50  EFAC  F01F         	goto	i2u424_40
 18733  003F54  EFAE  F01F         i2u424_41:
 18734  003F58                     	goto	i2l4059
 18735  003F58  EFA1  F01F         i2u424_40:
 18736  003F5C                     	goto	i2l4063
 18737  003F5C  EFB2  F01F         	
 18738                           i2l652:
 18739  003F60                     	goto	i2l4063
 18740  003F60  EFB2  F01F         	line	26
 18741                           	
 18742                           i2l653:
 18743  003F64                     	line	27
 18744                           	
 18745                           i2l4063:
 18746  003F64                     		movf	((c:i2___awmod@divisor)),c,w
 18747  003F64  5003               	subwf	((c:i2___awmod@dividend)),c,w
 18748  003F66  5C01               	movf	((c:i2___awmod@divisor+1)),c,w
 18749  003F68  5004               	subwfb	((c:i2___awmod@dividend+1)),c,w
 18750  003F6A  5802               	btfss	status,0
 18751  003F6C  A0D8               	goto	i2u425_41
 18752  003F6E  EFBB  F01F         	goto	i2u425_40
 18753  003F72  EFBD  F01F         
 18754                           i2u425_41:
 18755  003F76                     	goto	i2l4067
 18756  003F76  EFC3  F01F         i2u425_40:
 18757  003F7A                     	line	28
 18758                           	
 18759                           i2l4065:
 18760  003F7A                     	movf	((c:i2___awmod@divisor)),c,w
 18761  003F7A  5003               	subwf	((c:i2___awmod@dividend)),c
 18762  003F7C  5E01               	movf	((c:i2___awmod@divisor+1)),c,w
 18763  003F7E  5004               	subwfb	((c:i2___awmod@dividend+1)),c
 18764  003F80  5A02               
 18765                           	goto	i2l4067
 18766  003F82  EFC3  F01F         	
 18767                           i2l654:
 18768  003F86                     	line	29
 18769                           	
 18770                           i2l4067:
 18771  003F86                     	bcf	status,0
 18772  003F86  90D8               	rrcf	((c:i2___awmod@divisor+1)),c
 18773  003F88  3204               	rrcf	((c:i2___awmod@divisor)),c
 18774  003F8A  3203               	line	30
 18775                           	
 18776                           i2l4069:
 18777  003F8C                     	decfsz	((c:i2___awmod@counter)),c
 18778  003F8C  2E05               	
 18779                           	goto	i2l4063
 18780  003F8E  EFB2  F01F         	goto	i2l4071
 18781  003F92  EFCD  F01F         	
 18782                           i2l655:
 18783  003F96                     	goto	i2l4071
 18784  003F96  EFCD  F01F         	line	31
 18785                           	
 18786                           i2l649:
 18787  003F9A                     	line	32
 18788                           	
 18789                           i2l4071:
 18790  003F9A                     	movf	((c:i2___awmod@sign)),c,w
 18791  003F9A  5006               	btfsc	status,2
 18792  003F9C  B4D8               	goto	i2u426_41
 18793  003F9E  EFD3  F01F         	goto	i2u426_40
 18794  003FA2  EFD5  F01F         i2u426_41:
 18795  003FA6                     	goto	i2l4075
 18796  003FA6  EFDB  F01F         i2u426_40:
 18797  003FAA                     	line	33
 18798                           	
 18799                           i2l4073:
 18800  003FAA                     	negf	((c:i2___awmod@dividend)),c
 18801  003FAA  6C01               	comf	((c:i2___awmod@dividend+1)),c
 18802  003FAC  1E02               	btfsc	status,0
 18803  003FAE  B0D8               	incf	((c:i2___awmod@dividend+1)),c
 18804  003FB0  2A02               	goto	i2l4075
 18805  003FB2  EFDB  F01F         	
 18806                           i2l656:
 18807  003FB6                     	line	34
 18808                           	
 18809                           i2l4075:
 18810  003FB6                     	movff	(c:i2___awmod@dividend),(c:?i2___awmod)
 18811  003FB6  C001  F001         	movff	(c:i2___awmod@dividend+1),(c:?i2___awmod+1)
 18812  003FBA  C002  F002         	goto	i2l657
 18813  003FBE  EFE1  F01F         	
 18814                           i2l4077:
 18815  003FC2                     	line	35
 18816                           	
 18817                           i2l657:
 18818  003FC2                     	return	;funcret
 18819  003FC2  0012               	opt stack 0
 18820                           GLOBAL	__end_ofi2___awmod
 18821                           	__end_ofi2___awmod:
 18822  003FC4                     	signat	i2___awmod,90
 18823                           psect	mediumconst
 18824                           	db 0	; dummy byte at the end
 18825  00FFFE  00                 	global	__mediumconst
 18826                           	GLOBAL	__activetblptr
 18827                           __activetblptr	EQU	2
 18828  0000                     	psect	intsave_regs,class=BIGRAM,space=1,noexec
 18829                           	PSECT	rparam,class=COMRAM,space=1,noexec
 18830                           	GLOBAL	__Lrparam
 18831                           	FNCONF	rparam,??,?
 18832                           	GLOBAL	___rparam_used
 18833                           	___rparam_used EQU 1
 18834  0000                     	GLOBAL	___param_bank
 18835                           	___param_bank EQU 0
 18836  0000                     GLOBAL	__Lparam, __Hparam
 18837                           GLOBAL	__Lrparam, __Hrparam
 18838                           __Lparam	EQU	__Lrparam
 18839  0000                     __Hparam	EQU	__Hrparam
 18840  0000                            psect   temp,common,ovrld,class=COMRAM,space=1
 18841                           	global	btemp
 18842                           btemp:
 18843  000062                     	ds	1
 18844  000062                     	global	int$flags
 18845                           	int$flags	set btemp
 18846  0000                     	global	wtemp6
 18847                           	wtemp6 set btemp+1
 18848  0000                     	end


Data Sizes:
    Strings     147
    Constant    144
    Data        5
    BSS         25
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     83      97
    BANK0           128     73      73
    BANK1           256     79      95
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_14(CODE[12]), STR_13(CODE[11]), STR_12(CODE[7]), STR_11(CODE[11]), 
		 -> STR_10(CODE[12]), STR_9(CODE[11]), STR_8(CODE[8]), STR_7(CODE[16]), 
		 -> STR_6(CODE[7]), STR_5(CODE[16]), STR_4(CODE[7]), STR_3(CODE[13]), 
		 -> STR_2(CODE[16]), STR_1(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 32
		 -> main@Buffer(BANK1[32]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    lcd_puts@s	PTR unsigned char  size(2) Largest target is 32
		 -> main@Buffer(BANK1[32]), 


Critical Paths under _main in COMRAM

    _main->___fltol
    _sprintf->___fltol
    _scale->___flmul
    _fround->___flmul
    ___awdiv->___awmod
    ___awdiv->___wmul
    ___llmod->___lldiv
    ___flneg->___xxtofl
    _set_pwm1_percent->___fltol
    _set_pwm1_raw->___awdiv
    ___flmul->___awdiv
    ___fladd->_fround
    _read_adc_voltage->___fldiv
    ___xxtofl->___wmul
    ___fldiv->___flmul
    _pwd_Timer3->___awmod
    _lcd_puts->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_init->_lcd_send_byte
    _lcd_send_byte->_lcd_send_nibble
    _lcd_send_nibble->_delay_cycles

Critical Paths under _highIsr in COMRAM

    _highIsr->i2_pwd_Timer3
    i2_pwd_Timer3->i2___awmod

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->___flge
    ___flsub->___fladd
    ___flge->___fladd
    _set_pwm1_percent->___fltol
    ___fltol->___fladd
    _read_adc_voltage->___fldiv

Critical Paths under _highIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _highIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _highIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _highIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _highIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _highIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _highIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _highIsr in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _highIsr in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _highIsr in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _highIsr in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _highIsr in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _highIsr in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _highIsr in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _highIsr in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _highIsr in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                81    81      0  114817
                                             71 BANK0      2     2      0
                                              0 BANK1     79    79      0
                            ___awdiv
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___fltol
                             ___wmul
                           ___xxtofl
                       _initTimers01
                    _init_adc_no_lib
                          _init_pwm1
                     _initialization
                         _lcd_gotoxy
                           _lcd_init
                           _lcd_putc
                           _lcd_puts
                         _pwd_Timer3
                   _read_adc_voltage
                       _reloadTimer3
                   _set_pwm1_percent
                       _set_pwm1_raw
                         _setupPorts
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             45    37      8   52852
                                             32 BANK0     39    31      8
                            ___awdiv
                            ___fladd
                            ___fldiv (ARG)
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                                9     5      4    9867
                                             68 COMRAM     9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                             29 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              13     9      4    9669
                                             68 COMRAM    13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4    2124
                                             35 COMRAM     8     4      4
                            ___awmod (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         17     9      8     455
                                             29 COMRAM    17     9      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          14     6      8     455
                                             29 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___llmod                                              9     1      8     767
                                             42 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     618
                                             29 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    5807
                                             20 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     653
                                             49 COMRAM     4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8    1550
                                             20 BANK0     12     4      8
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _setupPorts                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _set_pwm1_percent                                    10     6      4   16095
                                             28 BANK0     10     6      4
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl (ARG)
                       _set_pwm1_raw
 ---------------------------------------------------------------------------------
 (1) _set_pwm1_raw                                         4     2      2     424
                                             43 COMRAM     4     2      2
                            ___awdiv (ARG)
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4    1327
                                             81 COMRAM     2     2      0
                                             20 BANK0      8     4      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flneg (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    4784
                                             43 COMRAM    25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    5422
                                              0 BANK0     20    12      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (1) _reloadTimer3                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_adc_voltage                                    11     7      4    5796
                                             13 BANK0     11     7      4
                            ___fldiv
                             ___wmul
                           ___xxtofl
                _read_adc_raw_no_lib
 ---------------------------------------------------------------------------------
 (2) _read_adc_raw_no_lib                                  7     5      2      45
                                             29 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     930
                                             35 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1527
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fldiv                                             25    17      8    3195
                                             68 COMRAM    12     4      8
                                              0 BANK0     13    13      0
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _pwd_Timer3                                           3     1      2    3088
                                             35 COMRAM     3     1      2
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4    2516
                                             29 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _lcd_puts                                             2     0      2    5034
                                             43 COMRAM     2     0      2
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (2) _lcd_putc                                             1     1      0    3925
                                             42 COMRAM     1     1      0
                           _delay_ms
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (3) _lcd_gotoxy                                           3     2      1    2447
                                             39 COMRAM     3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0    1616
                                             39 COMRAM     1     1      0
                           _delay_ms
                      _lcd_send_byte
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (3) _lcd_send_byte                                        2     1      1    1084
                                             37 COMRAM     2     1      1
                       _delay_cycles
                           _delay_ms
                    _lcd_send_nibble
 ---------------------------------------------------------------------------------
 (4) _lcd_send_nibble                                      2     2      0      68
                                             35 COMRAM     2     2      0
                       _delay_cycles
 ---------------------------------------------------------------------------------
 (5) _delay_cycles                                         6     6      0      46
                                             29 COMRAM     6     6      0
 ---------------------------------------------------------------------------------
 (4) _delay_ms                                             4     2      2     350
                                             29 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _initialization                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_pwm1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _init_adc_no_lib                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initTimers01                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _highIsr                                             20    20      0    1516
                                              9 COMRAM    20    20      0
                          i2___awmod
                       i2_pwd_Timer3
                     i2_reloadTimer3
 ---------------------------------------------------------------------------------
 (8) i2_reloadTimer3                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (8) i2_pwd_Timer3                                         3     1      2     804
                                              6 COMRAM     3     1      2
                          i2___awmod
 ---------------------------------------------------------------------------------
 (9) i2___awmod                                            6     2      4     712
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
     ___awmod (ARG)
     ___wmul (ARG)
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
   ___fldiv
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flge
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___flmul
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___awmod (ARG)
   ___flneg
     ___xxtofl (ARG)
       ___wmul (ARG)
   ___fltol
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
     ___fldiv (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
   ___wmul
   ___xxtofl
     ___wmul (ARG)
   _initTimers01
   _init_adc_no_lib
   _init_pwm1
   _initialization
   _lcd_gotoxy
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_init
     _delay_ms
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
     _lcd_send_nibble
       _delay_cycles
   _lcd_putc
     _delay_ms
     _lcd_gotoxy
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
     _lcd_send_byte
       _delay_cycles
       _delay_ms
       _lcd_send_nibble
         _delay_cycles
   _lcd_puts
     _lcd_putc
       _delay_ms
       _lcd_gotoxy
         _lcd_send_byte
           _delay_cycles
           _delay_ms
           _lcd_send_nibble
             _delay_cycles
       _lcd_send_byte
         _delay_cycles
         _delay_ms
         _lcd_send_nibble
           _delay_cycles
   _pwd_Timer3
     ___awmod
   _read_adc_voltage
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___wmul
     ___xxtofl
       ___wmul (ARG)
     _read_adc_raw_no_lib
   _reloadTimer3
   _set_pwm1_percent
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
     ___fldiv
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
     ___fltol
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
     _set_pwm1_raw (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___wmul (ARG)
   _set_pwm1_raw
     ___awdiv (ARG)
       ___awmod (ARG)
       ___wmul (ARG)
     ___wmul (ARG)
   _setupPorts
   _sprintf
     ___awdiv
       ___awmod (ARG)
       ___wmul (ARG)
     ___fladd
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
       _fround (ARG)
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
     ___fldiv (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flge (ARG)
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flmul (ARG)
       ___awdiv (ARG)
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___flsub (ARG)
       ___fladd
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___fltol (ARG)
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
             ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
         _fround (ARG)
           ___awdiv
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
               ___wmul (ARG)
             ___awmod (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___flmul (ARG)
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
             ___wmul (ARG)
           ___awmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
       ___lldiv (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
       ___wmul (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
         ___wmul (ARG)
       ___awmod
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
           ___wmul (ARG)
         ___awmod (ARG)

 _highIsr (ROOT)
   i2___awmod
   i2_pwd_Timer3
     i2___awmod
   i2_reloadTimer3

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      37        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     4F      5F       7       37.1%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     49      49       5       57.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     53      61       1       77.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     109      34        0.0%
DATA                 0      0     109       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Jun 23 22:54:37 2024

           ?_read_adc_voltage 008D                i2_reloadTimer3 4880                  ___fldiv@aexp 008C  
                ___fldiv@bexp 008B                  ___fldiv@sign 0080            ??_read_adc_voltage 0051  
                          l13 487E                            l22 4314                            l16 45B8  
                          l17 45B8                            l18 45CA                            l42 47C4  
                          l19 45EC                            l45 4082                            l46 408E  
                          l39 4866                            l71 4652                            l72 4648  
                          l80 458C                            l65 4748                            l73 467A  
                          l81 459C                            l66 473A                            l74 467A  
                          l82 459C                            l67 4762                            l68 4762  
                          l92 44B6                            l77 483C                            l85 4174  
                          l93 4492                            l86 419C                            l94 44DC  
                          l87 41BE                            l95 449A                            l88 41EE  
                          l96 44A2                            l89 41EE                            l97 44AA  
                          l98 44EC                            _HS 0054                ?_lcd_send_byte 0026  
                ___awdiv@sign 0029                            _ot 0153                            _sp 0157  
         ___wmul@multiplicand 0020                   __CFG_BORV$3 000000                 main@HeatError 0140  
                __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000                  __CFG_CP2$OFF 000000  
                __CFG_CP3$OFF 000000                   __CFG_OSC$XT 000000                   __CFG_LVP$ON 000000  
                 __CFG_WDT$ON 000000                           l101 446C                           l102 4424  
                         l110 4710                           l103 448A                           l111 46FA  
                         l104 443E                           l112 472C                           l105 444C  
                         l113 472C                           l106 445A                           l107 448A  
                         l300 1488                           l301 14F4                           l310 17AE  
                         l302 14C0                           l311 17DA                           l303 14F0  
                         l232 47F0                           l400 04DA                           l320 1A30  
                         l312 17D6                           l304 15BA                           l241 4856  
                         l401 051A                           l305 1C06                           l321 1A2C  
                         l313 1880                           l410 069A                           l402 0526  
                         l322 1B6E                           l306 18DA                           l314 187C  
                         l235 4872                           l411 06F0                           l315 1C02  
                         l323 1AEC                           l307 17EE                           l420 079C  
                         l412 0718                           l404 0574                           l324 1B58  
                         l316 1A44                           l308 1786                           l421 07D4  
                         l413 0798                           l325 1B24                           l317 19DC  
                         l309 17DE                           l238 4796                           l350 34D8  
                         l430 0924                           l422 0806                           l414 0758  
                         l406 05AC                           l326 1B54                           l318 1A34  
                         l351 34D4                           l431 0954                           l423 08A6  
                         l415 0776                           l407 063E                           l327 1C44  
                         l319 1A04                           l360 2642                           l440 0B82  
                         l432 0A9C                           l424 080E                           l416 075C  
                         l408 065C                           l328 1C48                           l361 263E  
                         l441 0BD8                           l433 09B6                           l425 08BC  
                         l417 0794                           l409 06B2                           l329 1C48  
                         l354 242C                           l450 0CE4                           l442 0BC0  
                         l434 0AB4                           l426 08DA                           l418 080A  
                         l370 008A                           l290 11A2                           l355 2334  
                         l451 0CF0                           l443 0C00                           l435 0AD2  
                         l427 08C0                           l419 07B6                           l371 0086  
                         l291 1C0A                           l276 4372                           l348 33E8  
                         l356 266E                           l364 0EA8                           l460 0DBC  
                         l452 0D7A                           l444 0C32                           l436 0AB8  
                         l428 08F8                           l380 01CC                           l372 008E  
                         l292 11A6                           l284 0F08                           l277 437C  
                         l349 3528                           l357 23FC                           l461 0DF2  
                         l453 0D30                           l445 0C2E                           l437 0AE8  
                         l429 091C                           l381 01EA                           l373 012A  
                         l365 0020                           l293 1C40                           l285 0F28  
                         l278 4398                           l358 23F8                           l462 0E86  
                         l454 0D76                           l446 0C6C                           l438 0B34  
                         l390 0250                           l382 01D0                           l374 00BA  
                         l366 0046                           l294 1240                           l286 0F9A  
                         l279 4398                           l359 257A                           l383 0ED2  
                         l463 0DFA                           l455 0D46                           l447 0CB4  
                         l439 0B64                           l391 02AC                           l375 0126  
                         l367 005A                           l295 1262                           l287 116C  
                         l720 3CC2                           l640 3DAC                           l464 0EA4  
                         l456 0D72                           l448 0CA4                           l392 0400  
                         l384 01D4                           l376 01BC                           l368 006E  
                         l296 126A                           l288 1172                           l721 3CD6  
                         l713 3C04                           l641 3DD6                           l465 0ECE  
                         l457 0DF6                           l449 0CB0                           l393 0330  
                         l385 0224                           l377 0196                           l369 005E  
                         l297 132E                           l289 1198                           l650 3E76  
                         l722 3CC6                           l714 3D26                           l642 3DE6  
                         l634 3D4A                           l466 0EE2                           l458 0DC0  
                         l394 03BC                           l386 01DA                           l378 015A  
                         l298 164E                           l651 3E6A                           l723 3CEA  
                         l715 3C9A                           l643 3E06                           l635 3D68  
                         l459 0D90                           l395 03FC                           l387 01DE  
                         l379 01B8                           l299 150A                           l652 3E88  
                         l724 3D12                           l716 3C7E                           l644 3E12  
                         l636 3DEA                           l396 03F8                           l388 01E2  
                         l653 3E8C                           l469 481A                           l717 3C82  
                         l637 3D96                           l389 0AEC                           l397 045A  
                         l654 3EAE                           l718 3C96                           l670 399E  
                         l638 3D8A                           l830 46EA                           l398 05C2  
                         l655 3EBE                           l647 3E36                           l719 3CEE  
                         l671 39B2                           l639 3DA8                           l831 46F4  
                         l656 3EDE                           l648 3E50                           l680 3A58  
                         l672 3A08                           l657 3EEA                           l649 3EC2  
                         l673 39EC                           l690 46A6                           l674 39F0  
                         l666 38EC                           l770 374C                           l683 3AAE  
                         l691 46BA                           l675 3A04                           l667 3A68  
                         l771 38BC                           l940 1CC0                           l684 3AF0  
                         l860 4122                           l676 3A58                           l668 391A  
                         l780 38AC                           l772 3788                           l941 1CDE  
                         l685 3B3C                           l861 4136                           l677 3A30  
                         l669 3960                           l781 3884                           l773 37C2  
                         l950 1E68                           l942 1CF8                           l686 3B84  
                         l862 4146                           l870 4266                           l678 3A44  
                         l782 3898                           l774 37F4                           l951 1E26  
                         l943 1D36                           l687 3BD2                           l855 4136  
                         l871 427A                           l679 3A34                           l783 3888  
                         l775 3806                           l960 1EEE                           l952 1E40  
                         l944 1D2C                           l856 40CE                           l872 428A  
                         l784 38AC                           l776 385C                           l961 1EF6  
                         l953 1E48                           l945 1D4A                           l937 1C6E  
                         l857 40BE                           l865 427A                           l777 3840  
                         l970 2030                           l962 1F0A                           l954 1E5C  
                         l946 1DB2                           l938 1CAC                           l858 40E0  
                         l866 421E                           l778 3844                           l963 207E  
                         l971 2046                           l955 1E7E                           l947 1D72  
                         l939 1CA2                           l859 40E4                           l867 420E  
                         l779 3858                           l980 2136                           l972 204E  
                         l964 1FC0                           l956 1F1E                           l948 1E22  
                         l868 4230                           l981 2132                           l973 2064  
                         l965 1FBC                           l957 1EB4                           l949 1E7E  
                         l869 4234                           l982 218A                           l974 207A  
                         l966 1FD0                           l958 21D2                           l975 20C8  
                         l967 200E                           l959 1F1A                           l991 4638  
                         l984 215E                           l976 20AE                           l968 2068  
                         l985 2186                           l977 20C8                           l969 2012  
                         l994 2B00                           l986 219E                           l978 20C4  
                         l995 2B3E                           l987 21A4                           l979 213A  
                         l996 2B34                           l988 21BE                           l997 2B52  
                         l998 2B72                           l999 2BB0                  __CFG_CPB$OFF 000000  
                         _RC2 007C12                           _PR2 000FCB                  __CFG_CPD$OFF 000000  
                         _lcd 000F83                 main@CoolError 013E                  ___awmod@sign 0023  
                         prod 000FF3     read_adc_voltage@raw_value 0096                           wreg 000FE8  
                ___flmul@aexp 003D                  ___flmul@bexp 003E                main@HeatError1 0142  
                ___flmul@sign 0038                  ___flmul@temp 0043                  ___flmul@prod 003F  
                 main@channel 014E                   lcd_gotoxy@x 0029                   lcd_gotoxy@y 0028  
                 main@analogs 0130          __end_ofi2_pwd_Timer3 441E                  ___fltol@exp1 0053  
                        l1000 2BA6                          l1001 2BC4                          l1010 2D2E  
                        l1002 2C0A                          l1011 2D4A                          l1003 2EFA  
                        l1020 2E50                          l1012 2D7C                          l1004 2C42  
                        l1021 2E4C                          l1013 2D4E                          l1005 2D1A  
                        l1022 2E84                          l1014 2D68                          l1006 2CA2  
                        l1030 26C4                          l1023 2EBE                          l1015 2D8E  
                        l1007 2CE4                          l1031 26DE                          l1024 2ED6  
                        l1016 2DF0                          l1008 2CD6                          l1040 295A  
                        l1032 26FE                          l1025 2EDC                          l1017 2DD6  
                        l1009 2D18                          l1041 292C                          l1033 2738  
                        l1018 2DF0                          l1050 2A5C                          l1042 2946  
                        l1034 2732                          l1019 2DEC                          l1051 2AC4  
                        l1043 296C                          l1035 2748                          l1060 370E  
                        l1052 2A8E                          l1044 29CE                          l1036 2784  
                        l1028 2690                          l1061 35DA                          l1053 2AC0  
                        l1045 29B4                          l1029 26CA                          l1070 3690  
                        l1062 35CA                          l1054 2AB6                          l1046 29CE  
                        l1038 276C                          l1071 3690                          l1063 360C  
                        l1047 29CA                          l1039 2ADC                          l1072 36AE  
                        l1064 3628                          l1048 2A2E                          l1073 36FA  
                        l1065 3610                          l1057 3580                          l1049 2A2A  
                        l1066 365A                          l1058 3594                          l1067 366E  
                        l1059 35C2                          l1068 365E                          l3101 449A  
                        l3103 44A2                          l3111 44DC                          l3113 44E0  
                        l3105 44AA                          l4001 352C                          l3107 44B2  
                        l4011 35BE                          l4003 353C                          l3061 4652  
                        l3109 44B6                          l4021 3612                          l4013 35C2  
                        l4005 354A                          l3053 3BC8                          l3063 472E  
                        l3071 482E                          l4111 414C                          l4031 369E  
                        l4023 361E                          l4015 35CA                          l4007 3594  
                        l3055 3BCE                          l3065 473A                          l3057 463C  
                        l3073 4834                          l3081 4552                          l4121 4186  
                        l4113 4158                          l4041 370E                          l4033 36D6  
                        l4025 365E                          l4017 35DA                          l4009 35AA  
                        l5001 1CD8                          l3401 2936                          l3321 268A  
                        l4201 4846                          l3067 4744                          l3059 464A  
                        l3075 4836                          l3091 4570                          l3083 4558  
                        l4131 41BA                          l4123 4188                          l4115 415C  
                        l4211 4362                          l4035 36E6                          l4027 366E  
                        l4019 3610                          l5011 1D08                          l5003 1CDE  
                        l3411 297E                          l3403 2944                          l3331 26CA  
                        l3323 2690                          l4203 484C                          l3077 483A  
                        l3069 481E                          l3093 4580                          l3085 455E  
                        l4133 41BE                          l4117 4170                          l4125 419C  
                        l4109 4148                          l4141 46FA                          l3501 3E44  
                        l4221 438E                          l4213 4364                          l4205 4316  
                        l4037 36F4                          l4029 367C                          l5101 1F14  
                        l5021 1D4A                          l5013 1D18                          l5005 1CE4  
                        l3421 29F8                          l3413 29AC                          l3405 295A  
                        l3341 26FE                          l3333 26DE                          l3325 26A0  
                        l3317 2670                          l4151 47CC                          l3095 458C  
                        l3087 4560                          l3079 4548                          l4135 41D8  
                        l4127 41A2                          l4119 4174                          l4143 4708  
                        l3511 3E8C                          l3503 3E50                          l4215 436A  
                        l4207 4332                          l4039 36FA                          l5111 1FAC  
                        l5103 1F1E                          l5031 1D7A                          l5023 1D5C  
                        l5015 1D2C                          l5007 1CF2                          l3431 2A76  
                        l3423 2A22                          l3415 29C2                          l3407 296C  
                        l3351 2758                          l3343 270E                          l3335 26E4  
                        l3327 26B0                          l3319 267C                          l4161 47DE  
                        l4153 47CE                          l4081 4878                          l3089 4568  
                        l4137 41DA                          l4129 41A6                          l3097 448E  
                        l4145 4710                          l3521 3ED2                          l3513 3EA2  
                        l3505 3E62                          l4217 4374                          l4209 4350  
                        l5201 2B58                          l5121 2012                          l5105 1F44  
                        l5113 1FC0                          l5041 1D8E                          l5033 1D7E  
                        l5025 1D6A                          l5017 1D2E                          l5009 1CF8  
                        l3433 2A92                          l3441 2AC4                          l3417 29DE  
                        l3425 2A2E                          l3409 2970                          l3361 279A  
                        l3353 276C                          l3345 271E                          l3337 26EA  
                        l3329 26C4                          l3601 2576                          l6001 1B58  
                        l4163 47E8                          l4155 47D0                          l4147 47C6  
                        l4091 4858                          l3099 4492                          l4139 46F6  
                        l3523 3EDE                          l3515 3EAE                          l3507 3E6A  
                        l4219 437C                          l5211 2B92                          l5203 2B5E  
                        l3531 45CA                          l4171 4868                          l5131 2046  
                        l5123 201C                          l5115 1FE6                          l5107 1F9A  
                        l5051 1DA2                          l5043 1D92                          l5035 1D82  
                        l5027 1D72                          l5019 1D36                          l3443 2AC8  
                        l3435 2AA2                          l3427 2A48                          l3419 29EA  
                        l3371 27EC                          l3363 27B0                          l3355 2780  
                        l3347 2732                          l3339 26F8                          l3451 3D3A  
                        l3611 266E                          l3603 257A                          l6011 1BCC  
                        l6003 1B5E                          l4165 47EA                          l4157 47DA  
                        l4149 47CA                          l4093 485A                          l4181 4778  
                        l3541 4424                          l3525 3EEA                          l3517 3EB4  
                        l3509 3E76                          l5301 2EBE                          l5221 2BDA  
                        l5213 2BA6                          l5205 2B6C                          l3533 45E0  
                        l4173 4870                          l5141 2082                          l5133 204E  
                        l5125 202A                          l5117 1FF6                          l5109 1F9C  
                        l5061 1DEE                          l5053 1DA6                          l5045 1D96  
                        l5037 1D86                          l5029 1D76                          l3445 2ADC  
                        l3437 2AB0                          l3429 2A5C                          l3381 2832  
                        l3373 27FA                          l3365 27BC                          l3357 2784  
                        l3349 2738                          l3701 394E                          l3461 3D68  
                        l3453 3D42                          l3621 46EA                          l3613 46BE  
                        l3605 258E                          l6013 1BF2                          l6005 1B6E  
                        l4167 47EC                          l4159 47DC                          l4079 4874  
                        l4095 4862                          l4191 478E                          l4183 477A  
                        l4175 4764                          l3543 443E                          l3551 446C  
                        l3519 3EC2                          l5311 2EE2                          l5303 2EC2  
                        l5231 2C1A                          l5223 2BEA                          l5215 2BA8  
                        l5207 2B72                          l3535 45EC                          l3527 45A0  
                        l5151 20E4                          l5143 2090                          l5135 205E  
                        l5127 2030                          l5119 200A                          l5071 1E48  
                        l5063 1E0A                          l5055 1DAA                          l5047 1D9A  
                        l5039 1D8A                          l3439 2AB6                          l3391 28A0  
                        l3383 284C                          l3375 2806                          l3367 27D4  
                        l3359 2790                          l3711 3988                          l3703 3952  
                        l3631 374C                          l3471 3DAC                          l3463 3D70  
                        l3455 3D4A                          l3447 3D28                          l3623 46F4  
                        l3615 46C2                          l3607 263A                          l6007 1B78  
                        l6015 1C0A                          l4169 47EE                          l4097 4864  
                        l4193 4790                          l4185 4780                          l4177 476C  
                        l3545 444C                          l5313 2EE6                          l5305 2ED0  
                        l5241 2C7A                          l5233 2C2A                          l5225 2BF2  
                        l5209 2B82                          l5217 2BB0                          l3529 45B2  
                        l5161 215E                          l5153 20F2                          l5145 20A6  
                        l5129 203E                          l5137 2068                          l5081 1E9C  
                        l5073 1E56                          l5065 1E1A                          l5049 1D9E  
                        l5057 1DB2                          l3393 28CA                          l3385 285C  
                        l3377 2816                          l3369 27E0                          l3537 4798  
                        l5321 4638                          l3721 39C0                          l3713 3998  
                        l3705 3958                          l3641 3798                          l3633 3770  
                        l3625 3710                          l3481 3DDC                          l3473 3DB2  
                        l3465 3D82                          l3457 3D58                          l3449 3D2C  
                        l3561 33E4                          l3553 3276                          l3617 46D2  
                        l3609 2642                          l5401 008E                          l6009 1B80  
                        l4195 4792                          l4187 4782                          l4179 4776  
                        l3547 445A                          l3539 4420                          l3491 3E14  
                        l5315 2EFA                          l5307 2ED6                          l5251 2CC6  
                        l5243 2C8A                          l5235 2C3E                          l5227 2C06  
                        l5219 2BC4                          l5171 21A4                          l5163 217E  
                        l5155 212C                          l5147 20BC                          l5091 1EE0  
                        l5139 207E                          l5083 1EB0                          l5075 1E5C  
                        l5067 1E34                          l5059 1DB6                          l3395 2900  
                        l3387 2878                          l3379 2822                          l5331 3C2E  
                        l5323 3BD4                          l3723 39D4                          l3731 3A08  
                        l3715 399E                          l3707 3960                          l3651 37CC  
                        l3643 37A4                          l3635 3784                          l3627 3734  
                        l3475 3DC8                          l3467 3D8A                          l3483 3DEA  
                        l3459 3D60                          l3571 34D8                          l3555 3286  
                        l3563 33E8                          l3619 46E2                          l5411 0104  
                        l5403 00AC                          l4197 4794                          l4189 478C  
                        l3549 4468                          l3493 3E18                          l5309 2EDC  
                        l5261 2D18                          l5253 2CD4                          l5245 2C9A  
                        l5237 2C42                          l5229 2C0A                          l5181 2ADE  
                        l3741 47F2                          l5173 21AA                          l5165 218A  
                        l5149 20D8                          l5157 213A                          l5093 1EEE  
                        l5085 1EB4                          l5077 1E66                          l5069 1E40  
                        l3397 290E                          l3389 2884                          l5341 3C66  
                        l5333 3C30                          l5325 3BEC                          l3901 3B3C  
                        l5317 45EE                          l3733 3A18                          l3725 39E8  
                        l3717 39A8                          l3709 396A                          l3661 3814  
                        l3653 37E6                          l3645 37B4                          l3637 3788  
                        l3629 3748                          l3485 3DFA                          l3477 3DD0  
                        l3469 3D96                          l3573 3528                          l3565 33F8  
                        l3557 33A8                          l3581 232C                          l5501 0574  
                        l5421 018E                          l5405 00BA                          l5413 012A  
                        l6053 1C22                          l3495 3E26                          l5271 2D66  
                        l5263 2D2E                          l5255 2CE4                          l5247 2CA2  
                        l5239 2C6A                          l5191 2B20                          l5183 2AEC  
                        l3743 480E                          l5175 21B8                          l5167 2198  
                        l5159 214A                          l5095 1EF6                          l5087 1EC4  
                        l5079 1E8C                          l3399 292C                          l5351 3CAA  
                        l5343 3C7A                          l5335 3C40                          l5327 3C00  
                        l4199 483E                          l3903 3B4A                          l3911 467C  
                        l5319 4600                          l3735 3A2C                          l3727 39F0  
                        l3719 39B2                          l3663 3828                          l3671 385C  
                        l3655 37F2                          l3647 37B8                          l3639 378A  
                        l3487 3E06                          l3479 3DD6                          l3567 3498  
                        l3559 33E0                          l3591 23FC                          l3583 2330  
                        l3575 21D6                          l5511 0642                          l5503 05AC  
                        l5431 01E6                          l5423 0196                          l5415 0146  
                        l5407 00D6                          l3497 3E2E                          l5281 2DCE  
                        l5265 2D44                          l5273 2D7C                          l5257 2D02  
                        l5249 2CB2                          l5193 2B34                          l5185 2AFA  
                        l3745 481A                          l5177 21BE                          l5169 219E  
                        l5097 1F04                          l5089 1ED2                          l5361 3CFE  
                        l5353 3CBE                          l5345 3C82                          l5337 3C44  
                        l5329 3C04                          l3905 3BC2                          l3913 4692  
                        l3737 3A34                          l3729 39FA                          l3681 38BE  
                        l3673 386C                          l3665 383C                          l3657 37FC  
                        l3649 37BE                          l3489 3E12                          l3569 34D0  
                        l3593 2428                          l3585 2334                          l3577 21E4  
                        l5601 0A48                          l5521 069C                          l5513 0658  
                        l5505 05C2                          l5441 0250                          l5433 01EA  
                        l5417 014E                          l5425 01BC                          l5409 0100  
                        l3499 3E36                          l5291 2E44                          l5283 2DE4  
                        l5275 2D8E                          l5267 2D4E                          l5259 2D04  
                        l5195 2B36                          l5187 2B00                          l5371 4300  
                        l5179 21D2                          l5099 1F0A                          l5363 3D12  
                        l5355 3CC6                          l5347 3C8C                          l5339 3C52  
                        l3907 3BC8                          l3915 46A6                          l3739 3A44  
                        l3691 3916                          l3683 38D4                          l3675 3880  
                        l3667 3844                          l3659 3806                          l3587 2348  
                        l3579 21FA                          l3595 242C                          l5611 0AC8  
                        l5603 0A4C                          l5531 0718                          l5523 06B2  
                        l5515 065C                          l5507 0630                          l5451 02AC  
                        l5443 0268                          l5435 0224                          l5427 01C6  
                        l5419 015A                          l5285 2E00                          l5293 2E50  
                        l5277 2D92                          l5269 2D58                          l5189 2B10  
                        l5197 2B3E                          l5373 4314                          l5365 3D26  
                        l5357 3CD6                          l5349 3C9A                          l5381 4078  
                        l3909 3BD2                          l3917 46BA                          l3693 391A  
                        l3685 38E8                          l3677 3888                          l3669 384E  
                        l3597 2440                          l3589 23F4                          l5701 0DEA  
                        l5621 0B1C                          l5613 0AD2                          l5605 0A9C  
                        l5541 0768                          l5533 0726                          l5525 06E6  
                        l5517 0696                          l5509 063E                          l5461 02FA  
                        l5453 02B4                          l5445 0270                          l5437 0236  
                        l5429 01D4                          l5295 2E6A                          l5287 2E0C  
                        l5279 2DA0                          l5199 2B52                          l5367 4290  
                        l5359 3CEE                          l5383 4082                          l5375 3FC4  
                        l3695 391C                          l3687 38EC                          l3679 3898  
                        l3599 2572                          l5703 0DFA                          l5631 0B64  
                        l5623 0B20                          l5607 0AB8                          l5551 07AC  
                        l5543 076C                          l5535 0744                          l5527 06F0  
                        l5519 069A                          l5471 037C                          l5463 0316  
                        l5455 02CA                          l5447 027E                          l5439 0244  
                        l5615 0AEC                          l5391 003E                          l5711 0EA8  
                        l5297 2E84                          l5289 2E1A                          l5369 42A0  
                        l5377 401C                          l3697 392C                          l3689 3902  
                        l5705 0E72                          l5641 0BC0                          l5633 0B68  
                        l5625 0B34                          l5617 0B06                          l5609 0AC4  
                        l5561 080E                          l5537 0750                          l5545 0776  
                        l5553 07B6                          l5529 070E                          l5481 041C  
                        l5473 03B2                          l5465 0326                          l5457 02D8  
                        l5449 02A2                          l5713 0ED2                          l5393 0046  
                        l5385 0012                          l5801 1198                          l5299 2E9E  
                        l5379 405E                          l3891 3A9A                          l3971 40CE  
                        l3963 4090                          l3699 393E                          l5715 0EE2  
                        l5707 0E7E                          l5651 0C20                          l5643 0BC2  
                        l5635 0B7E                          l5627 0B46                          l5619 0B0E  
                        l5571 08C0                          l5563 085A                          l5555 07D4  
                        l5547 079C                          l5539 075C                          l5491 04DA  
                        l5483 045A                          l5475 03BC                          l5467 0330  
                        l5459 02DE                          l5395 005E                          l5387 0020  
                        l5811 11C4                          l5803 11A6                          l3893 3AAE  
                        l3981 4122                          l3973 40E4                          l3965 40A0  
                        l5709 0E86                          l5661 0C7A                          l5653 0C32  
                        l5645 0BD8                          l5637 0B82                          l5629 0B5C  
                        l5581 0914                          l5573 08CC                          l5565 088E  
                        l5557 07F2                          l5549 07A8                          l5493 050E  
                        l5485 0478                          l5477 03F0                          l5469 0348  
                        l5397 006A                          l5389 0032                          l5901 1618  
                        l5821 121A                          l5813 11E0                          l5805 11AC  
                        l5741 0EF0                          l3895 3ADC                          l3983 412C  
                        l3975 40EE                          l3967 40B6                          l3991 421E  
                        l5671 0CE4                          l5663 0C98                          l5655 0C44  
                        l5647 0BF8                          l5639 0BBC                          l5591 0954  
                        l5583 0924                          l5575 08D0                          l5567 089E  
                        l5559 07FE                          l5495 051A                          l5487 048E  
                        l5479 0400                          l5399 006E                          l5911 16A4  
                        l5903 163E                          l5831 1262                          l5823 1230  
                        l5815 11FE                          l5807 11AE                          l5751 0F06  
                        l5743 0EF4                          l3897 3AF0                          l3889 3A6A  
                        l3977 410C                          l3969 40BE                          l3993 4234  
                        l3985 41F0                          l5681 0D30                          l5673 0CF0  
                        l5665 0CA4                          l5657 0C62                          l5649 0C00  
                        l5593 096A                          l5585 0930                          l5577 08DA  
                        l5569 08A6                          l5497 0526                          l5489 04BA  
                        l5921 1726                          l5913 16B0                          l5905 164E  
                        l5841 12C4                          l5833 126A                          l5825 1242  
                        l5817 120A                          l5809 11BA                          l5761 0F3E  
                        l5753 0F0A                          l5745 0EF8                          l5737 0EE4  
                        l3899 3AFE                          l3979 411C                          l3995 4252  
                        l3987 4206                          l5691 0D90                          l5683 0D46  
                        l5675 0CFE                          l5667 0CB4                          l5659 0C6C  
                        l5595 09B6                          l5587 0940                          l5579 08F8  
                        l5499 053C                          l5931 17A2                          l5923 173C  
                        l5915 1704                          l5907 1684                          l5851 131E  
                        l5843 12EC                          l5835 126C                          l5827 1248  
                        l5819 1210                          l5771 109A                          l5763 0F84  
                        l5755 0F10                          l5747 0EFC                          l5739 0EEC  
                        l4981 1C5A                          l3997 4266                          l3989 420E  
                        l5693 0D9C                          l5685 0D52                          l5677 0D1C  
                        l5669 0CD4                          l5597 0A04                          l5589 094C  
                        l5941 185E                          l5933 17AE                          l5925 1744  
                        l5917 1720                          l5909 168E                          l5861 1398  
                        l5853 132E                          l5845 12F8                          l5837 1276  
                        l5829 125A                          l5781 1106                          l5773 10A4  
                        l5765 0F86                          l5757 0F24                          l5749 0F00  
                        l4991 1CA2                          l4983 1C68                          l3999 4270  
                        l5695 0DA0                          l5687 0D56                          l5679 0D28  
                        l5599 0A38                          l5951 18C4                          l5943 186C  
                        l5935 17CA                          l5927 177A                          l5919 1724  
                        l5871 1434                          l5863 13A2                          l5855 1338  
                        l5847 12FE                          l5839 12A4                          l5791 1150  
                        l5783 1112                          l5775 10CA                          l5767 0F9A  
                        l5759 0F28                          l4993 1CA4                          l4985 1C6E  
                        l5697 0DC0                          l5689 0D7A                          l5961 1906  
                        l5953 18D0                          l5945 1880                          l5937 17DE  
                        l5929 1786                          l5881 14C0                          l5873 1450  
                        l5865 13B8                          l5857 1356                          l5849 1308  
                        l5793 1162                          l5785 111C                          l5777 10D6  
                        l5769 108A                          l4987 1C7E                          l4995 1CAC  
                        l4979 1C4C                          l5699 0DDE                          l5971 1992  
                        l5963 195A                          l5947 188A                          l5939 17EE  
                        l5955 18DA                          l5891 159A                          l5883 14F4  
                        l5875 146E                          l5867 13C4                          l5859 1362  
                        l5795 116C                          l5787 113A                          l5779 10E0  
                        l4997 1CC0                          l4989 1C8E                          l5981 1A04  
                        l5973 199A                          l5965 1976                          l5957 18E4  
                        l5949 18A6                          l5893 15A0                          l5885 14FA  
                        l5877 1488                          l5869 1418                          l5797 117C  
                        l5789 1146                          l4999 1CC6                          l5991 1AB4  
                        l5983 1A20                          l5975 19D0                          l5967 197A  
                        l5959 18FA                          l5895 15BA                          l5879 14A6  
                        l5887 150A                          l5799 118E                          l5993 1AD2  
                        l5985 1A34                          l5977 19DC                          l5969 197C  
                        l5897 15C4                          l5889 158E                          l5995 1AEC  
                        l5979 19F8                          l5987 1A44                          l5899 15CC  
                        l5997 1B0A                          l5989 1A98                          l5999 1B24  
                        STR_1 FF6B                          STR_2 FF9E                          STR_3 FFAE  
                        STR_4 FFF7                          STR_5 FF7E                          STR_6 FFF0  
                        STR_7 FF8E                          STR_8 FFE8                          STR_9 FFD2  
                        u3200 28EA                          u3120 268A                          u3121 2686  
                        u3210 2944                          u3130 26A0                          u3211 2940  
                        u3131 269C                          u3300 2AB0                          u3220 2968  
                        u3140 26B0                          u4100 4252                          u3301 2AAC  
                        u3221 2964                          u3205 28E0                          u3141 26AC  
                        u4101 424E                          u4110 353C                          u3230 297E  
                        u3150 26F8                          u3310 3D3A                          u4111 3538  
                        u3231 297A                          u3151 26F4                          u3311 3D36  
                        u3400 3E84                          u4200 36F4                          u4120 354A  
                        u3240 29AC                          u3160 270E                          u3320 3D58  
                        u3401 3E80                          u4201 36F0                          u4121 3546  
                        u3241 29A8                          u3161 270A                          u3321 3D54  
                        u3410 3EA2                          u4130 35AA                          u3250 29C2  
                        u3170 271E                          u4050 40B6                          u3330 3D82  
                        u3411 3E9E                          u4131 35A6                          u3251 29BE  
                        u3171 271A                          u4051 40B2                          u3331 3D7E  
                        u2700 475E                          u4300 41B6                          u3420 3ED2  
                        u4140 3608                          u3260 29DE                          u3180 2758  
                        u4060 40DC                          u3340 3DA4                          u3500 258E  
                        u2701 475A                          u4301 41B2                          u3421 3ECE  
                        u4141 3604                          u3261 29DA                          u3181 2754  
                        u4061 40D8                          u3341 3DA0                          u3501 258A  
                        u4310 41EA                          u4150 3656                          u3430 45C6  
                        u3270 29F8                          u3190 2768                          u4070 410C  
                        u3350 3DC8                          u3510 46D2                          u4311 41E6  
                        u4151 3652                          u3431 45C2                          u3271 29F4  
                        u3191 2764                          u4071 4108                          u3351 3DC4  
                        u3511 46CE                          u2720 4580                          u4320 4728  
                        u4160 367C                          u3280 2A48                          u6000 3C24  
                        u4080 4206                          u3600 386C                          u3360 3DFA  
                        u3440 3286                          u3520 46E2                          _PIE2 000FA0  
                        u2721 457C                          u4321 4724                          u4161 3678  
                        u3281 2A44                          u4081 4202                          u3601 3868  
                        u3361 3DF6                          u3441 3282                          u3521 46DE  
                        u3370 3E26                          u4330 4350                          u4170 368C  
                        u3290 2A76                          u6010 3C52                          u4090 422C  
                        u3610 38A8                          u3450 33F8                          u2715 4550  
                        u3371 3E22                          u4331 434C                          u4171 3688  
                        u3291 2A72                          u6011 3C4E                          u4091 4228  
                        u3611 38A4                          u3531 3720                          u3451 33F4  
                        u2716 4552                          u3380 3E44                          u4340 4362  
                        u4180 369E                          u6020 3C66                          u3620 38D4  
                        u3540 3734                          u3460 21E4                          u6100 0146  
                        u3381 3E40                          u4341 435E                          u4181 369A  
                        u6021 3C62                          u6005 3C1A                          u3621 38D0  
                        u3541 3730                          u3461 21E0                          u6101 0142  
                        u3390 3E62                          u4350 438E                          u4190 36E6  
                        u6030 3CAA                          u3630 3902                          u3470 21FA  
                        u6110 01B4                          u3391 3E5E                          u4351 438A  
                        u4191 36E2                          u6031 3CA6                          u3631 38FE  
                        u3551 375C                          u3471 21F6                          u6111 01B0  
                        u4280 416C                          u5400 1CD8                          u6040 3CE6  
                        u3640 3988                          u3560 3770                          u3480 2348  
                        u6200 0478                          u6120 0236                          u4281 4168  
                        u5401 1CD4                          u6041 3CE2                          u3641 3984  
                        u3561 376C                          u3481 2344                          u6201 0474  
                        u6121 0232                          u2690 4676                          u4290 4198  
                        u5410 1CF2                          u6050 3CFE                          u3650 39C0  
                        u3570 37E6                          u3490 2440                          u6210 048E  
                        u6130 0244                          u2691 4672                          u4291 4194  
                        u5411 1CEE                          u6051 3CFA                          u3651 39BC  
                        u3571 37E2                          u3491 243C                          u6211 048A  
                        u6131 0240                          u5500 1E56                          u5420 1D08  
                        u6060 4078                          u3660 39D4                          u3580 3814  
                        u6300 0726                          u6220 04BA                          u6140 027E  
                        u5501 1E52                          u5421 1D04                          u6061 4074  
                        u3661 39D0                          u3581 3810                          u6301 0722  
                        u6221 04B6                          u6141 027A                          u5510 1E7A  
                        u5430 1D18                          u3670 3A18                          u3590 3828  
                        u6310 0744                          u6230 04D6                          u6150 02CA  
                        u6070 0032                          u5511 1E76                          u5431 1D14  
                        u3671 3A14                          u3591 3824                          u6311 0740  
                        u6231 04D2                          u6151 02C6                          u6071 002E  
                        u5600 1FF6                          u5520 1E8C                          u5440 1D5C  
                        u3920 3A9A                          u3680 3A54                          u6400 0AE4  
                        u6320 0790                          u6240 050E                          u6160 0326  
                        u6080 00AC                          u5601 1FF2                          u5521 1E88  
                        u5441 1D58                          u3921 3A96                          u3681 3A50  
                        u6401 0AE0                          u6321 078C                          u6241 050A  
                        u6161 0322                          u6081 00A8                          u5610 202A  
                        u5530 1E9C                          u5450 1D6A                          u5370 1C68  
                        u3930 3ADC                          u6410 0B1C                          u6330 07D0  
                        u6250 0654                          u6170 03B2                          u6090 0122  
                        u5611 2026                          u5531 1E98                          u5451 1D66  
                        u5371 1C64                          u3931 3AD8                          u6411 0B18  
                        u6331 07CC                          u6251 0650                          u6171 03AE  
                        u6091 011E                          u5700 212C                          u5620 203E  
                        u5540 1ED2                          u5460 1DEE                          u5380 1C7E  
                        u3940 3AFE                          u6500 0C62                          u6420 0B46  
                        u6340 07F2                          u6260 0692                          u6180 03F0  
                        u5701 2128                          u5621 203A                          u5541 1ECE  
                        u5461 1DEA                          u5381 1C7A                          u3941 3AFA  
                        u6501 0C5E                          u6421 0B42                          u6341 07EE  
                        u6261 068E                          u6181 03EC                          u5710 214A  
                        u5630 205E                          u5550 1EE0                          u5470 1E06  
                        u5390 1C8E                          u3950 3B4A                          u6510 0C7A  
                        u6430 0B5C                          u6350 08B8                          u6270 06AE  
                        u6190 041C                          u5711 2146                          u5631 205A  
                        u5551 1EDC                          u5471 1E00                          u5391 1C8A  
                        u3951 3B46                          u6511 0C76                          u6431 0B58  
                        u6351 08B4                          u6271 06AA                          u6191 0418  
                        u5800 2B82                          u5720 215A                          u5640 2076  
                        u5560 1F04                          u5480 1E08                          u3960 3BC2  
                        u6600 0DDE                          u6520 0C98                          u6440 0B7A  
                        u6360 08F4                          u6280 06E6                          u5801 2B7E  
                        u5721 2156                          u5641 2072                          u5561 1F00  
                        u3961 3BBE                          u6601 0DDA                          u6521 0C94  
                        u6441 0B76                          u6361 08F0                          u6281 06E2  
                        _PIR1 000F9E                          u5810 2B92                          u5730 217E  
                        u5650 2090                          u5570 1F44                          u5490 1E34  
                        u3970 4692                          u6610 0EA0                          u6530 0CD4  
                        u6450 0BB8                          u6370 0914                          u6290 070E  
                        _PIR2 000FA1                          u5811 2B8E                          u5731 217A  
                        u5651 208C                          u5571 1F40                          u5491 1E30  
                        u3971 468E                          u6611 0E9C                          u6531 0CD0  
                        u6451 0BB4                          u6371 0910                          u6291 070A  
                        u5900 2D8A                          u5820 2BDA                          u5740 2198  
                        u5660 20A6                          u5580 1FAC                          u6620 0ECA  
                        u6540 0CFE                          u6460 0BD4                          u6380 0940  
                        u6700 1398                          u5901 2D86                          u5821 2BD6  
                        u5741 2194                          u5661 20A2                          u5581 1FA8  
                        u6621 0EC6                          u6541 0CFA                          u6461 0BD0  
                        u6381 093C                          u6701 1394                          u5910 2DA0  
                        u5830 2C1A                          u5750 21B8                          u5670 20BC  
                        u5590 1FE6                          u6550 0D1C                          u6470 0BF8  
                        u6390 0AB0                          u6710 1434                          u5911 2D9C  
                        u5831 2C16                          u5751 21B4                          u5671 20B8  
                        u5591 1FE2                          u6551 0D18                          u6471 0BF4  
                        u6391 0AAC                          u6711 1430                          u5920 2DCE  
                        u5840 2CB2                          u5760 2AFA                          u5680 20D8  
                        u6560 0D42                          u6480 0C20                          u6800 185E  
                        u6720 146E                          u5921 2DCA                          u5841 2CAE  
                        u5761 2AF6                          u5681 20D4                          u6561 0D3E  
                        u6481 0C1C                          u6801 185A                          u6721 146A  
                        u5930 2DE4                          u5850 2CD4                          u5770 2B10  
                        u5690 20F2                          u6570 0D6E                          u6490 0C44  
                        u6810 1976                          u6730 14A6                          u6650 0F20  
                        u5931 2DE0                          u5851 2CD0                          u5771 2B0C  
                        u5691 20EE                          u6571 0D6A                          u6491 0C40  
                        u6811 1972                          u6731 14A2                          u6651 0F1C  
                        u5940 2E00                          u5860 2D02                          u5780 2B20  
                        u6580 0D8C                          u6820 19D0                          u6740 158E  
                        u6660 0F96                          u5941 2DFC                          u5861 2CFE  
                        u5781 2B1C                          u6581 0D88                          u6821 19CC  
                        u6741 158A                          u6661 0F92                          u5950 2E1A  
                        u5870 2D2A                          u5790 2B6C                          u6590 0DB8  
                        u6830 19F8                          u6750 1684                          u6670 1162  
                        u5951 2E16                          u5871 2D26                          u5791 2B68  
                        u6591 0DB4                          u6831 19F4                          u6751 1680  
                        u6671 115E                          u5960 2E6A                          u5880 2D44  
                        u6840 1A20                          u6760 1720                          u6680 118E  
                        u5961 2E66                          u5881 2D40                          u6841 1A1C  
                        u6761 171C                          u6681 118A                          u5970 2E9E  
                        u5890 2D66                          u6850 1AD2                          u6770 177A  
                        u6690 125A                          u5971 2E9A                          u5891 2D62  
                        u6851 1ACE                          u6771 1776                          u6691 1256  
                        u5980 2ED0                          u6860 1B0A                          u6780 17A2  
                        u5981 2ECC                          u6861 1B06                          u6781 179E  
                        u5990 3BEC                          u6790 17CA                          u5991 3BE8  
                        u6791 17C6                          u6877 4582                          u6887 473C  
            ?_lcd_send_nibble 0001              ??_initialization 001E                          _main 0EE4  
                        _temp 014F                          fsr0h 000FEA                          fsr1h 000FE2  
                        fsr2h 000FDA                          fsr0l 000FE9                          indf2 000FDF  
                        fsr1l 000FE1                          fsr2l 000FD9                          btemp 0062  
              main@CoolError1 012A                          prodh 000FF4                          prodl 000FF3  
                        start 000E                 __CFG_IESO$OFF 000000               ___fldiv@new_exp 0085  
                 main@voltage 0120        __end_ofi2_reloadTimer3 488C                  _sprintf$1716 00AC  
               __CFG_MCLRE$ON 000000                  ___param_bank 000000              _set_pwm1_percent 3FC4  
        __end_of_delay_cycles 467C                 ___fltol@sign1 0052               __end_of___fladd 21D4  
                       ?_main 0001               __end_of___fldiv 2EFC               __end_of___awdiv 3E14  
             __end_of___flneg 46BC                         STR_10 FFBB                         STR_11 FFDD  
                       STR_12 FFF7                         STR_13 FFC7                         STR_14 FFBB  
             __end_of___awmod 3EEC               __end_of___flmul 2ADE               __end_of___flsub 463A  
             __end_of___fltol 3D28               __end_of___lldiv 4148                         _T0CON 000FD5  
             ___awdiv@divisor 0026               __end_of___llmod 428C                         _T2CON 000FCA  
                       _T3CON 000FB1                         i2l250 3224                         i2l235 488A  
                       i2l251 30DE                         i2l260 30CE                         i2l252 302E  
                       i2l261 3220                         i2l253 302A                         i2l270 31D6  
                       i2l262 31E6                         i2l254 30DA                         i2l246 2F7E  
                       i2l271 321C                         i2l263 313C                         i2l255 3084  
                       i2l247 2F7A                         i2l248 3228                         i2l272 3218  
                       i2l264 3138                         i2l256 3076                         i2l265 31E2  
                       i2l257 3080                         i2l249 2FD2                         i2l273 3228  
                       i2l266 318A                         i2l258 30D6                         i2l267 3186  
                       i2l259 30D2                         i2l276 43F6                         i2l268 31DE  
                       i2l277 4400                         i2l269 31DA                         i2l278 441C  
                       i2l279 441C                         i2l650 3F4E                         i2l651 3F42  
                       i2l652 3F60                         i2l653 3F64                         i2l654 3F86  
                       i2l655 3F96                         i2l647 3F0E                         i2l656 3FB6  
                       i2l648 3F28                         i2l657 3FC2                         i2l649 3F9A  
             ___awdiv@counter 0028                         _TMR0H 000FD7                         _TMR1H 000FCF  
                       _TMR0L 000FD6                         _TMR1L 000FCE                         _TMR3H 000FB3  
                       _TMR3L 000FB2       read_adc_voltage@channel 0095                         _TRISA 000F92  
                       _TRISB 000F93                         _TRISC 000F94                         _TRISD 000F95  
                       _TRISE 000F96                 __CFG_PWRT$OFF 000000                 __CFG_WRT0$OFF 000000  
               __CFG_WRT1$OFF 000000                 __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000  
              __CFG_EBTR0$OFF 000000                __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000  
              __CFG_EBTR2$OFF 000000                __CFG_EBTR3$OFF 000000               __end_of_highIsr 3274  
               __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000                 __CFG_WRTD$OFF 000000  
              __CFG_EBTRB$OFF 000000               __end_of_dpowers FF6B                         _scale 21D4  
             __end_of_isdigit 46F6               _init_adc_no_lib 4874                         pclath 000FFA  
                       tablat 000FF5                         status 000FD8       read_adc_voltage@voltage 0091  
                       wtemp6 0063               __end_of_sprintf 0EE4            __size_ofi2___awmod 00D8  
              __CFG_PBADEN$ON 000000               ?i2_reloadTimer3 0001               __initialization 44EE  
                __end_of_main 1C4C               ??_lcd_send_byte 0027                        ??_main 00C7  
               __activetblptr 000002                 ?_initTimers01 0001          __size_of__tdiv_to_l_ 01AE  
                      _ADCON0 000FC2                        _ADCON1 000FC1                        _ADCON2 000FC0  
            ___llmod@dividend 002B                        ?_scale 0045                        _ADRESH 000FC4  
                      _ADRESL 000FC3                        _CCPR1L 000FBE              ___awdiv@dividend 0024  
                      i2l4051 3F0E                        i2l4043 3EEC                        i2l4061 3F4E  
                      i2l4053 3F1C                        i2l4045 3EF0                        i2l4063 3F64  
                      i2l4071 3F9A                        i2l4055 3F28                        i2l4047 3EFE  
                      i2l4073 3FAA                        i2l4065 3F7A                        i2l4057 3F3A  
                      i2l4049 3F06                        i2l4075 3FB6                        i2l4067 3F86  
                      i2l4059 3F42                        i2l4077 3FC2                        i2l4069 3F8C  
                      i2l4601 2F46                        i2l4611 2F8E                        i2l4603 2F54  
                      i2l4621 2FF4                        i2l4613 2FAE                        i2l4605 2F58  
                      i2l4631 3076                        i2l4623 3006                        i2l4615 2FB6  
                      i2l4607 2F6A                        i2l4561 43B6                        i2l4641 30EE  
                      i2l4633 3084                        i2l4625 302E                        i2l4617 2FE0  
                      i2l4609 2F8C                        i2l4571 43F8                        i2l4563 43D4  
                      i2l4555 4880                        i2l4651 3162                        i2l4643 3100  
                      i2l4635 3098                        i2l4627 3040                        i2l4619 2FE2  
                      i2l4573 4400                        i2l4565 43E6                        i2l4557 4888  
                      i2l4661 3212                        i2l4653 318A                        i2l4645 3114  
                      i2l4637 30AA                        i2l4629 3052                        i2l4575 4412  
                      i2l4567 43E8                        i2l4559 439A                        i2l4655 319E  
                      i2l4647 313C                        i2l4639 30EC                        _INTCON 000FF2  
                      i2l4569 43EE                        i2l4657 31B2                        i2l4649 314E  
                      i2l4659 31F4              __end_of___xxtofl 3710              __end_of_delay_ms 4764  
              __CFG_XINST$OFF 000000              __end_of__powers_ FF0F              __end_of_lcd_init 41F0  
                      ___flge 3A6A              __end_of_lcd_putc 448C              __end_of_lcd_puts 472E  
                   ??___fladd 0088                        ___wmul 47F2                     ??___fldiv 004D  
                   ??___awdiv 0028                     ??___flneg 0036                __CFG_STVREN$ON 000000  
                   ??___awmod 0022                     ??___flmul 0034                     ??___flsub 0052  
                   ??___fltol 0098                     ??___lldiv 0026                     ??___llmod 0033  
                      _fround 3274                        clear_0 4526                        clear_1 4532  
            ___awdiv@quotient 002A               ___awmod@divisor 0020               ___awmod@counter 0022  
                   ??_highIsr 000A                ??_initTimers01 001E         __size_ofi2_pwd_Timer3 0084  
     __end_of_init_adc_no_lib 4880                  __pdataCOMRAM 005E                     ??_isdigit 001E  
           __end_ofi2___awmod 3FC4               pwd_Timer3@limit 0024                  __mediumconst FEDA  
                      tblptrh 000FF7                        tblptrl 000FF6                        tblptru 000FF8  
              i2___awmod@sign 0006                     ??_sprintf 00A8                    ___flge@ff1 0094  
                  ___flge@ff2 0098                  ___xxtofl@arg 002E                  ___xxtofl@exp 002D  
                ___xxtofl@val 0024                    __accesstop 0080       __end_of__initialization 4538  
                  ___flneg@f1 0032                 ___rparam_used 000001                    ___fltol@f1 0094  
              __pcstackCOMRAM 0001         __size_of_delay_cycles 0042                  __pidataBANK1 4890  
                i2_pwd_Timer3 439A                 __end_of_scale 2670                    __div_to_l_ 38BE  
   __size_of_read_adc_voltage 008A             lcd_gotoxy@address 002A               __div_to_l_@exp1 002B  
             __div_to_l_@cntr 002A                       ??_scale 0049               __div_to_l_@quot 0026  
                sprintf@width 00BE            _percentHeatCounter 005C      __end_of_set_pwm1_percent 4090  
                  __pbssBANK1 014F   __end_of_read_adc_raw_no_lib 45EE                  _delay_cycles 463A  
               __div_to_l_@f1 001E                 __div_to_l_@f2 0022            __size_of_init_pwm1 0010  
               ?_reloadTimer3 0001                lcd_send_byte@n 0026                       ?___flge 0094  
                     ?___wmul 001E              lcd_send_nibble@n 0025                       _CCP1CON 000FBD  
                     ?_fround 0045            _percentCoolCounter 005A              ?_init_adc_no_lib 0001  
                     _INTCON2 000FF1                       _INTCON3 000FF0                     ?___xxtofl 0024  
                   ?_delay_ms 001E                    _lcd_gotoxy 448C                     ?_lcd_init 0001  
                   ?_lcd_putc 0001                     ?_lcd_puts 002C              ??i2_reloadTimer3 0001  
              ??_reloadTimer3 001E          __end_of_initTimers01 47F2             __end_of__npowers_ FF43  
                     __Hparam 0000                    _scale$1715 0049                       __Lparam 0000  
    __size_of_lcd_send_nibble 0022               __size_of___flge 016A                       ___fladd 1C4C  
                     ___fldiv 2ADE                       ___awdiv 3D28                       ___flneg 467C  
                     ___awmod 3E14                       ___flmul 2670                       ___flsub 45EE  
                     ___fltol 3BD4                       ___lldiv 4090               __size_of___wmul 002A  
                     ___llmod 41F0                 ?_set_pwm1_raw 002C                       __pcinit 44EE  
             __size_of_fround 02B6                       __ramtop 1000                       __ptext0 0EE4  
                     __ptext1 0012                       __ptext2 21D4                       __ptext3 46BC  
                     __ptext4 3274                       __ptext5 3D28                       __ptext6 3710  
                     __ptext7 38BE                       __ptext8 41F0                       __ptext9 4090  
                     _highIsr 0008                     _T0CONbits 000FD5                     _T1CONbits 000FCD  
                 ?__div_to_l_ 001E                       _dpowers FF43                     _T2CONbits 000FCA  
                     _isdigit 46BC                    ??___xxtofl 0028                     _T3CONbits 000FB1  
           __end_of_init_pwm1 4868              ___awmod@dividend 001E                    ??_delay_ms 0020  
                     main@RPS 0128                       _sprintf 0012                    ??_lcd_init 0028  
              __pintcode_body 2EFC                    ??_lcd_putc 002B                    ??_lcd_puts 002E  
        end_of_initialization 4538                _operationModes 0058                 __Lmediumconst FEDA  
                     int_func 2EFC          lcd_send_byte@cm_data 0027               ___lldiv@divisor 0022  
             ___lldiv@counter 002A                    _pwd_Timer3 4316                       postdec1 000FE5  
                     postdec2 000FDD                       postinc0 000FEE                       postinc2 000FDE  
              ??_set_pwm1_raw 002E       __size_of_initialization 0034                __tdiv_to_l_@f1 001E  
              __tdiv_to_l_@f2 0022         __end_of_lcd_send_byte 459E                 ??__tdiv_to_l_ 0026  
                   _PORTCbits 000F82                     _PORTEbits 000F84                    _setupPorts 483E  
         set_pwm1_percent@tmp 00A0                   ___fladd@grs 0093                 ___xxtofl@sign 002C  
            _read_adc_voltage 428C                     _TRISCbits 000F94                   ?_lcd_gotoxy 0028  
                 ___fldiv@grs 0087                    main@Buffer 0100                   ___fldiv@rem 0081  
                   i2___awmod 3EEC               _LCD_INIT_STRING 005E                     _RPS_count 015B  
                 ___flmul@grs 0039                   _CCP1CONbits 000FBD           __size_of__div_to_l_ 01AC  
              __end_of___flge 3BD4                __end_of___wmul 481C                 __pidataCOMRAM 488C  
               delay_cycles@n 0021                 delay_cycles@x 0022             ??_lcd_send_nibble 0024  
              __end_of_fround 352A          __end_of_reloadTimer3 4874           start_initialization 44EE  
         __end_of__tdiv_to_l_ 38BE                    ?i2___awmod 0001         __size_of_initTimers01 002C  
           ?_set_pwm1_percent 009C            ??_set_pwm1_percent 0054               ___llmod@divisor 002F  
             ___llmod@counter 0033                      ??___flge 009C                   ?_pwd_Timer3 0024  
         __size_of_lcd_gotoxy 0062                      ??___wmul 0022                   __pdataBANK1 015E  
read_adc_raw_no_lib@raw_value 0022              __CFG_LPT1OSC$OFF 000000                      ??_fround 0049  
               sprintf@tmpval 00B2                   ?_setupPorts 0001                     ___fladd@a 0084  
                   ___fladd@b 0080                    fround@prec 0051                     ___fldiv@a 0049  
                   ___fldiv@b 0045                  _initTimers01 47C6                     ___flmul@a 0030  
                   ___flmul@b 002C                   __pbssCOMRAM 0054                     ___flsub@a 0098  
                   ___flsub@b 0094                 __pcstackBANK0 0080                 __pcstackBANK1 0100  
           __size_of___xxtofl 01E6                  _isdigit$1331 001F             __size_of_delay_ms 0036  
        __end_of_set_pwm1_raw 47C6             __size_of_lcd_init 00A8                   sprintf@flag 00BC  
           __size_of_lcd_putc 006E             __size_of_lcd_puts 0038                   sprintf@fval 00C0  
                 sprintf@prec 00C4                     _main$1710 0148                     _main$1711 012E  
                   _main$1712 0144                     _main$1709 0124             __CFG_CCP2MX$PORTC 000000  
                   __pintcode 0008  __size_of_read_adc_raw_no_lib 0050                 __pmediumconst FEDA  
                    ?___fladd 0080                      ?___fldiv 0045                      ?___awdiv 0024  
                    ?___flneg 0032                      ?___awmod 001E                _initialization 4764  
                    ?___flmul 002C                      ?___flsub 0094                      ?___fltol 0094  
                    ?___lldiv 001E                      ?___llmod 002B                     __npowers_ FF0F  
                 __tdiv_to_l_ 3710                      ?_highIsr 0001                  ??__div_to_l_ 0026  
                    ?_isdigit 0001                   ??i2___awmod 0005                      ?_sprintf 00A0  
                   _init_pwm1 4858                __size_of_scale 049C           __size_of_pwd_Timer3 0084  
    __size_of_init_adc_no_lib 000C                ___wmul@product 0022                     delay_ms@n 001E  
                   delay_ms@x 0020                      _PIE2bits 000FA0           __size_of_setupPorts 001A  
                    i2u500_40 2FE0                      i2u500_41 2FDC                      i2u421_40 3EFE  
                    i2u501_40 2FF4                      i2u421_41 3EFA                      i2u501_41 2FF0  
                    i2u422_40 3F1C                      i2u510_40 314E                      i2u502_40 3006  
                    i2u422_41 3F18                      i2u510_41 314A                      i2u502_41 3002  
                    i2u423_40 3F3A                      i2u511_40 3162                      i2u503_40 3040  
                    i2u423_41 3F36                      i2u511_41 315E                      i2u503_41 303C  
                    i2u424_40 3F5C                      i2u512_40 319E                      i2u504_40 3052  
                    i2u424_41 3F58                      i2u512_41 319A                      i2u504_41 304E  
                    i2u425_40 3F7A                      i2u513_40 31B2                      i2u505_40 3098  
                    i2u425_41 3F76                      i2u513_41 31AE                      i2u505_41 3094  
          __end_of__div_to_l_ 3A6A                      i2u426_40 3FAA                      i2u514_40 31F4  
                    i2u506_40 30AA                      i2u426_41 3FA6                      i2u514_41 31F0  
                    i2u506_41 30A6                      i2u507_40 30EC                      i2u507_41 30E8  
                    _PIR2bits 000FA1                      i2u508_40 3100                      i2u508_41 30FC  
      __end_of_initialization 4798      __end_of_read_adc_voltage 4316                      i2u509_40 3114  
                    i2u509_41 3110                      i2u492_40 43D4                      i2u492_41 43D0  
                    i2u493_40 43E6                      i2u493_41 43E2                      i2u494_40 4412  
                    i2u494_41 440E                      i2u497_40 2F54                      i2u497_41 2F50  
                    i2u498_40 2F6A                      i2u498_41 2F66                      i2u499_40 2F8C  
                    i2u499_41 2F88                      _RCONbits 000FD0              __CFG_WDTPS$32768 000000  
  read_adc_raw_no_lib@channel 0024         __size_of_reloadTimer3 000C                    _ADCON0bits 000FC2  
           ___wmul@multiplier 001E                 _timer3Counter 0056                     lcd_init@i 0028  
                   lcd_putc@c 002B                     lcd_puts@s 002C            main@AI1_Percentage 013C  
                ??_lcd_gotoxy 0029                    ?_init_pwm1 0001                   _INTCON3bits 000FF0  
                   copy_data0 4514            i2___awmod@dividend 0001               _lcd_send_nibble 481C  
                _reloadTimer3 4868                      __Hrparam 0000         set_pwm1_raw@raw_value 002C  
             ?_initialization 0001                      __Lrparam 0000            __CFG_BOREN$SBORDIS 000000  
               ?i2_pwd_Timer3 0007       __size_ofi2_reloadTimer3 000C            __end_of_lcd_gotoxy 44EE  
            __size_of___fladd 0588              __size_of___fldiv 041E              __size_of___awdiv 00EC  
            __size_of___flneg 0040              __size_of___awmod 00D8              __size_of___flmul 046E  
            __size_of___flsub 004C              __size_of___fltol 0154              __size_of___lldiv 00B8  
            __size_of___llmod 009C                   _fround$1713 004D                   _fround$1714 0049  
            __size_of_highIsr 326C                    sprintf@exp 00BA                    sprintf@val 00B6  
                    ___xxtofl 352A         __size_of_set_pwm1_raw 002E              __size_of_isdigit 003A  
                    _delay_ms 472E                      __ptext10 45EE                      __ptext11 467C  
                    __ptext20 428C                      __ptext12 3A6A                      __ptext21 459E  
                    __ptext13 483E                      __ptext30 4148                      __ptext22 352A  
                    __ptext14 3FC4                      __ptext31 4546                      __ptext23 47F2  
                    __ptext15 4798                      __ptext40 4880                      __ptext32 481C  
                    __ptext24 2ADE                      __ptext16 3BD4                      __ptext41 439A  
                    __ptext33 463A                      __ptext25 4316                      __ptext17 2670  
                    __ptext42 3EEC                      __ptext34 472E                      __ptext26 3E14  
                    __ptext18 1C4C                      __ptext35 4764                      __ptext27 46F6  
                    __ptext19 4868                      __ptext36 4858                      __ptext28 441E  
                    _heaterON 015E                      __ptext37 4874                      __ptext29 448C  
                    __ptext38 47C6                      __powers_ FEDB                      _lcd_init 4148  
                    _coolerON 015D                      _lcd_putc 441E                      _lcd_puts 46F6  
            __size_of_sprintf 0ED2       set_pwm1_percent@raw_val 00A4        __size_of_lcd_send_byte 0058  
               ?_delay_cycles 0001                 __size_of_main 0D68             ??_init_adc_no_lib 001E  
              ??i2_pwd_Timer3 0009                  ??_pwd_Timer3 0026                      int$flags 0062  
   __size_of_set_pwm1_percent 00CC                  _set_pwm1_raw 4798                  ??_setupPorts 001E  
           i2___awmod@divisor 0003             i2___awmod@counter 0005                    _INTCONbits 000FF2  
                    isdigit@c 0020           _read_adc_raw_no_lib 459E             i2pwd_Timer3@limit 0007  
                    scale@scl 004D                   ??_init_pwm1 001E                      intlevel2 0000  
          __end_of_pwd_Timer3 439A                     sprintf@ap 00B0       __end_of_lcd_send_nibble 483E  
            __tdiv_to_l_@exp1 002E              __tdiv_to_l_@cntr 002D                     sprintf@sp 00A0  
              ??_delay_cycles 001E              __tdiv_to_l_@quot 0029              ___lldiv@dividend 001E  
          __end_of_setupPorts 4858          ?_read_adc_raw_no_lib 001E                 _lcd_send_byte 4546  
                ?__tdiv_to_l_ 001E                      sprintf@c 00C6                      sprintf@f 00A2  
             main@PWMPersent1 014C              ___lldiv@quotient 0026         set_pwm1_percent@value 009C  
               ___fladd@signs 0090                main@PWMPersent 014A                  main@RPS_1049 012C  
                ___fladd@aexp 0091                  ___fladd@bexp 0092         ??_read_adc_raw_no_lib 0020  
