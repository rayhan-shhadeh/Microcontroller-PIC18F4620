

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Aug 19 16:24:12 2024

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	text10,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23  0000                     
    24                           ; Version 1.45
    25                           ; Generated 16/11/2017 GMT
    26                           ; 
    27                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F4620 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     
    59                           	psect	smallconst
    60  001000                     __psmallconst:
    61                           	opt stack 0
    62  001000  00                 	db	0
    63  001001                     _dpowers:
    64                           	opt stack 0
    65  001001  0001               	dw	1
    66  001003  000A               	dw	10
    67  001005  0064               	dw	100
    68  001007  03E8               	dw	1000
    69  001009  2710               	dw	10000
    70  00100B                     __end_of_dpowers:
    71                           	opt stack 0
    72  00100B                     _hexpowers:
    73                           	opt stack 0
    74  00100B  0001               	dw	1
    75  00100D  0010               	dw	16
    76  00100F  0100               	dw	256
    77  001011  1000               	dw	4096
    78  001013                     __end_of_hexpowers:
    79                           	opt stack 0
    80  0000                     _PORTC	set	3970
    81  0000                     _PORTA	set	3968
    82  0000                     _PORTBbits	set	3969
    83  0000                     _PORTDbits	set	3971
    84  0000                     _PORTEbits	set	3972
    85  0000                     _PORTCbits	set	3970
    86  0000                     _PORTD	set	3971
    87  0000                     _INTCON2	set	4081
    88  0000                     _INTCON	set	4082
    89  0000                     _TRISC	set	3988
    90  0000                     _TRISE	set	3990
    91  0000                     _TRISD	set	3989
    92  0000                     _TRISB	set	3987
    93  0000                     _TRISA	set	3986
    94  0000                     _LATE	set	3981
    95  0000                     _LATD	set	3980
    96  0000                     _LATC	set	3979
    97  0000                     _LATB	set	3978
    98  0000                     _LATA	set	3977
    99  0000                     _ADCON1	set	4033
   100  0000                     _TXREG	set	4013
   101  0000                     _PIR1bits	set	3998
   102  0000                     _RCREG	set	4014
   103  0000                     _RCSTAbits	set	4011
   104  0000                     _RCSTA	set	4011
   105  0000                     _TXSTAbits	set	4012
   106  0000                     _SPBRGH	set	4016
   107  0000                     _SPBRG	set	4015
   108  0000                     _TXSTA	set	4012
   109  0000                     _BAUDCONbits	set	4024
   110  001013                     STR_1:
   111  001013  52                 	db	82	;'R'
   112  001014  61                 	db	97	;'a'
   113  001015  79                 	db	121	;'y'
   114  001016  68                 	db	104	;'h'
   115  001017  61                 	db	97	;'a'
   116  001018  6E                 	db	110	;'n'
   117  001019  20                 	db	32
   118  00101A  53                 	db	83	;'S'
   119  00101B  68                 	db	104	;'h'
   120  00101C  68                 	db	104	;'h'
   121  00101D  61                 	db	97	;'a'
   122  00101E  64                 	db	100	;'d'
   123  00101F  65                 	db	101	;'e'
   124  001020  68                 	db	104	;'h'
   125  001021  20                 	db	32
   126  001022  26                 	db	38
   127  001023  20                 	db	32
   128  001024  54                 	db	84	;'T'
   129  001025  61                 	db	97	;'a'
   130  001026  6C                 	db	108	;'l'
   131  001027  61                 	db	97	;'a'
   132  001028  20                 	db	32
   133  001029  5A                 	db	90	;'Z'
   134  00102A  61                 	db	97	;'a'
   135  00102B  79                 	db	121	;'y'
   136  00102C  65                 	db	101	;'e'
   137  00102D  64                 	db	100	;'d'
   138  00102E  20                 	db	32
   139  00102F  61                 	db	97	;'a'
   140  001030  73                 	db	115	;'s'
   141  001031  73                 	db	115	;'s'
   142  001032  69                 	db	105	;'i'
   143  001033  67                 	db	103	;'g'
   144  001034  6E                 	db	110	;'n'
   145  001035  6D                 	db	109	;'m'
   146  001036  65                 	db	101	;'e'
   147  001037  6E                 	db	110	;'n'
   148  001038  74                 	db	116	;'t'
   149  001039  23                 	db	35
   150  00103A  31                 	db	49	;'1'
   151  00103B  0D                 	db	13
   152  00103C  0A                 	db	10
   153  00103D  00                 	db	0
   154  00103E                     STR_3:
   155  00103E  4C                 	db	76	;'L'
   156  00103F  45                 	db	69	;'E'
   157  001040  44                 	db	68	;'D'
   158  001041  73                 	db	115	;'s'
   159  001042  20                 	db	32
   160  001043  42                 	db	66	;'B'
   161  001044  69                 	db	105	;'i'
   162  001045  6E                 	db	110	;'n'
   163  001046  3A                 	db	58	;':'
   164  001047  20                 	db	32
   165  001048  25                 	db	37
   166  001049  64                 	db	100	;'d'
   167  00104A  25                 	db	37
   168  00104B  64                 	db	100	;'d'
   169  00104C  25                 	db	37
   170  00104D  64                 	db	100	;'d'
   171  00104E  25                 	db	37
   172  00104F  64                 	db	100	;'d'
   173  001050  25                 	db	37
   174  001051  64                 	db	100	;'d'
   175  001052  25                 	db	37
   176  001053  64                 	db	100	;'d'
   177  001054  25                 	db	37
   178  001055  64                 	db	100	;'d'
   179  001056  25                 	db	37
   180  001057  64                 	db	100	;'d'
   181  001058  0D                 	db	13
   182  001059  0A                 	db	10
   183  00105A  00                 	db	0
   184  00105B                     STR_2:
   185  00105B  4C                 	db	76	;'L'
   186  00105C  45                 	db	69	;'E'
   187  00105D  44                 	db	68	;'D'
   188  00105E  73                 	db	115	;'s'
   189  00105F  20                 	db	32
   190  001060  48                 	db	72	;'H'
   191  001061  65                 	db	101	;'e'
   192  001062  78                 	db	120	;'x'
   193  001063  3A                 	db	58	;':'
   194  001064  20                 	db	32
   195  001065  30                 	db	48	;'0'
   196  001066  78                 	db	120	;'x'
   197  001067  25                 	db	37
   198  001068  30                 	db	48	;'0'
   199  001069  32                 	db	50	;'2'
   200  00106A  58                 	db	88	;'X'
   201  00106B  0D                 	db	13
   202  00106C  0A                 	db	10
   203  00106D  00                 	db	0
   204  00106E                     STR_16:
   205  00106E  30                 	db	48	;'0'
   206  00106F  31                 	db	49	;'1'
   207  001070  32                 	db	50	;'2'
   208  001071  33                 	db	51	;'3'
   209  001072  34                 	db	52	;'4'
   210  001073  35                 	db	53	;'5'
   211  001074  36                 	db	54	;'6'
   212  001075  37                 	db	55	;'7'
   213  001076  38                 	db	56	;'8'
   214  001077  39                 	db	57	;'9'
   215  001078  41                 	db	65	;'A'
   216  001079  42                 	db	66	;'B'
   217  00107A  43                 	db	67	;'C'
   218  00107B  44                 	db	68	;'D'
   219  00107C  45                 	db	69	;'E'
   220  00107D  46                 	db	70	;'F'
   221  00107E  00                 	db	0
   222  00107F                     STR_12:
   223  00107F  52                 	db	82	;'R'
   224  001080  65                 	db	101	;'e'
   225  001081  6C                 	db	108	;'l'
   226  001082  61                 	db	97	;'a'
   227  001083  79                 	db	121	;'y'
   228  001084  31                 	db	49	;'1'
   229  001085  3A                 	db	58	;':'
   230  001086  20                 	db	32
   231  001087  00                 	db	0
   232  001088                     STR_15:
   233  001088  52                 	db	82	;'R'
   234  001089  65                 	db	101	;'e'
   235  00108A  6C                 	db	108	;'l'
   236  00108B  61                 	db	97	;'a'
   237  00108C  79                 	db	121	;'y'
   238  00108D  32                 	db	50	;'2'
   239  00108E  3A                 	db	58	;':'
   240  00108F  20                 	db	32
   241  001090  00                 	db	0
   242  001091                     STR_9:
   243  001091  43                 	db	67	;'C'
   244  001092  6F                 	db	111	;'o'
   245  001093  6F                 	db	111	;'o'
   246  001094  6C                 	db	108	;'l'
   247  001095  65                 	db	101	;'e'
   248  001096  72                 	db	114	;'r'
   249  001097  3A                 	db	58	;':'
   250  001098  20                 	db	32
   251  001099  00                 	db	0
   252  00109A                     STR_6:
   253  00109A  48                 	db	72	;'H'
   254  00109B  65                 	db	101	;'e'
   255  00109C  61                 	db	97	;'a'
   256  00109D  74                 	db	116	;'t'
   257  00109E  65                 	db	101	;'e'
   258  00109F  72                 	db	114	;'r'
   259  0010A0  3A                 	db	58	;':'
   260  0010A1  20                 	db	32
   261  0010A2  00                 	db	0
   262  0010A3                     STR_5:
   263  0010A3  4F                 	db	79	;'O'
   264  0010A4  46                 	db	70	;'F'
   265  0010A5  46                 	db	70	;'F'
   266  0010A6  2E                 	db	46
   267  0010A7  0D                 	db	13
   268  0010A8  0A                 	db	10
   269  0010A9  00                 	db	0
   270  0010AA                     STR_4:
   271  0010AA  4F                 	db	79	;'O'
   272  0010AB  4E                 	db	78	;'N'
   273  0010AC  2E                 	db	46
   274  0010AD  0D                 	db	13
   275  0010AE  0A                 	db	10
   276  0010AF  00                 	db	0
   277  0000                     
   278                           ; #config settings
   279  0010B0  00                 	db	0	; dummy byte at the end
   280  0000                     
   281                           	psect	cinit
   282  001A32                     __pcinit:
   283                           	opt stack 0
   284  001A32                     start_initialization:
   285                           	opt stack 0
   286  001A32                     __initialization:
   287                           	opt stack 0
   288  001A32                     end_of_initialization:
   289                           	opt stack 0
   290  001A32                     __end_of__initialization:
   291                           	opt stack 0
   292  001A32  0E00               	movlw	low (__Lmediumconst shr (0+16))
   293  001A34  6EF8               	movwf	tblptru,c
   294  001A36  0100               	movlb	0
   295  001A38  EF59  F008         	goto	_main	;jump to C main() function
   296                           tblptru	equ	0xFF8
   297                           
   298                           	psect	cstackBANK1
   299  000100                     __pcstackBANK1:
   300                           	opt stack 0
   301  000100                     main@buffer:
   302                           	opt stack 0
   303                           
   304                           ; 200 bytes @ 0x0
   305  000100                     	ds	200
   306  0001C8                     main@x:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0xC8
   310  0001C8                     	ds	1
   311  0001C9                     main@Status:
   312                           	opt stack 0
   313                           
   314                           ; 2 bytes @ 0xC9
   315  0001C9                     	ds	2
   316                           tblptru	equ	0xFF8
   317                           
   318                           	psect	cstackCOMRAM
   319  000001                     __pcstackCOMRAM:
   320                           	opt stack 0
   321  000001                     ??_isdigit:
   322  000001                     ?___wmul:
   323                           	opt stack 0
   324  000001                     ?___lwdiv:
   325                           	opt stack 0
   326  000001                     setupSerial@dummy:
   327                           	opt stack 0
   328  000001                     read_byte_no_lib@c:
   329                           	opt stack 0
   330  000001                     send_byte_no_lib@c:
   331                           	opt stack 0
   332  000001                     delay_ms@n:
   333                           	opt stack 0
   334  000001                     ___wmul@multiplier:
   335                           	opt stack 0
   336  000001                     ___lwdiv@dividend:
   337                           	opt stack 0
   338                           
   339                           ; 2 bytes @ 0x0
   340  000001                     	ds	1
   341  000002                     _isdigit$872:
   342                           	opt stack 0
   343  000002                     send_string_no_lib@p:
   344                           	opt stack 0
   345                           
   346                           ; 2 bytes @ 0x1
   347  000002                     	ds	1
   348  000003                     isdigit@c:
   349                           	opt stack 0
   350  000003                     delay_ms@i:
   351                           	opt stack 0
   352  000003                     ___wmul@multiplicand:
   353                           	opt stack 0
   354  000003                     ___lwdiv@divisor:
   355                           	opt stack 0
   356                           
   357                           ; 2 bytes @ 0x2
   358  000003                     	ds	1
   359  000004                     
   360                           ; 1 bytes @ 0x3
   361  000004                     	ds	1
   362  000005                     ___wmul@product:
   363                           	opt stack 0
   364  000005                     ___lwdiv@quotient:
   365                           	opt stack 0
   366                           
   367                           ; 2 bytes @ 0x4
   368  000005                     	ds	2
   369  000007                     ___lwdiv@counter:
   370                           	opt stack 0
   371                           
   372                           ; 1 bytes @ 0x6
   373  000007                     	ds	1
   374  000008                     ?___lwmod:
   375                           	opt stack 0
   376  000008                     ___lwmod@dividend:
   377                           	opt stack 0
   378                           
   379                           ; 2 bytes @ 0x7
   380  000008                     	ds	2
   381  00000A                     ___lwmod@divisor:
   382                           	opt stack 0
   383                           
   384                           ; 2 bytes @ 0x9
   385  00000A                     	ds	2
   386  00000C                     ___lwmod@counter:
   387                           	opt stack 0
   388                           
   389                           ; 1 bytes @ 0xB
   390  00000C                     	ds	1
   391  00000D                     ?_sprintf:
   392                           	opt stack 0
   393  00000D                     sprintf@sp:
   394                           	opt stack 0
   395                           
   396                           ; 2 bytes @ 0xC
   397  00000D                     	ds	2
   398  00000F                     sprintf@f:
   399                           	opt stack 0
   400                           
   401                           ; 2 bytes @ 0xE
   402  00000F                     	ds	18
   403  000021                     ??_sprintf:
   404                           
   405                           ; 1 bytes @ 0x20
   406  000021                     	ds	4
   407  000025                     sprintf@idx:
   408                           	opt stack 0
   409                           
   410                           ; 1 bytes @ 0x24
   411  000025                     	ds	1
   412  000026                     sprintf@ap:
   413                           	opt stack 0
   414                           
   415                           ; 2 bytes @ 0x25
   416  000026                     	ds	2
   417  000028                     sprintf@prec:
   418                           	opt stack 0
   419                           
   420                           ; 1 bytes @ 0x27
   421  000028                     	ds	1
   422  000029                     sprintf@val:
   423                           	opt stack 0
   424                           
   425                           ; 2 bytes @ 0x28
   426  000029                     	ds	2
   427  00002B                     sprintf@flag:
   428                           	opt stack 0
   429                           
   430                           ; 1 bytes @ 0x2A
   431  00002B                     	ds	1
   432  00002C                     sprintf@width:
   433                           	opt stack 0
   434                           
   435                           ; 2 bytes @ 0x2B
   436  00002C                     	ds	2
   437  00002E                     sprintf@c:
   438                           	opt stack 0
   439                           
   440                           ; 1 bytes @ 0x2D
   441  00002E                     	ds	1
   442  00002F                     ??_main:
   443                           
   444                           ; 1 bytes @ 0x2E
   445  00002F                     	ds	1
   446                           tblptru	equ	0xFF8
   447                           
   448 ;;
   449 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   450 ;;
   451 ;; *************** function _main *****************
   452 ;; Defined at:
   453 ;;		line 143 in file "PB_Serial_main.c"
   454 ;; Parameters:    Size  Location     Type
   455 ;;		None
   456 ;; Auto vars:     Size  Location     Type
   457 ;;  Status          2  201[BANK1 ] PTR unsigned char 
   458 ;;		 -> STR_14(7), STR_13(6), STR_11(7), STR_10(6), 
   459 ;;		 -> STR_8(7), STR_7(6), STR_5(7), STR_4(6), 
   460 ;;  buffer        200    0[BANK1 ] unsigned char [200]
   461 ;;  i               2    0        int 
   462 ;;  x               1  200[BANK1 ] unsigned char 
   463 ;; Return value:  Size  Location     Type
   464 ;;                  1    wreg      void 
   465 ;; Registers used:
   466 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : 0/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   473 ;;      Locals:         0       0     203       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   474 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   475 ;;      Totals:         1       0     203       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   476 ;;Total ram usage:      204 bytes
   477 ;; Hardware stack levels required when called:    2
   478 ;; This function calls:
   479 ;;		_delay_ms
   480 ;;		_is_byte_available
   481 ;;		_read_byte_no_lib
   482 ;;		_send_string_no_lib
   483 ;;		_setupSerial
   484 ;;		_sprintf
   485 ;; This function is called by:
   486 ;;		Startup code after reset
   487 ;; This function uses a non-reentrant model
   488 ;;
   489                           
   490                           	psect	text0
   491  0010B2                     __ptext0:
   492                           	opt stack 0
   493  0010B2                     _main:
   494                           	opt stack 29
   495                           
   496                           ;PB_Serial_main.c: 144: ADCON1 = 0x0C;
   497                           
   498                           ;incstack = 0
   499  0010B2  0E0C               	movlw	12
   500  0010B4  6EC1               	movwf	4033,c	;volatile
   501                           
   502                           ;PB_Serial_main.c: 145: LATA = LATB = LATC = LATD = LATE =0;
   503  0010B6  0E00               	movlw	0
   504  0010B8  6E8D               	movwf	3981,c	;volatile
   505  0010BA  CF8D FF8C          	movff	3981,3980	;volatile
   506  0010BE  CF8C FF8B          	movff	3980,3979	;volatile
   507  0010C2  CF8B FF8A          	movff	3979,3978	;volatile
   508  0010C6  CF8A FF89          	movff	3978,3977	;volatile
   509                           
   510                           ;PB_Serial_main.c: 146: TRISA = 0xFF;
   511  0010CA  6892               	setf	3986,c	;volatile
   512                           
   513                           ;PB_Serial_main.c: 147: TRISB = 0xFF;
   514  0010CC  6893               	setf	3987,c	;volatile
   515                           
   516                           ;PB_Serial_main.c: 148: TRISD = TRISE =0;
   517  0010CE  0E00               	movlw	0
   518  0010D0  6E96               	movwf	3990,c	;volatile
   519  0010D2  CF96 FF95          	movff	3990,3989	;volatile
   520                           
   521                           ;PB_Serial_main.c: 149: TRISC = 0b10000000;
   522  0010D6  0E80               	movlw	128
   523  0010D8  6E94               	movwf	3988,c	;volatile
   524                           
   525                           ;PB_Serial_main.c: 150: INTCON = 0;
   526  0010DA  0E00               	movlw	0
   527  0010DC  6EF2               	movwf	intcon,c	;volatile
   528                           
   529                           ;PB_Serial_main.c: 151: INTCON2 =0 ;
   530  0010DE  0E00               	movlw	0
   531  0010E0  6EF1               	movwf	intcon2,c	;volatile
   532                           
   533                           ;PB_Serial_main.c: 152: setupSerial();
   534  0010E2  ECE4  F00C         	call	_setupSerial	;wreg free
   535                           
   536                           ;PB_Serial_main.c: 154: int i;
   537                           ;PB_Serial_main.c: 156: send_string_no_lib((unsigned char *)"Rayhan Shhadeh & Tala Zayed
      +                           assignment#1\r\n");
   538  0010E6  0E13               	movlw	low STR_1
   539  0010E8  6E02               	movwf	send_string_no_lib@p,c
   540  0010EA  0E10               	movlw	high STR_1
   541  0010EC  6E03               	movwf	send_string_no_lib@p+1,c
   542  0010EE  EC49  F00C         	call	_send_string_no_lib	;wreg free
   543  0010F2                     l104:
   544  0010F2  0004               	clrwdt		;# 
   545                           
   546                           ;PB_Serial_main.c: 164: if(is_byte_available()){
   547  0010F4  EC05  F00D         	call	_is_byte_available	;wreg free
   548  0010F8  0900               	iorlw	0
   549  0010FA  B4D8               	btfsc	status,2,c
   550  0010FC  D161               	goto	l108
   551                           
   552                           ;PB_Serial_main.c: 165: x = read_byte_no_lib();
   553  0010FE  EC1E  F00D         	call	_read_byte_no_lib	;wreg free
   554  001102  0101               	movlb	1	; () banked
   555  001104  6FC8               	movwf	main@x& (0+255),b
   556                           
   557                           ;PB_Serial_main.c: 166: switch(x){
   558  001106  D13A               	goto	l106
   559  001108                     
   560                           ; BSR set to: 1
   561                           ;PB_Serial_main.c: 169: sprintf(buffer, "LEDs Hex: 0x%02X\r\n", PORTD);
   562                           
   563                           ; BSR set to: 1
   564  001108  0E00               	movlw	low main@buffer
   565  00110A  6E0D               	movwf	sprintf@sp,c
   566  00110C  0E01               	movlw	high main@buffer
   567  00110E  6E0E               	movwf	sprintf@sp+1,c
   568  001110  0E5B               	movlw	low STR_2
   569  001112  6E0F               	movwf	sprintf@f,c
   570  001114  0E10               	movlw	high STR_2
   571  001116  6E10               	movwf	sprintf@f+1,c
   572  001118  CF83 F011          	movff	3971,?_sprintf+4	;volatile
   573  00111C  6A12               	clrf	?_sprintf+5,c
   574  00111E  EC9C  F00A         	call	_sprintf	;wreg free
   575                           
   576                           ;PB_Serial_main.c: 170: send_string_no_lib(buffer);
   577  001122  0E00               	movlw	low main@buffer
   578  001124  6E02               	movwf	send_string_no_lib@p,c
   579  001126  0E01               	movlw	high main@buffer
   580  001128  6E03               	movwf	send_string_no_lib@p+1,c
   581  00112A  EC49  F00C         	call	_send_string_no_lib	;wreg free
   582                           
   583                           ;PB_Serial_main.c: 171: sprintf(buffer, "LEDs Bin: %d%d%d%d%d%d%d%d\r\n",
   584                           ;PB_Serial_main.c: 172: (PORTD & 0x80) ? 1 : 0,
   585                           ;PB_Serial_main.c: 173: (PORTD & 0x40) ? 1 : 0,
   586                           ;PB_Serial_main.c: 174: (PORTD & 0x20) ? 1 : 0,
   587                           ;PB_Serial_main.c: 175: (PORTD & 0x10) ? 1 : 0,
   588                           ;PB_Serial_main.c: 176: (PORTD & 0x08) ? 1 : 0,
   589                           ;PB_Serial_main.c: 177: (PORTD & 0x04) ? 1 : 0,
   590                           ;PB_Serial_main.c: 178: (PORTD & 0x02) ? 1 : 0,
   591                           ;PB_Serial_main.c: 179: (PORTD & 0x01) ? 1 : 0);
   592  00112E  0E00               	movlw	low main@buffer
   593  001130  6E0D               	movwf	sprintf@sp,c
   594  001132  0E01               	movlw	high main@buffer
   595  001134  6E0E               	movwf	sprintf@sp+1,c
   596  001136  0E3E               	movlw	low STR_3
   597  001138  6E0F               	movwf	sprintf@f,c
   598  00113A  0E10               	movlw	high STR_3
   599  00113C  6E10               	movwf	sprintf@f+1,c
   600  00113E  AE83               	btfss	3971,7,c	;volatile
   601  001140  D002               	goto	u1430
   602  001142  0E01               	movlw	1
   603  001144  D001               	goto	u1440
   604  001146                     u1430:
   605  001146  0E00               	movlw	0
   606  001148                     u1440:
   607  001148  6E11               	movwf	?_sprintf+4,c
   608  00114A  6A12               	clrf	?_sprintf+5,c
   609  00114C  AC83               	btfss	3971,6,c	;volatile
   610  00114E  D002               	goto	u1450
   611  001150  0E01               	movlw	1
   612  001152  D001               	goto	u1460
   613  001154                     u1450:
   614  001154  0E00               	movlw	0
   615  001156                     u1460:
   616  001156  6E13               	movwf	?_sprintf+6,c
   617  001158  6A14               	clrf	?_sprintf+7,c
   618  00115A  AA83               	btfss	3971,5,c	;volatile
   619  00115C  D002               	goto	u1470
   620  00115E  0E01               	movlw	1
   621  001160  D001               	goto	u1480
   622  001162                     u1470:
   623  001162  0E00               	movlw	0
   624  001164                     u1480:
   625  001164  6E15               	movwf	?_sprintf+8,c
   626  001166  6A16               	clrf	?_sprintf+9,c
   627  001168  A883               	btfss	3971,4,c	;volatile
   628  00116A  D002               	goto	u1490
   629  00116C  0E01               	movlw	1
   630  00116E  D001               	goto	u1500
   631  001170                     u1490:
   632  001170  0E00               	movlw	0
   633  001172                     u1500:
   634  001172  6E17               	movwf	?_sprintf+10,c
   635  001174  6A18               	clrf	?_sprintf+11,c
   636  001176  A683               	btfss	3971,3,c	;volatile
   637  001178  D002               	goto	u1510
   638  00117A  0E01               	movlw	1
   639  00117C  D001               	goto	u1520
   640  00117E                     u1510:
   641  00117E  0E00               	movlw	0
   642  001180                     u1520:
   643  001180  6E19               	movwf	?_sprintf+12,c
   644  001182  6A1A               	clrf	?_sprintf+13,c
   645  001184  A483               	btfss	3971,2,c	;volatile
   646  001186  D002               	goto	u1530
   647  001188  0E01               	movlw	1
   648  00118A  D001               	goto	u1540
   649  00118C                     u1530:
   650  00118C  0E00               	movlw	0
   651  00118E                     u1540:
   652  00118E  6E1B               	movwf	?_sprintf+14,c
   653  001190  6A1C               	clrf	?_sprintf+15,c
   654  001192  A283               	btfss	3971,1,c	;volatile
   655  001194  D002               	goto	u1550
   656  001196  0E01               	movlw	1
   657  001198  D001               	goto	u1560
   658  00119A                     u1550:
   659  00119A  0E00               	movlw	0
   660  00119C                     u1560:
   661  00119C  6E1D               	movwf	?_sprintf+16,c
   662  00119E  6A1E               	clrf	?_sprintf+17,c
   663  0011A0  A083               	btfss	3971,0,c	;volatile
   664  0011A2  D002               	goto	u1570
   665  0011A4  0E01               	movlw	1
   666  0011A6  D001               	goto	u1580
   667  0011A8                     u1570:
   668  0011A8  0E00               	movlw	0
   669  0011AA                     u1580:
   670  0011AA  6E1F               	movwf	?_sprintf+18,c
   671  0011AC  6A20               	clrf	?_sprintf+19,c
   672  0011AE  EC9C  F00A         	call	_sprintf	;wreg free
   673                           
   674                           ;PB_Serial_main.c: 180: send_string_no_lib(buffer);
   675  0011B2  0E00               	movlw	low main@buffer
   676  0011B4  6E02               	movwf	send_string_no_lib@p,c
   677  0011B6  0E01               	movlw	high main@buffer
   678  0011B8  6E03               	movwf	send_string_no_lib@p+1,c
   679  0011BA  EC49  F00C         	call	_send_string_no_lib	;wreg free
   680                           
   681                           ;PB_Serial_main.c: 181: break;
   682  0011BE  D100               	goto	l108
   683  0011C0                     l109:
   684                           
   685                           ; BSR set to: 1
   686                           ;PB_Serial_main.c: 185: if(PORTCbits.RC5)
   687  0011C0  AA82               	btfss	3970,5,c	;volatile
   688  0011C2  D004               	goto	l110
   689                           
   690                           ; BSR set to: 1
   691                           ;PB_Serial_main.c: 186: Status="ON.\r\n";
   692  0011C4  0EAA               	movlw	low STR_4
   693  0011C6  6FC9               	movwf	main@Status& (0+255),b
   694  0011C8  0E10               	movlw	high STR_4
   695  0011CA  D003               	goto	L1
   696  0011CC                     l110:
   697                           
   698                           ; BSR set to: 1
   699                           ;PB_Serial_main.c: 187: else
   700                           ;PB_Serial_main.c: 188: Status="OFF.\r\n";
   701                           
   702                           ; BSR set to: 1
   703  0011CC  0EA3               	movlw	low STR_5
   704  0011CE  6FC9               	movwf	main@Status& (0+255),b
   705  0011D0  0E10               	movlw	high STR_5
   706  0011D2                     L1:
   707  0011D2  6FCA               	movwf	(main@Status+1)& (0+255),b
   708                           
   709                           ; BSR set to: 1
   710                           ;PB_Serial_main.c: 189: send_string_no_lib((unsigned char *)"Heater: ");
   711                           
   712                           ; BSR set to: 1
   713  0011D4  0E9A               	movlw	low STR_6
   714  0011D6  6E02               	movwf	send_string_no_lib@p,c
   715  0011D8  0E10               	movlw	high STR_6
   716  0011DA  6E03               	movwf	send_string_no_lib@p+1,c
   717  0011DC  EC49  F00C         	call	_send_string_no_lib	;wreg free
   718                           
   719                           ;PB_Serial_main.c: 190: send_string_no_lib(Status);
   720  0011E0  C1C9  F002         	movff	main@Status,send_string_no_lib@p
   721  0011E4  C1CA  F003         	movff	main@Status+1,send_string_no_lib@p+1
   722  0011E8  EC49  F00C         	call	_send_string_no_lib	;wreg free
   723                           
   724                           ;PB_Serial_main.c: 192: if(PORTCbits.RC2)
   725  0011EC  A482               	btfss	3970,2,c	;volatile
   726  0011EE  D005               	goto	l112
   727                           
   728                           ;PB_Serial_main.c: 193: Status="ON.\r\n";
   729  0011F0  0EAA               	movlw	low STR_4
   730  0011F2  0101               	movlb	1	; () banked
   731  0011F4  6FC9               	movwf	main@Status& (0+255),b
   732  0011F6  0E10               	movlw	high STR_4
   733  0011F8  D004               	goto	L2
   734  0011FA                     l112:
   735                           
   736                           ;PB_Serial_main.c: 194: else
   737                           ;PB_Serial_main.c: 195: Status="OFF.\r\n";
   738                           
   739                           ; BSR set to: 1
   740  0011FA  0EA3               	movlw	low STR_5
   741  0011FC  0101               	movlb	1	; () banked
   742  0011FE  6FC9               	movwf	main@Status& (0+255),b
   743  001200  0E10               	movlw	high STR_5
   744  001202                     L2:
   745  001202  6FCA               	movwf	(main@Status+1)& (0+255),b
   746                           
   747                           ; BSR set to: 1
   748                           ;PB_Serial_main.c: 196: send_string_no_lib((unsigned char *)"Cooler: ");
   749                           
   750                           ; BSR set to: 1
   751  001204  0E91               	movlw	low STR_9
   752  001206  6E02               	movwf	send_string_no_lib@p,c
   753  001208  0E10               	movlw	high STR_9
   754  00120A  6E03               	movwf	send_string_no_lib@p+1,c
   755  00120C  EC49  F00C         	call	_send_string_no_lib	;wreg free
   756                           
   757                           ;PB_Serial_main.c: 197: send_string_no_lib(Status);
   758  001210  C1C9  F002         	movff	main@Status,send_string_no_lib@p
   759  001214  C1CA  F003         	movff	main@Status+1,send_string_no_lib@p+1
   760  001218  EC49  F00C         	call	_send_string_no_lib	;wreg free
   761                           
   762                           ;PB_Serial_main.c: 199: if(PORTCbits.RC0)
   763  00121C  A082               	btfss	3970,0,c	;volatile
   764  00121E  D005               	goto	l114
   765                           
   766                           ;PB_Serial_main.c: 200: Status="ON.\r\n";
   767  001220  0EAA               	movlw	low STR_4
   768  001222  0101               	movlb	1	; () banked
   769  001224  6FC9               	movwf	main@Status& (0+255),b
   770  001226  0E10               	movlw	high STR_4
   771  001228  D004               	goto	L3
   772  00122A                     l114:
   773                           
   774                           ;PB_Serial_main.c: 201: else
   775                           ;PB_Serial_main.c: 202: Status="OFF.\r\n";
   776                           
   777                           ; BSR set to: 1
   778  00122A  0EA3               	movlw	low STR_5
   779  00122C  0101               	movlb	1	; () banked
   780  00122E  6FC9               	movwf	main@Status& (0+255),b
   781  001230  0E10               	movlw	high STR_5
   782  001232                     L3:
   783  001232  6FCA               	movwf	(main@Status+1)& (0+255),b
   784                           
   785                           ; BSR set to: 1
   786                           ;PB_Serial_main.c: 203: send_string_no_lib((unsigned char *)"Relay1: ");
   787                           
   788                           ; BSR set to: 1
   789  001234  0E7F               	movlw	low STR_12
   790  001236  6E02               	movwf	send_string_no_lib@p,c
   791  001238  0E10               	movlw	high STR_12
   792  00123A  6E03               	movwf	send_string_no_lib@p+1,c
   793  00123C  EC49  F00C         	call	_send_string_no_lib	;wreg free
   794                           
   795                           ;PB_Serial_main.c: 204: send_string_no_lib(Status);
   796  001240  C1C9  F002         	movff	main@Status,send_string_no_lib@p
   797  001244  C1CA  F003         	movff	main@Status+1,send_string_no_lib@p+1
   798  001248  EC49  F00C         	call	_send_string_no_lib	;wreg free
   799                           
   800                           ;PB_Serial_main.c: 206: if(PORTEbits.RE0)
   801  00124C  A084               	btfss	3972,0,c	;volatile
   802  00124E  D005               	goto	l116
   803                           
   804                           ;PB_Serial_main.c: 207: Status="ON.\r\n";
   805  001250  0EAA               	movlw	low STR_4
   806  001252  0101               	movlb	1	; () banked
   807  001254  6FC9               	movwf	main@Status& (0+255),b
   808  001256  0E10               	movlw	high STR_4
   809  001258  D004               	goto	L4
   810  00125A                     l116:
   811                           
   812                           ;PB_Serial_main.c: 208: else
   813                           ;PB_Serial_main.c: 209: Status="OFF.\r\n";
   814                           
   815                           ; BSR set to: 1
   816  00125A  0EA3               	movlw	low STR_5
   817  00125C  0101               	movlb	1	; () banked
   818  00125E  6FC9               	movwf	main@Status& (0+255),b
   819  001260  0E10               	movlw	high STR_5
   820  001262                     L4:
   821  001262  6FCA               	movwf	(main@Status+1)& (0+255),b
   822                           
   823                           ; BSR set to: 1
   824                           ;PB_Serial_main.c: 210: send_string_no_lib((unsigned char *)"Relay2: ");
   825                           
   826                           ; BSR set to: 1
   827  001264  0E88               	movlw	low STR_15
   828  001266  6E02               	movwf	send_string_no_lib@p,c
   829  001268  0E10               	movlw	high STR_15
   830  00126A  6E03               	movwf	send_string_no_lib@p+1,c
   831  00126C  EC49  F00C         	call	_send_string_no_lib	;wreg free
   832                           
   833                           ;PB_Serial_main.c: 211: send_string_no_lib(Status);
   834  001270  C1C9  F002         	movff	main@Status,send_string_no_lib@p
   835  001274  C1CA  F003         	movff	main@Status+1,send_string_no_lib@p+1
   836  001278  EC49  F00C         	call	_send_string_no_lib	;wreg free
   837                           
   838                           ;PB_Serial_main.c: 212: break;
   839  00127C  D0A1               	goto	l108
   840  00127E                     l118:
   841                           
   842                           ; BSR set to: 1
   843                           ;PB_Serial_main.c: 214: PORTCbits.RC5 = 0 ;
   844  00127E  9A82               	bcf	3970,5,c	;volatile
   845                           
   846                           ;PB_Serial_main.c: 215: PORTCbits.RC2 = 1;
   847  001280  8482               	bsf	3970,2,c	;volatile
   848                           
   849                           ;PB_Serial_main.c: 216: break;
   850  001282  D09E               	goto	l108
   851  001284                     l119:
   852                           
   853                           ; BSR set to: 1
   854                           ;PB_Serial_main.c: 219: PORTCbits.RC5 = 1 ;
   855  001284  8A82               	bsf	3970,5,c	;volatile
   856                           
   857                           ;PB_Serial_main.c: 220: PORTCbits.RC2 = 0;
   858  001286  9482               	bcf	3970,2,c	;volatile
   859                           
   860                           ;PB_Serial_main.c: 221: break;
   861  001288  D09B               	goto	l108
   862  00128A                     l120:
   863                           
   864                           ; BSR set to: 1
   865                           ;PB_Serial_main.c: 224: PORTCbits.RC0 = 0 ;
   866  00128A  9082               	bcf	3970,0,c	;volatile
   867                           
   868                           ;PB_Serial_main.c: 225: break;
   869  00128C  D099               	goto	l108
   870  00128E                     l121:
   871                           
   872                           ; BSR set to: 1
   873                           ;PB_Serial_main.c: 228: PORTCbits.RC0 = 1;
   874  00128E  8082               	bsf	3970,0,c	;volatile
   875                           
   876                           ;PB_Serial_main.c: 229: break;
   877  001290  D097               	goto	l108
   878  001292                     l123:
   879                           
   880                           ; BSR set to: 1
   881                           ;PB_Serial_main.c: 236: PORTEbits.RE0 = 1;
   882  001292  8084               	bsf	3972,0,c	;volatile
   883                           
   884                           ;PB_Serial_main.c: 237: break;
   885  001294  D095               	goto	l108
   886  001296                     
   887                           ; BSR set to: 1
   888                           ;PB_Serial_main.c: 240: PORTDbits.RD0 = !PORTDbits.RD0;
   889                           
   890                           ; BSR set to: 1
   891  001296  B083               	btfsc	3971,0,c	;volatile
   892  001298  D003               	goto	u1630
   893  00129A  6A2F               	clrf	??_main& (0+255),c
   894  00129C  2A2F               	incf	??_main& (0+255),f,c
   895  00129E  D001               	goto	u1648
   896  0012A0                     u1630:
   897  0012A0  6A2F               	clrf	??_main& (0+255),c
   898  0012A2                     u1648:
   899  0012A2  5083               	movf	3971,w,c	;volatile
   900  0012A4  182F               	xorwf	??_main,w,c
   901  0012A6  0BFE               	andlw	-2
   902  0012A8  182F               	xorwf	??_main,w,c
   903  0012AA  6E83               	movwf	3971,c	;volatile
   904                           
   905                           ;PB_Serial_main.c: 241: PORTDbits.RD1 = !PORTDbits.RD1;
   906  0012AC  B283               	btfsc	3971,1,c	;volatile
   907  0012AE  D003               	goto	u1650
   908  0012B0  6A2F               	clrf	??_main& (0+255),c
   909  0012B2  2A2F               	incf	??_main& (0+255),f,c
   910  0012B4  D001               	goto	u1668
   911  0012B6                     u1650:
   912  0012B6  6A2F               	clrf	??_main& (0+255),c
   913  0012B8                     u1668:
   914  0012B8  462F               	rlncf	??_main,f,c
   915  0012BA  5083               	movf	3971,w,c	;volatile
   916  0012BC  182F               	xorwf	??_main,w,c
   917  0012BE  0BFD               	andlw	-3
   918  0012C0  182F               	xorwf	??_main,w,c
   919  0012C2  6E83               	movwf	3971,c	;volatile
   920                           
   921                           ;PB_Serial_main.c: 242: PORTDbits.RD6 = !PORTDbits.RD6;
   922  0012C4  BC83               	btfsc	3971,6,c	;volatile
   923  0012C6  D003               	goto	u1670
   924  0012C8  6A2F               	clrf	??_main& (0+255),c
   925  0012CA  2A2F               	incf	??_main& (0+255),f,c
   926  0012CC  D001               	goto	u1688
   927  0012CE                     u1670:
   928  0012CE  6A2F               	clrf	??_main& (0+255),c
   929  0012D0                     u1688:
   930  0012D0  3A2F               	swapf	??_main,f,c
   931  0012D2  462F               	rlncf	??_main,f,c
   932  0012D4  462F               	rlncf	??_main,f,c
   933  0012D6  5083               	movf	3971,w,c	;volatile
   934  0012D8  182F               	xorwf	??_main,w,c
   935  0012DA  0BBF               	andlw	-65
   936  0012DC  182F               	xorwf	??_main,w,c
   937  0012DE  6E83               	movwf	3971,c	;volatile
   938                           
   939                           ;PB_Serial_main.c: 243: PORTDbits.RD7 = !PORTDbits.RD7;
   940  0012E0  BE83               	btfsc	3971,7,c	;volatile
   941  0012E2  D003               	goto	u1690
   942  0012E4  6A2F               	clrf	??_main& (0+255),c
   943  0012E6  2A2F               	incf	??_main& (0+255),f,c
   944  0012E8  D001               	goto	u1708
   945  0012EA                     u1690:
   946  0012EA  6A2F               	clrf	??_main& (0+255),c
   947  0012EC                     u1708:
   948  0012EC  322F               	rrcf	??_main,f,c
   949  0012EE  322F               	rrcf	??_main,f,c
   950  0012F0  5083               	movf	3971,w,c	;volatile
   951  0012F2  182F               	xorwf	??_main,w,c
   952  0012F4  0B7F               	andlw	-129
   953  0012F6  D032               	goto	L6
   954  0012F8                     
   955                           ;PB_Serial_main.c: 247: PORTDbits.RD2 = !PORTDbits.RD2;
   956  0012F8  B483               	btfsc	3971,2,c	;volatile
   957  0012FA  D003               	goto	u1710
   958  0012FC  6A2F               	clrf	??_main& (0+255),c
   959  0012FE  2A2F               	incf	??_main& (0+255),f,c
   960  001300  D001               	goto	u1728
   961  001302                     u1710:
   962  001302  6A2F               	clrf	??_main& (0+255),c
   963  001304                     u1728:
   964  001304  462F               	rlncf	??_main,f,c
   965  001306  462F               	rlncf	??_main,f,c
   966  001308  5083               	movf	3971,w,c	;volatile
   967  00130A  182F               	xorwf	??_main,w,c
   968  00130C  0BFB               	andlw	-5
   969  00130E  182F               	xorwf	??_main,w,c
   970  001310  6E83               	movwf	3971,c	;volatile
   971                           
   972                           ;PB_Serial_main.c: 248: PORTDbits.RD3 = !PORTDbits.RD3;
   973  001312  B683               	btfsc	3971,3,c	;volatile
   974  001314  D003               	goto	u1730
   975  001316  6A2F               	clrf	??_main& (0+255),c
   976  001318  2A2F               	incf	??_main& (0+255),f,c
   977  00131A  D001               	goto	u1748
   978  00131C                     u1730:
   979  00131C  6A2F               	clrf	??_main& (0+255),c
   980  00131E                     u1748:
   981  00131E  462F               	rlncf	??_main,f,c
   982  001320  462F               	rlncf	??_main,f,c
   983  001322  462F               	rlncf	??_main,f,c
   984  001324  5083               	movf	3971,w,c	;volatile
   985  001326  182F               	xorwf	??_main,w,c
   986  001328  0BF7               	andlw	-9
   987  00132A  182F               	xorwf	??_main,w,c
   988  00132C  6E83               	movwf	3971,c	;volatile
   989                           
   990                           ;PB_Serial_main.c: 249: PORTDbits.RD4 = !PORTDbits.RD4;
   991  00132E  B883               	btfsc	3971,4,c	;volatile
   992  001330  D003               	goto	u1750
   993  001332  6A2F               	clrf	??_main& (0+255),c
   994  001334  2A2F               	incf	??_main& (0+255),f,c
   995  001336  D001               	goto	u1768
   996  001338                     u1750:
   997  001338  6A2F               	clrf	??_main& (0+255),c
   998  00133A                     u1768:
   999  00133A  3A2F               	swapf	??_main,f,c
  1000  00133C  5083               	movf	3971,w,c	;volatile
  1001  00133E  182F               	xorwf	??_main,w,c
  1002  001340  0BEF               	andlw	-17
  1003  001342  182F               	xorwf	??_main,w,c
  1004  001344  6E83               	movwf	3971,c	;volatile
  1005                           
  1006                           ;PB_Serial_main.c: 250: PORTDbits.RD5 = !PORTDbits.RD5;
  1007  001346  BA83               	btfsc	3971,5,c	;volatile
  1008  001348  D003               	goto	u1770
  1009  00134A  6A2F               	clrf	??_main& (0+255),c
  1010  00134C  2A2F               	incf	??_main& (0+255),f,c
  1011  00134E  D001               	goto	u1788
  1012  001350                     u1770:
  1013  001350  6A2F               	clrf	??_main& (0+255),c
  1014  001352                     u1788:
  1015  001352  3A2F               	swapf	??_main,f,c
  1016  001354  462F               	rlncf	??_main,f,c
  1017  001356  5083               	movf	3971,w,c	;volatile
  1018  001358  182F               	xorwf	??_main,w,c
  1019  00135A  0BDF               	andlw	-33
  1020  00135C                     L6:
  1021  00135C  182F               	xorwf	??_main,w,c
  1022  00135E  6E83               	movwf	3971,c	;volatile
  1023                           
  1024                           ;PB_Serial_main.c: 251: break;
  1025  001360  D02F               	goto	l108
  1026  001362                     l126:
  1027                           
  1028                           ; BSR set to: 1
  1029                           ;PB_Serial_main.c: 254: PORTDbits.RD0 = 0;
  1030  001362  9083               	bcf	3971,0,c	;volatile
  1031                           
  1032                           ;PB_Serial_main.c: 255: PORTDbits.RD1 = 0;
  1033  001364  9283               	bcf	3971,1,c	;volatile
  1034                           
  1035                           ;PB_Serial_main.c: 256: PORTDbits.RD2 = 0;
  1036  001366  9483               	bcf	3971,2,c	;volatile
  1037                           
  1038                           ;PB_Serial_main.c: 257: PORTDbits.RD3 = 0;
  1039  001368  9683               	bcf	3971,3,c	;volatile
  1040                           
  1041                           ;PB_Serial_main.c: 258: PORTDbits.RD4 = 0;
  1042  00136A  9883               	bcf	3971,4,c	;volatile
  1043                           
  1044                           ;PB_Serial_main.c: 259: PORTDbits.RD5 = 0;
  1045  00136C  9A83               	bcf	3971,5,c	;volatile
  1046                           
  1047                           ;PB_Serial_main.c: 260: PORTDbits.RD6 = 0;
  1048  00136E  9C83               	bcf	3971,6,c	;volatile
  1049                           
  1050                           ;PB_Serial_main.c: 261: PORTDbits.RD7 = 0;
  1051  001370  9E83               	bcf	3971,7,c	;volatile
  1052                           
  1053                           ;PB_Serial_main.c: 263: PORTCbits.RC5 = 0 ;
  1054  001372  9A82               	bcf	3970,5,c	;volatile
  1055                           
  1056                           ;PB_Serial_main.c: 264: PORTCbits.RC2 = 0;
  1057  001374  9482               	bcf	3970,2,c	;volatile
  1058                           
  1059                           ;PB_Serial_main.c: 266: PORTCbits.RC0 = 0;
  1060  001376  9082               	bcf	3970,0,c	;volatile
  1061  001378                     
  1062                           ;PB_Serial_main.c: 267: PORTEbits.RE0 = 0;
  1063  001378  9084               	bcf	3972,0,c	;volatile
  1064                           
  1065                           ; BSR set to: 1
  1066                           ;PB_Serial_main.c: 271: }
  1067                           
  1068                           ; BSR set to: 1
  1069                           ;PB_Serial_main.c: 270: break;
  1070                           
  1071                           ;PB_Serial_main.c: 269: default:
  1072                           
  1073                           ;PB_Serial_main.c: 268: break;
  1074  00137A  D022               	goto	l108
  1075  00137C                     l106:
  1076                           
  1077                           ; BSR set to: 1
  1078                           
  1079                           ; BSR set to: 1
  1080  00137C  51C8               	movf	main@x& (0+255),w,b
  1081                           
  1082                           ; Switch size 1, requested type "space"
  1083                           ; Number of cases is 11, Range of values is 67 to 122
  1084                           ; switch strategies available:
  1085                           ; Name         Instructions Cycles
  1086                           ; simple_byte           34    18 (average)
  1087                           ;	Chosen strategy is simple_byte
  1088  00137E  0A43               	xorlw	67	; case 67
  1089  001380  B4D8               	btfsc	status,2,c
  1090  001382  D785               	goto	l121
  1091  001384  0A07               	xorlw	7	; case 68
  1092  001386  B4D8               	btfsc	status,2,c
  1093  001388  D7B7               	goto	l125
  1094  00138A  0A03               	xorlw	3	; case 71
  1095  00138C  B4D8               	btfsc	status,2,c
  1096  00138E  D718               	goto	l109
  1097  001390  0A0F               	xorlw	15	; case 72
  1098  001392  B4D8               	btfsc	status,2,c
  1099  001394  D777               	goto	l119
  1100  001396  0A1A               	xorlw	26	; case 82
  1101  001398  B4D8               	btfsc	status,2,c
  1102  00139A  D77B               	goto	l123
  1103  00139C  0A31               	xorlw	49	; case 99
  1104  00139E  B4D8               	btfsc	status,2,c
  1105  0013A0  D774               	goto	l120
  1106  0013A2  0A07               	xorlw	7	; case 100
  1107  0013A4  B4D8               	btfsc	status,2,c
  1108  0013A6  D777               	goto	l124
  1109  0013A8  0A03               	xorlw	3	; case 103
  1110  0013AA  B4D8               	btfsc	status,2,c
  1111  0013AC  D6AD               	goto	l107
  1112  0013AE  0A0F               	xorlw	15	; case 104
  1113  0013B0  B4D8               	btfsc	status,2,c
  1114  0013B2  D765               	goto	l118
  1115  0013B4  0A1A               	xorlw	26	; case 114
  1116  0013B6  B4D8               	btfsc	status,2,c
  1117  0013B8  D7DF               	goto	L5
  1118  0013BA  0A08               	xorlw	8	; case 122
  1119  0013BC  B4D8               	btfsc	status,2,c
  1120  0013BE  D7D1               	goto	l126
  1121  0013C0                     l108:
  1122                           
  1123                           ;PB_Serial_main.c: 272: }
  1124                           ;PB_Serial_main.c: 277: if(!PORTBbits.RB0){
  1125                           
  1126                           ; BSR set to: 1
  1127  0013C0  B081               	btfsc	3969,0,c	;volatile
  1128  0013C2  D00D               	goto	l128
  1129                           
  1130                           ;PB_Serial_main.c: 279: PORTA=PORTC=PORTD= 0 ;
  1131  0013C4  0E00               	movlw	0
  1132  0013C6  6E83               	movwf	3971,c	;volatile
  1133  0013C8  CF83 FF82          	movff	3971,3970	;volatile
  1134  0013CC  CF82 FF80          	movff	3970,3968	;volatile
  1135                           
  1136                           ;PB_Serial_main.c: 281: delay_ms(250);
  1137  0013D0  0E00               	movlw	0
  1138  0013D2  6E02               	movwf	delay_ms@n+1,c
  1139  0013D4  0EFA               	movlw	250
  1140  0013D6  6E01               	movwf	delay_ms@n,c
  1141  0013D8  ECD1  F00C         	call	_delay_ms	;wreg free
  1142                           
  1143                           ;PB_Serial_main.c: 282: }
  1144  0013DC  D68A               	goto	l104
  1145  0013DE                     l128:
  1146                           
  1147                           ;PB_Serial_main.c: 284: else if(!PORTBbits.RB1){
  1148  0013DE  B281               	btfsc	3969,1,c	;volatile
  1149  0013E0  D009               	goto	l130
  1150                           
  1151                           ;PB_Serial_main.c: 286: PORTCbits.RC5 = 0 ;
  1152  0013E2  9A82               	bcf	3970,5,c	;volatile
  1153                           
  1154                           ;PB_Serial_main.c: 287: PORTCbits.RC2 = 1;
  1155  0013E4  8482               	bsf	3970,2,c	;volatile
  1156                           
  1157                           ;PB_Serial_main.c: 289: delay_ms(250);
  1158  0013E6  0E00               	movlw	0
  1159  0013E8  6E02               	movwf	delay_ms@n+1,c
  1160  0013EA  0EFA               	movlw	250
  1161  0013EC  6E01               	movwf	delay_ms@n,c
  1162  0013EE  ECD1  F00C         	call	_delay_ms	;wreg free
  1163                           
  1164                           ;PB_Serial_main.c: 290: }
  1165  0013F2  D67F               	goto	l104
  1166  0013F4                     l130:
  1167                           
  1168                           ;PB_Serial_main.c: 292: else if(!PORTBbits.RB2){
  1169  0013F4  B481               	btfsc	3969,2,c	;volatile
  1170  0013F6  D009               	goto	l132
  1171                           
  1172                           ;PB_Serial_main.c: 294: PORTCbits.RC5 = 1 ;
  1173  0013F8  8A82               	bsf	3970,5,c	;volatile
  1174                           
  1175                           ;PB_Serial_main.c: 295: PORTCbits.RC2 = 0;
  1176  0013FA  9482               	bcf	3970,2,c	;volatile
  1177                           
  1178                           ;PB_Serial_main.c: 297: delay_ms(250);
  1179  0013FC  0E00               	movlw	0
  1180  0013FE  6E02               	movwf	delay_ms@n+1,c
  1181  001400  0EFA               	movlw	250
  1182  001402  6E01               	movwf	delay_ms@n,c
  1183  001404  ECD1  F00C         	call	_delay_ms	;wreg free
  1184                           
  1185                           ;PB_Serial_main.c: 298: }
  1186  001408  D674               	goto	l104
  1187  00140A                     l132:
  1188                           
  1189                           ;PB_Serial_main.c: 300: else if(!PORTBbits.RB3){
  1190  00140A  B681               	btfsc	3969,3,c	;volatile
  1191  00140C  D039               	goto	l134
  1192                           
  1193                           ;PB_Serial_main.c: 302: PORTDbits.RD0 = !PORTDbits.RD0 ;
  1194  00140E  B083               	btfsc	3971,0,c	;volatile
  1195  001410  D003               	goto	u1830
  1196  001412  6A2F               	clrf	??_main& (0+255),c
  1197  001414  2A2F               	incf	??_main& (0+255),f,c
  1198  001416  D001               	goto	u1848
  1199  001418                     u1830:
  1200  001418  6A2F               	clrf	??_main& (0+255),c
  1201  00141A                     u1848:
  1202  00141A  5083               	movf	3971,w,c	;volatile
  1203  00141C  182F               	xorwf	??_main,w,c
  1204  00141E  0BFE               	andlw	-2
  1205  001420  182F               	xorwf	??_main,w,c
  1206  001422  6E83               	movwf	3971,c	;volatile
  1207                           
  1208                           ;PB_Serial_main.c: 303: PORTDbits.RD1 = !PORTDbits.RD1 ;
  1209  001424  B283               	btfsc	3971,1,c	;volatile
  1210  001426  D003               	goto	u1850
  1211  001428  6A2F               	clrf	??_main& (0+255),c
  1212  00142A  2A2F               	incf	??_main& (0+255),f,c
  1213  00142C  D001               	goto	u1868
  1214  00142E                     u1850:
  1215  00142E  6A2F               	clrf	??_main& (0+255),c
  1216  001430                     u1868:
  1217  001430  462F               	rlncf	??_main,f,c
  1218  001432  5083               	movf	3971,w,c	;volatile
  1219  001434  182F               	xorwf	??_main,w,c
  1220  001436  0BFD               	andlw	-3
  1221  001438  182F               	xorwf	??_main,w,c
  1222  00143A  6E83               	movwf	3971,c	;volatile
  1223                           
  1224                           ;PB_Serial_main.c: 304: PORTDbits.RD6 = !PORTDbits.RD6 ;
  1225  00143C  BC83               	btfsc	3971,6,c	;volatile
  1226  00143E  D003               	goto	u1870
  1227  001440  6A2F               	clrf	??_main& (0+255),c
  1228  001442  2A2F               	incf	??_main& (0+255),f,c
  1229  001444  D001               	goto	u1888
  1230  001446                     u1870:
  1231  001446  6A2F               	clrf	??_main& (0+255),c
  1232  001448                     u1888:
  1233  001448  3A2F               	swapf	??_main,f,c
  1234  00144A  462F               	rlncf	??_main,f,c
  1235  00144C  462F               	rlncf	??_main,f,c
  1236  00144E  5083               	movf	3971,w,c	;volatile
  1237  001450  182F               	xorwf	??_main,w,c
  1238  001452  0BBF               	andlw	-65
  1239  001454  182F               	xorwf	??_main,w,c
  1240  001456  6E83               	movwf	3971,c	;volatile
  1241                           
  1242                           ;PB_Serial_main.c: 305: PORTDbits.RD7 = !PORTDbits.RD7 ;
  1243  001458  BE83               	btfsc	3971,7,c	;volatile
  1244  00145A  D003               	goto	u1890
  1245  00145C  6A2F               	clrf	??_main& (0+255),c
  1246  00145E  2A2F               	incf	??_main& (0+255),f,c
  1247  001460  D001               	goto	u1908
  1248  001462                     u1890:
  1249  001462  6A2F               	clrf	??_main& (0+255),c
  1250  001464                     u1908:
  1251  001464  322F               	rrcf	??_main,f,c
  1252  001466  322F               	rrcf	??_main,f,c
  1253  001468  5083               	movf	3971,w,c	;volatile
  1254  00146A  182F               	xorwf	??_main,w,c
  1255  00146C  0B7F               	andlw	-129
  1256  00146E  182F               	xorwf	??_main,w,c
  1257  001470  6E83               	movwf	3971,c	;volatile
  1258                           
  1259                           ;PB_Serial_main.c: 307: delay_ms(250);
  1260  001472  0E00               	movlw	0
  1261  001474  6E02               	movwf	delay_ms@n+1,c
  1262  001476  0EFA               	movlw	250
  1263  001478  6E01               	movwf	delay_ms@n,c
  1264  00147A  ECD1  F00C         	call	_delay_ms	;wreg free
  1265                           
  1266                           ;PB_Serial_main.c: 308: }
  1267  00147E  D639               	goto	l104
  1268  001480                     l134:
  1269                           
  1270                           ;PB_Serial_main.c: 310: else if(!PORTBbits.RB4){
  1271  001480  B881               	btfsc	3969,4,c	;volatile
  1272  001482  D03B               	goto	l136
  1273                           
  1274                           ;PB_Serial_main.c: 312: PORTDbits.RD2 = !PORTDbits.RD2 ;
  1275  001484  B483               	btfsc	3971,2,c	;volatile
  1276  001486  D003               	goto	u1920
  1277  001488  6A2F               	clrf	??_main& (0+255),c
  1278  00148A  2A2F               	incf	??_main& (0+255),f,c
  1279  00148C  D001               	goto	u1938
  1280  00148E                     u1920:
  1281  00148E  6A2F               	clrf	??_main& (0+255),c
  1282  001490                     u1938:
  1283  001490  462F               	rlncf	??_main,f,c
  1284  001492  462F               	rlncf	??_main,f,c
  1285  001494  5083               	movf	3971,w,c	;volatile
  1286  001496  182F               	xorwf	??_main,w,c
  1287  001498  0BFB               	andlw	-5
  1288  00149A  182F               	xorwf	??_main,w,c
  1289  00149C  6E83               	movwf	3971,c	;volatile
  1290                           
  1291                           ;PB_Serial_main.c: 313: PORTDbits.RD3 = !PORTDbits.RD3 ;
  1292  00149E  B683               	btfsc	3971,3,c	;volatile
  1293  0014A0  D003               	goto	u1940
  1294  0014A2  6A2F               	clrf	??_main& (0+255),c
  1295  0014A4  2A2F               	incf	??_main& (0+255),f,c
  1296  0014A6  D001               	goto	u1958
  1297  0014A8                     u1940:
  1298  0014A8  6A2F               	clrf	??_main& (0+255),c
  1299  0014AA                     u1958:
  1300  0014AA  462F               	rlncf	??_main,f,c
  1301  0014AC  462F               	rlncf	??_main,f,c
  1302  0014AE  462F               	rlncf	??_main,f,c
  1303  0014B0  5083               	movf	3971,w,c	;volatile
  1304  0014B2  182F               	xorwf	??_main,w,c
  1305  0014B4  0BF7               	andlw	-9
  1306  0014B6  182F               	xorwf	??_main,w,c
  1307  0014B8  6E83               	movwf	3971,c	;volatile
  1308                           
  1309                           ;PB_Serial_main.c: 314: PORTDbits.RD4 = !PORTDbits.RD4 ;
  1310  0014BA  B883               	btfsc	3971,4,c	;volatile
  1311  0014BC  D003               	goto	u1960
  1312  0014BE  6A2F               	clrf	??_main& (0+255),c
  1313  0014C0  2A2F               	incf	??_main& (0+255),f,c
  1314  0014C2  D001               	goto	u1978
  1315  0014C4                     u1960:
  1316  0014C4  6A2F               	clrf	??_main& (0+255),c
  1317  0014C6                     u1978:
  1318  0014C6  3A2F               	swapf	??_main,f,c
  1319  0014C8  5083               	movf	3971,w,c	;volatile
  1320  0014CA  182F               	xorwf	??_main,w,c
  1321  0014CC  0BEF               	andlw	-17
  1322  0014CE  182F               	xorwf	??_main,w,c
  1323  0014D0  6E83               	movwf	3971,c	;volatile
  1324                           
  1325                           ;PB_Serial_main.c: 315: PORTDbits.RD5 = !PORTDbits.RD5 ;
  1326  0014D2  BA83               	btfsc	3971,5,c	;volatile
  1327  0014D4  D003               	goto	u1980
  1328  0014D6  6A2F               	clrf	??_main& (0+255),c
  1329  0014D8  2A2F               	incf	??_main& (0+255),f,c
  1330  0014DA  D001               	goto	u1998
  1331  0014DC                     u1980:
  1332  0014DC  6A2F               	clrf	??_main& (0+255),c
  1333  0014DE                     u1998:
  1334  0014DE  3A2F               	swapf	??_main,f,c
  1335  0014E0  462F               	rlncf	??_main,f,c
  1336  0014E2  5083               	movf	3971,w,c	;volatile
  1337  0014E4  182F               	xorwf	??_main,w,c
  1338  0014E6  0BDF               	andlw	-33
  1339  0014E8  182F               	xorwf	??_main,w,c
  1340  0014EA  6E83               	movwf	3971,c	;volatile
  1341                           
  1342                           ;PB_Serial_main.c: 317: delay_ms(250);
  1343  0014EC  0E00               	movlw	0
  1344  0014EE  6E02               	movwf	delay_ms@n+1,c
  1345  0014F0  0EFA               	movlw	250
  1346  0014F2  6E01               	movwf	delay_ms@n,c
  1347  0014F4  ECD1  F00C         	call	_delay_ms	;wreg free
  1348                           
  1349                           ;PB_Serial_main.c: 318: }
  1350  0014F8  D5FC               	goto	l104
  1351  0014FA                     l136:
  1352                           
  1353                           ;PB_Serial_main.c: 320: else if(!PORTBbits.RB5){
  1354  0014FA  BA81               	btfsc	3969,5,c	;volatile
  1355  0014FC  D5FA               	goto	l104
  1356                           
  1357                           ;PB_Serial_main.c: 322: PORTCbits.RC0 = !PORTCbits.RC0 ;
  1358  0014FE  B082               	btfsc	3970,0,c	;volatile
  1359  001500  D003               	goto	u2010
  1360  001502  6A2F               	clrf	??_main& (0+255),c
  1361  001504  2A2F               	incf	??_main& (0+255),f,c
  1362  001506  D001               	goto	u2028
  1363  001508                     u2010:
  1364  001508  6A2F               	clrf	??_main& (0+255),c
  1365  00150A                     u2028:
  1366  00150A  5082               	movf	3970,w,c	;volatile
  1367  00150C  182F               	xorwf	??_main,w,c
  1368  00150E  0BFE               	andlw	-2
  1369  001510  182F               	xorwf	??_main,w,c
  1370  001512  6E82               	movwf	3970,c	;volatile
  1371                           
  1372                           ;PB_Serial_main.c: 323: PORTEbits.RE0 = !PORTEbits.RE0;
  1373  001514  B084               	btfsc	3972,0,c	;volatile
  1374  001516  D003               	goto	u2030
  1375  001518  6A2F               	clrf	??_main& (0+255),c
  1376  00151A  2A2F               	incf	??_main& (0+255),f,c
  1377  00151C  D001               	goto	u2048
  1378  00151E                     u2030:
  1379  00151E  6A2F               	clrf	??_main& (0+255),c
  1380  001520                     u2048:
  1381  001520  5084               	movf	3972,w,c	;volatile
  1382  001522  182F               	xorwf	??_main,w,c
  1383  001524  0BFE               	andlw	-2
  1384  001526  182F               	xorwf	??_main,w,c
  1385  001528  6E84               	movwf	3972,c	;volatile
  1386                           
  1387                           ;PB_Serial_main.c: 325: delay_ms(250);
  1388  00152A  0E00               	movlw	0
  1389  00152C  6E02               	movwf	delay_ms@n+1,c
  1390  00152E  0EFA               	movlw	250
  1391  001530  6E01               	movwf	delay_ms@n,c
  1392  001532  ECD1  F00C         	call	_delay_ms	;wreg free
  1393  001536  D5DD               	goto	l104
  1394  001538                     __end_of_main:
  1395                           	opt stack 0
  1396                           tblptru	equ	0xFF8
  1397                           intcon	equ	0xFF2
  1398                           intcon2	equ	0xFF1
  1399                           status	equ	0xFD8
  1400                           
  1401 ;; *************** function _sprintf *****************
  1402 ;; Defined at:
  1403 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\doprnt.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  sp              2   12[COMRAM] PTR unsigned char 
  1406 ;;		 -> main@buffer(200), 
  1407 ;;  f               2   14[COMRAM] PTR const unsigned char 
  1408 ;;		 -> STR_3(29), STR_2(19), 
  1409 ;; Auto vars:     Size  Location     Type
  1410 ;;  idx             1   36[COMRAM] unsigned char 
  1411 ;;  tmpval          4    0        struct .
  1412 ;;  cp              3    0        PTR const unsigned char 
  1413 ;;  width           2   43[COMRAM] int 
  1414 ;;  val             2   40[COMRAM] unsigned int 
  1415 ;;  ap              2   37[COMRAM] PTR void [1]
  1416 ;;		 -> ?_sprintf(2), 
  1417 ;;  len             2    0        unsigned int 
  1418 ;;  c               1   45[COMRAM] char 
  1419 ;;  flag            1   42[COMRAM] unsigned char 
  1420 ;;  prec            1   39[COMRAM] char 
  1421 ;; Return value:  Size  Location     Type
  1422 ;;                  2   12[COMRAM] int 
  1423 ;; Registers used:
  1424 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1425 ;; Tracked objects:
  1426 ;;		On entry : 0/0
  1427 ;;		On exit  : 0/0
  1428 ;;		Unchanged: 0/0
  1429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1430 ;;      Params:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1431 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1432 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1433 ;;      Totals:        34       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1434 ;;Total ram usage:       34 bytes
  1435 ;; Hardware stack levels used:    1
  1436 ;; Hardware stack levels required when called:    1
  1437 ;; This function calls:
  1438 ;;		___lwdiv
  1439 ;;		___lwmod
  1440 ;;		___wmul
  1441 ;;		_isdigit
  1442 ;; This function is called by:
  1443 ;;		_main
  1444 ;; This function uses a non-reentrant model
  1445 ;;
  1446                           
  1447                           	psect	text1
  1448  001538                     __ptext1:
  1449                           	opt stack 0
  1450  001538                     _sprintf:
  1451                           	opt stack 29
  1452                           
  1453                           ;doprnt.c: 494: va_list ap;
  1454                           ;doprnt.c: 499: signed char c;
  1455                           ;doprnt.c: 501: int width;
  1456                           ;doprnt.c: 506: signed char prec;
  1457                           ;doprnt.c: 508: unsigned char flag;
  1458                           ;doprnt.c: 523: union {
  1459                           ;doprnt.c: 524: unsigned long vd;
  1460                           ;doprnt.c: 525: double integ;
  1461                           ;doprnt.c: 526: } tmpval;
  1462                           ;doprnt.c: 528: unsigned int val;
  1463                           ;doprnt.c: 529: unsigned len;
  1464                           ;doprnt.c: 530: const char * cp;
  1465                           ;doprnt.c: 533: *ap = __va_start();
  1466                           
  1467                           ;incstack = 0
  1468  001538  0E11               	movlw	low (?_sprintf+4)
  1469  00153A  6E26               	movwf	sprintf@ap,c
  1470  00153C  0E00               	movlw	high (?_sprintf+4)
  1471  00153E  6E27               	movwf	sprintf@ap+1,c
  1472                           
  1473                           ;doprnt.c: 536: while(c = *f++) {
  1474  001540  D195               	goto	u1400
  1475  001542                     
  1476                           ;doprnt.c: 538: if(c != '%')
  1477  001542  0E25               	movlw	37
  1478  001544  182E               	xorwf	sprintf@c,w,c
  1479  001546  B4D8               	btfsc	status,2,c
  1480  001548  D009               	goto	l156
  1481                           
  1482                           ;doprnt.c: 540: {
  1483                           ;doprnt.c: 541: ((*sp++ = (c)));
  1484  00154A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1485  00154E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1486  001552  C02E  FFDF         	movff	sprintf@c,indf2
  1487  001556  4A0D               	infsnz	sprintf@sp,f,c
  1488  001558  2A0E               	incf	sprintf@sp+1,f,c
  1489                           
  1490                           ;doprnt.c: 542: continue;
  1491  00155A  D188               	goto	u1400
  1492  00155C                     l156:
  1493                           
  1494                           ;doprnt.c: 543: }
  1495                           ;doprnt.c: 546: width = 0;
  1496  00155C  0E00               	movlw	0
  1497  00155E  6E2D               	movwf	sprintf@width+1,c
  1498  001560  0E00               	movlw	0
  1499  001562  6E2C               	movwf	sprintf@width,c
  1500                           
  1501                           ;doprnt.c: 548: flag = 0;
  1502  001564  0E00               	movlw	0
  1503  001566  6E2B               	movwf	sprintf@flag,c
  1504                           
  1505                           ;doprnt.c: 551: switch(*f) {
  1506                           
  1507                           ;doprnt.c: 550: for(;;) {
  1508  001568  D003               	goto	l158
  1509  00156A                     
  1510                           ;doprnt.c: 580: flag |= 0x04;
  1511  00156A  842B               	bsf	sprintf@flag,2,c
  1512                           
  1513                           ;doprnt.c: 581: f++;
  1514  00156C  4A0F               	infsnz	sprintf@f,f,c
  1515  00156E  2A10               	incf	sprintf@f+1,f,c
  1516  001570                     l158:
  1517  001570  C00F  FFF6         	movff	sprintf@f,tblptrl
  1518  001574  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1519  001578                     	if	0	;tblptru may be non-zero
  1520  001578                     	endif
  1521  001578                     	if	0	;tblptru may be non-zero
  1522  001578                     	endif
  1523  001578  0008               	tblrd		*
  1524  00157A  50F5               	movf	tablat,w,c
  1525                           
  1526                           ; Switch size 1, requested type "space"
  1527                           ; Number of cases is 1, Range of values is 48 to 48
  1528                           ; switch strategies available:
  1529                           ; Name         Instructions Cycles
  1530                           ; simple_byte            4     3 (average)
  1531                           ;	Chosen strategy is simple_byte
  1532  00157C  0A30               	xorlw	48	; case 48
  1533  00157E  B4D8               	btfsc	status,2,c
  1534  001580  D7F4               	goto	l159
  1535                           
  1536                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  1537                           
  1538                           ;doprnt.c: 586: }
  1539                           
  1540                           ;doprnt.c: 585: break;
  1541  001582  C00F  FFF6         	movff	sprintf@f,tblptrl
  1542  001586  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1543  00158A                     	if	0	;tblptru may be non-zero
  1544  00158A                     	endif
  1545  00158A                     	if	0	;tblptru may be non-zero
  1546  00158A                     	endif
  1547  00158A  0008               	tblrd		*
  1548  00158C  50F5               	movf	tablat,w,c
  1549  00158E  ECF6  F00C         	call	_isdigit
  1550  001592  A0D8               	btfss	status,0,c
  1551  001594  D035               	goto	l166
  1552                           
  1553                           ;doprnt.c: 598: width = 0;
  1554  001596  0E00               	movlw	0
  1555  001598  6E2D               	movwf	sprintf@width+1,c
  1556  00159A  0E00               	movlw	0
  1557  00159C  6E2C               	movwf	sprintf@width,c
  1558  00159E                     
  1559                           ;doprnt.c: 600: width *= 10;
  1560  00159E  C02C  F001         	movff	sprintf@width,___wmul@multiplier
  1561  0015A2  C02D  F002         	movff	sprintf@width+1,___wmul@multiplier+1
  1562  0015A6  0E00               	movlw	0
  1563  0015A8  6E04               	movwf	___wmul@multiplicand+1,c
  1564  0015AA  0E0A               	movlw	10
  1565  0015AC  6E03               	movwf	___wmul@multiplicand,c
  1566  0015AE  ECBE  F00C         	call	___wmul	;wreg free
  1567  0015B2  C001  F02C         	movff	?___wmul,sprintf@width
  1568  0015B6  C002  F02D         	movff	?___wmul+1,sprintf@width+1
  1569                           
  1570                           ;doprnt.c: 601: width += *f++ - '0';
  1571  0015BA  0ED0               	movlw	208
  1572  0015BC  6E21               	movwf	??_sprintf& (0+255),c
  1573  0015BE  0EFF               	movlw	255
  1574  0015C0  6E22               	movwf	(??_sprintf+1)& (0+255),c
  1575  0015C2  C00F  FFF6         	movff	sprintf@f,tblptrl
  1576  0015C6  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1577  0015CA                     	if	0	;tblptru may be non-zero
  1578  0015CA                     	endif
  1579  0015CA                     	if	0	;tblptru may be non-zero
  1580  0015CA                     	endif
  1581  0015CA  0008               	tblrd		*
  1582  0015CC  50F5               	movf	tablat,w,c
  1583  0015CE  6E23               	movwf	(??_sprintf+2)& (0+255),c
  1584  0015D0  6A24               	clrf	(??_sprintf+3)& (0+255),c
  1585  0015D2  5021               	movf	??_sprintf,w,c
  1586  0015D4  2623               	addwf	??_sprintf+2,f,c
  1587  0015D6  5022               	movf	??_sprintf+1,w,c
  1588  0015D8  2224               	addwfc	??_sprintf+3,f,c
  1589  0015DA  5023               	movf	??_sprintf+2,w,c
  1590  0015DC  262C               	addwf	sprintf@width,f,c
  1591  0015DE  5024               	movf	??_sprintf+3,w,c
  1592  0015E0  222D               	addwfc	sprintf@width+1,f,c
  1593  0015E2  4A0F               	infsnz	sprintf@f,f,c
  1594  0015E4  2A10               	incf	sprintf@f+1,f,c
  1595                           
  1596                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  1597  0015E6  C00F  FFF6         	movff	sprintf@f,tblptrl
  1598  0015EA  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1599  0015EE                     	if	0	;tblptru may be non-zero
  1600  0015EE                     	endif
  1601  0015EE                     	if	0	;tblptru may be non-zero
  1602  0015EE                     	endif
  1603  0015EE  0008               	tblrd		*
  1604  0015F0  50F5               	movf	tablat,w,c
  1605  0015F2  ECF6  F00C         	call	_isdigit
  1606  0015F6  A0D8               	btfss	status,0,c
  1607  0015F8  D003               	goto	l166
  1608  0015FA  D7D1               	goto	l164
  1609  0015FC                     
  1610                           ;doprnt.c: 718: case 'x':
  1611                           ;doprnt.c: 721: flag |= 0x80;
  1612  0015FC  8E2B               	bsf	sprintf@flag,7,c
  1613                           
  1614                           ;doprnt.c: 723: break;
  1615  0015FE  D01A               	goto	l171
  1616  001600                     l166:
  1617  001600  C00F  FFF6         	movff	sprintf@f,tblptrl
  1618  001604  C010  FFF7         	movff	sprintf@f+1,tblptrh
  1619  001608  4A0F               	infsnz	sprintf@f,f,c
  1620  00160A  2A10               	incf	sprintf@f+1,f,c
  1621  00160C                     	if	0	;tblptru may be non-zero
  1622  00160C                     	endif
  1623  00160C                     	if	0	;tblptru may be non-zero
  1624  00160C                     	endif
  1625  00160C  0008               	tblrd		*
  1626  00160E  CFF5 F02E          	movff	tablat,sprintf@c
  1627  001612  502E               	movf	sprintf@c,w,c
  1628                           
  1629                           ; Switch size 1, requested type "space"
  1630                           ; Number of cases is 5, Range of values is 0 to 120
  1631                           ; switch strategies available:
  1632                           ; Name         Instructions Cycles
  1633                           ; simple_byte           16     9 (average)
  1634                           ;	Chosen strategy is simple_byte
  1635  001614  0A00               	xorlw	0	; case 0
  1636  001616  B4D8               	btfsc	status,2,c
  1637  001618  D135               	goto	u1410
  1638  00161A  0A58               	xorlw	88	; case 88
  1639  00161C  B4D8               	btfsc	status,2,c
  1640  00161E  D7EE               	goto	l172
  1641  001620  0A3C               	xorlw	60	; case 100
  1642  001622  B4D8               	btfsc	status,2,c
  1643  001624  D007               	goto	l171
  1644  001626  0A0D               	xorlw	13	; case 105
  1645  001628  B4D8               	btfsc	status,2,c
  1646  00162A  D004               	goto	l171
  1647  00162C  0A11               	xorlw	17	; case 120
  1648  00162E  B4D8               	btfsc	status,2,c
  1649  001630  D7E5               	goto	l172
  1650  001632  D11C               	goto	u1400
  1651  001634                     l171:
  1652                           
  1653                           ;doprnt.c: 1251: if((flag & 0x80) == 0x00)
  1654  001634  BE2B               	btfsc	sprintf@flag,7,c
  1655  001636  D015               	goto	l175
  1656                           
  1657                           ;doprnt.c: 1253: {
  1658                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  1659  001638  C026  FFD9         	movff	sprintf@ap,fsr2l
  1660  00163C  C027  FFDA         	movff	sprintf@ap+1,fsr2h
  1661  001640  CFDE F029          	movff	postinc2,sprintf@val
  1662  001644  CFDD F02A          	movff	postdec2,sprintf@val+1
  1663  001648  0E02               	movlw	2
  1664  00164A  2626               	addwf	sprintf@ap,f,c
  1665  00164C  0E00               	movlw	0
  1666  00164E  2227               	addwfc	sprintf@ap+1,f,c
  1667                           
  1668                           ;doprnt.c: 1261: if((int)val < 0) {
  1669  001650  AE2A               	btfss	sprintf@val+1,7,c
  1670  001652  D044               	goto	l178
  1671                           
  1672                           ;doprnt.c: 1262: flag |= 0x03;
  1673  001654  0E03               	movlw	3
  1674  001656  122B               	iorwf	sprintf@flag,f,c
  1675                           
  1676                           ;doprnt.c: 1263: val = -val;
  1677  001658  6C29               	negf	sprintf@val,c
  1678  00165A  1E2A               	comf	sprintf@val+1,f,c
  1679  00165C  B0D8               	btfsc	status,0,c
  1680  00165E  2A2A               	incf	sprintf@val+1,f,c
  1681                           
  1682                           ;doprnt.c: 1264: }
  1683                           ;doprnt.c: 1266: }
  1684  001660  D03D               	goto	l178
  1685  001662                     l175:
  1686                           
  1687                           ;doprnt.c: 1268: else
  1688                           ;doprnt.c: 1273: {
  1689                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  1690  001662  C026  FFD9         	movff	sprintf@ap,fsr2l
  1691  001666  C027  FFDA         	movff	sprintf@ap+1,fsr2h
  1692  00166A  CFDE F029          	movff	postinc2,sprintf@val
  1693  00166E  CFDD F02A          	movff	postdec2,sprintf@val+1
  1694  001672  0E02               	movlw	2
  1695  001674  2626               	addwf	sprintf@ap,f,c
  1696  001676  0E00               	movlw	0
  1697  001678  2227               	addwfc	sprintf@ap+1,f,c
  1698                           
  1699                           ;doprnt.c: 1287: }
  1700                           ;doprnt.c: 1294: switch((unsigned char)(flag & 0x80)) {
  1701  00167A  D030               	goto	l178
  1702  00167C                     
  1703                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  1704  00167C  0E01               	movlw	1
  1705  00167E  6E2E               	movwf	sprintf@c,c
  1706  001680                     l1352:
  1707  001680  0E05               	movlw	5
  1708  001682  182E               	xorwf	sprintf@c,w,c
  1709  001684  B4D8               	btfsc	status,2,c
  1710  001686  D032               	goto	l183
  1711                           
  1712                           ;doprnt.c: 1306: if(val < dpowers[c])
  1713  001688  502E               	movf	sprintf@c,w,c
  1714  00168A  0D02               	mullw	2
  1715  00168C  0E01               	movlw	low _dpowers
  1716  00168E  24F3               	addwf	prodl,w,c
  1717  001690  6EF6               	movwf	tblptrl,c
  1718  001692  0E10               	movlw	high _dpowers
  1719  001694  20F4               	addwfc	prodh,w,c
  1720  001696  6EF7               	movwf	tblptrh,c
  1721  001698                     	if	0	;There are less than 3 active tblptr bytes
  1722  001698                     	endif
  1723  001698  0009               	tblrd		*+
  1724  00169A  50F5               	movf	tablat,w,c
  1725  00169C  5C29               	subwf	sprintf@val,w,c
  1726  00169E  0009               	tblrd		*+
  1727  0016A0  50F5               	movf	tablat,w,c
  1728  0016A2  582A               	subwfb	sprintf@val+1,w,c
  1729  0016A4  A0D8               	btfss	status,0,c
  1730  0016A6  D022               	goto	l183
  1731                           
  1732                           ;doprnt.c: 1307: break;
  1733  0016A8  2A2E               	incf	sprintf@c,f,c
  1734  0016AA  D7EA               	goto	l1352
  1735  0016AC                     
  1736                           ;doprnt.c: 1316: for(c = 1 ; c != sizeof hexpowers/sizeof hexpowers[0] ; c++)
  1737  0016AC  0E01               	movlw	1
  1738  0016AE  6E2E               	movwf	sprintf@c,c
  1739  0016B0                     l1366:
  1740  0016B0  0E04               	movlw	4
  1741  0016B2  182E               	xorwf	sprintf@c,w,c
  1742  0016B4  B4D8               	btfsc	status,2,c
  1743  0016B6  D01A               	goto	l183
  1744                           
  1745                           ;doprnt.c: 1317: if(val < hexpowers[c])
  1746  0016B8  502E               	movf	sprintf@c,w,c
  1747  0016BA  0D02               	mullw	2
  1748  0016BC  0E0B               	movlw	low _hexpowers
  1749  0016BE  24F3               	addwf	prodl,w,c
  1750  0016C0  6EF6               	movwf	tblptrl,c
  1751  0016C2  0E10               	movlw	high _hexpowers
  1752  0016C4  20F4               	addwfc	prodh,w,c
  1753  0016C6  6EF7               	movwf	tblptrh,c
  1754  0016C8                     	if	0	;There are less than 3 active tblptr bytes
  1755  0016C8                     	endif
  1756  0016C8  0009               	tblrd		*+
  1757  0016CA  50F5               	movf	tablat,w,c
  1758  0016CC  5C29               	subwf	sprintf@val,w,c
  1759  0016CE  0009               	tblrd		*+
  1760  0016D0  50F5               	movf	tablat,w,c
  1761  0016D2  582A               	subwfb	sprintf@val+1,w,c
  1762  0016D4  A0D8               	btfss	status,0,c
  1763  0016D6  D00A               	goto	l183
  1764                           
  1765                           ;doprnt.c: 1318: break;
  1766  0016D8  2A2E               	incf	sprintf@c,f,c
  1767  0016DA  D7EA               	goto	l1366
  1768  0016DC                     l178:
  1769  0016DC  502B               	movf	sprintf@flag,w,c
  1770  0016DE  0B80               	andlw	128
  1771                           
  1772                           ; Switch size 1, requested type "space"
  1773                           ; Number of cases is 2, Range of values is 0 to 128
  1774                           ; switch strategies available:
  1775                           ; Name         Instructions Cycles
  1776                           ; simple_byte            7     4 (average)
  1777                           ;	Chosen strategy is simple_byte
  1778  0016E0  0A00               	xorlw	0	; case 0
  1779  0016E2  B4D8               	btfsc	status,2,c
  1780  0016E4  D7CB               	goto	l179
  1781  0016E6  0A80               	xorlw	128	; case 128
  1782  0016E8  B4D8               	btfsc	status,2,c
  1783  0016EA  D7E0               	goto	l184
  1784  0016EC                     l183:
  1785                           
  1786                           ;doprnt.c: 1345: if(width && flag & 0x03)
  1787  0016EC  502C               	movf	sprintf@width,w,c
  1788  0016EE  102D               	iorwf	sprintf@width+1,w,c
  1789  0016F0  B4D8               	btfsc	status,2,c
  1790  0016F2  D009               	goto	l188
  1791  0016F4  C02B  F021         	movff	sprintf@flag,??_sprintf
  1792  0016F8  0E03               	movlw	3
  1793  0016FA  1621               	andwf	??_sprintf,f,c
  1794  0016FC  B4D8               	btfsc	status,2,c
  1795  0016FE  D003               	goto	l188
  1796                           
  1797                           ;doprnt.c: 1346: width--;
  1798  001700  062C               	decf	sprintf@width,f,c
  1799  001702  A0D8               	btfss	status,0,c
  1800  001704  062D               	decf	sprintf@width+1,f,c
  1801  001706                     l188:
  1802                           
  1803                           ;doprnt.c: 1381: if(width > c)
  1804  001706  0E80               	movlw	128
  1805  001708  BE2E               	btfsc	sprintf@c,7,c
  1806  00170A  0E7F               	movlw	127
  1807  00170C  6E21               	movwf	??_sprintf& (0+255),c
  1808  00170E  502C               	movf	sprintf@width,w,c
  1809  001710  5C2E               	subwf	sprintf@c,w,c
  1810  001712  502D               	movf	sprintf@width+1,w,c
  1811  001714  0A80               	xorlw	128
  1812  001716  5821               	subwfb	??_sprintf& (0+255),w,c
  1813  001718  B0D8               	btfsc	status,0,c
  1814  00171A  D007               	goto	l189
  1815                           
  1816                           ;doprnt.c: 1382: width -= c;
  1817  00171C  502E               	movf	sprintf@c,w,c
  1818  00171E  5E2C               	subwf	sprintf@width,f,c
  1819  001720  0E00               	movlw	0
  1820  001722  BE2E               	btfsc	sprintf@c,7,c
  1821  001724  0EFF               	movlw	255
  1822  001726  5A2D               	subwfb	sprintf@width+1,f,c
  1823  001728  D004               	goto	l190
  1824  00172A                     l189:
  1825                           
  1826                           ;doprnt.c: 1383: else
  1827                           ;doprnt.c: 1384: width = 0;
  1828  00172A  0E00               	movlw	0
  1829  00172C  6E2D               	movwf	sprintf@width+1,c
  1830  00172E  0E00               	movlw	0
  1831  001730  6E2C               	movwf	sprintf@width,c
  1832  001732                     l190:
  1833                           
  1834                           ;doprnt.c: 1387: if(flag & 0x04) {
  1835  001732  A42B               	btfss	sprintf@flag,2,c
  1836  001734  D01E               	goto	l191
  1837                           
  1838                           ;doprnt.c: 1392: if(flag & 0x03)
  1839  001736  C02B  F021         	movff	sprintf@flag,??_sprintf
  1840  00173A  0E03               	movlw	3
  1841  00173C  1621               	andwf	??_sprintf,f,c
  1842  00173E  B4D8               	btfsc	status,2,c
  1843  001740  D008               	goto	l192
  1844                           
  1845                           ;doprnt.c: 1393: ((*sp++ = ('-')));
  1846  001742  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1847  001746  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1848  00174A  0E2D               	movlw	45
  1849  00174C  6EDF               	movwf	indf2,c
  1850  00174E  4A0D               	infsnz	sprintf@sp,f,c
  1851  001750  2A0E               	incf	sprintf@sp+1,f,c
  1852  001752                     l192:
  1853                           
  1854                           ;doprnt.c: 1415: if(width)
  1855  001752  502C               	movf	sprintf@width,w,c
  1856  001754  102D               	iorwf	sprintf@width+1,w,c
  1857  001756  B4D8               	btfsc	status,2,c
  1858  001758  D02D               	goto	l200
  1859                           
  1860                           ;doprnt.c: 1417: ((*sp++ = ('0')));
  1861                           
  1862                           ;doprnt.c: 1416: do
  1863  00175A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1864  00175E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1865  001762  0E30               	movlw	48
  1866  001764  6EDF               	movwf	indf2,c
  1867  001766  4A0D               	infsnz	sprintf@sp,f,c
  1868  001768  2A0E               	incf	sprintf@sp+1,f,c
  1869                           
  1870                           ;doprnt.c: 1418: while(--width);
  1871  00176A  062C               	decf	sprintf@width,f,c
  1872  00176C  A0D8               	btfss	status,0,c
  1873  00176E  062D               	decf	sprintf@width+1,f,c
  1874  001770  D7F0               	goto	l192
  1875  001772                     l191:
  1876                           
  1877                           ;doprnt.c: 1422: {
  1878                           ;doprnt.c: 1424: if(width
  1879                           ;doprnt.c: 1428: )
  1880  001772  502C               	movf	sprintf@width,w,c
  1881  001774  102D               	iorwf	sprintf@width+1,w,c
  1882  001776  B4D8               	btfsc	status,2,c
  1883  001778  D00F               	goto	u1380
  1884  00177A                     u1370:
  1885                           
  1886                           ;doprnt.c: 1430: ((*sp++ = (' ')));
  1887                           
  1888                           ;doprnt.c: 1429: do
  1889  00177A  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1890  00177E  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1891  001782  0E20               	movlw	32
  1892  001784  6EDF               	movwf	indf2,c
  1893  001786  4A0D               	infsnz	sprintf@sp,f,c
  1894  001788  2A0E               	incf	sprintf@sp+1,f,c
  1895                           
  1896                           ;doprnt.c: 1431: while(--width);
  1897  00178A  062C               	decf	sprintf@width,f,c
  1898  00178C  A0D8               	btfss	status,0,c
  1899  00178E  062D               	decf	sprintf@width+1,f,c
  1900  001790  502C               	movf	sprintf@width,w,c
  1901  001792  102D               	iorwf	sprintf@width+1,w,c
  1902  001794  A4D8               	btfss	status,2,c
  1903  001796  D7F1               	goto	u1370
  1904  001798                     u1380:
  1905                           
  1906                           ;doprnt.c: 1438: if(flag & 0x03)
  1907  001798  C02B  F021         	movff	sprintf@flag,??_sprintf
  1908  00179C  0E03               	movlw	3
  1909  00179E  1621               	andwf	??_sprintf,f,c
  1910  0017A0  B4D8               	btfsc	status,2,c
  1911  0017A2  D008               	goto	l200
  1912                           
  1913                           ;doprnt.c: 1439: ((*sp++ = ('-')));
  1914  0017A4  C00D  FFD9         	movff	sprintf@sp,fsr2l
  1915  0017A8  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  1916  0017AC  0E2D               	movlw	45
  1917  0017AE  6EDF               	movwf	indf2,c
  1918  0017B0  4A0D               	infsnz	sprintf@sp,f,c
  1919  0017B2  2A0E               	incf	sprintf@sp+1,f,c
  1920  0017B4                     l200:
  1921                           
  1922                           ;doprnt.c: 1469: }
  1923                           ;doprnt.c: 1472: prec = c;
  1924  0017B4  C02E  F028         	movff	sprintf@c,sprintf@prec
  1925                           
  1926                           ;doprnt.c: 1474: while(prec--) {
  1927  0017B8  D055               	goto	l201
  1928  0017BA                     
  1929                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  1930  0017BA  5028               	movf	sprintf@prec,w,c
  1931  0017BC  0D02               	mullw	2
  1932  0017BE  0E01               	movlw	low _dpowers
  1933  0017C0  24F3               	addwf	prodl,w,c
  1934  0017C2  6EF6               	movwf	tblptrl,c
  1935  0017C4  0E10               	movlw	high _dpowers
  1936  0017C6  20F4               	addwfc	prodh,w,c
  1937  0017C8  6EF7               	movwf	tblptrh,c
  1938  0017CA                     	if	0	;There are less than 3 active tblptr bytes
  1939  0017CA                     	endif
  1940  0017CA  0009               	tblrd		*+
  1941  0017CC  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1942  0017D0  000A               	tblrd		*-
  1943  0017D2  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1944  0017D6  C029  F001         	movff	sprintf@val,___lwdiv@dividend
  1945  0017DA  C02A  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1946  0017DE  EC74  F00C         	call	___lwdiv	;wreg free
  1947  0017E2  C001  F008         	movff	?___lwdiv,___lwmod@dividend
  1948  0017E6  C002  F009         	movff	?___lwdiv+1,___lwmod@dividend+1
  1949  0017EA  0E00               	movlw	0
  1950  0017EC  6E0B               	movwf	___lwmod@divisor+1,c
  1951  0017EE  0E0A               	movlw	10
  1952  0017F0  6E0A               	movwf	___lwmod@divisor,c
  1953  0017F2  EC9D  F00C         	call	___lwmod	;wreg free
  1954  0017F6  5008               	movf	?___lwmod,w,c
  1955  0017F8  0F30               	addlw	48
  1956  0017FA  6E2E               	movwf	sprintf@c,c
  1957                           
  1958                           ;doprnt.c: 1491: break;
  1959  0017FC  D02B               	goto	l205
  1960  0017FE                     
  1961                           ;doprnt.c: 1499: {
  1962                           ;doprnt.c: 1500: unsigned char idx = (val / hexpowers[prec]) & 0xF;
  1963  0017FE  C029  F001         	movff	sprintf@val,___lwdiv@dividend
  1964  001802  C02A  F002         	movff	sprintf@val+1,___lwdiv@dividend+1
  1965  001806  5028               	movf	sprintf@prec,w,c
  1966  001808  0D02               	mullw	2
  1967  00180A  0E0B               	movlw	low _hexpowers
  1968  00180C  24F3               	addwf	prodl,w,c
  1969  00180E  6EF6               	movwf	tblptrl,c
  1970  001810  0E10               	movlw	high _hexpowers
  1971  001812  20F4               	addwfc	prodh,w,c
  1972  001814  6EF7               	movwf	tblptrh,c
  1973  001816                     	if	0	;There are less than 3 active tblptr bytes
  1974  001816                     	endif
  1975  001816  0009               	tblrd		*+
  1976  001818  CFF5 F003          	movff	tablat,___lwdiv@divisor
  1977  00181C  000A               	tblrd		*-
  1978  00181E  CFF5 F004          	movff	tablat,___lwdiv@divisor+1
  1979  001822  EC74  F00C         	call	___lwdiv	;wreg free
  1980  001826  5001               	movf	?___lwdiv,w,c
  1981  001828  0B0F               	andlw	15
  1982  00182A  6E25               	movwf	sprintf@idx,c
  1983                           
  1984                           ;doprnt.c: 1504: c = "0123456789ABCDEF"[idx];
  1985  00182C  5025               	movf	sprintf@idx,w,c
  1986  00182E  0D01               	mullw	1
  1987  001830  0E6E               	movlw	low STR_16
  1988  001832  24F3               	addwf	prodl,w,c
  1989  001834  6EF6               	movwf	tblptrl,c
  1990  001836  0E10               	movlw	high STR_16
  1991  001838  20F4               	addwfc	prodh,w,c
  1992  00183A  6EF7               	movwf	tblptrh,c
  1993  00183C                     	if	0	;There are less than 3 active tblptr bytes
  1994  00183C                     	endif
  1995  00183C  0008               	tblrd		*
  1996  00183E  CFF5 F02E          	movff	tablat,sprintf@c
  1997                           
  1998                           ;doprnt.c: 1523: }
  1999                           
  2000                           ;doprnt.c: 1508: }
  2001                           ;doprnt.c: 1510: break;
  2002  001842  D008               	goto	l205
  2003  001844  502B               	movf	sprintf@flag,w,c
  2004  001846  0B80               	andlw	128
  2005                           
  2006                           ; Switch size 1, requested type "space"
  2007                           ; Number of cases is 2, Range of values is 0 to 128
  2008                           ; switch strategies available:
  2009                           ; Name         Instructions Cycles
  2010                           ; simple_byte            7     4 (average)
  2011                           ;	Chosen strategy is simple_byte
  2012  001848  0A00               	xorlw	0	; case 0
  2013  00184A  B4D8               	btfsc	status,2,c
  2014  00184C  D7B6               	goto	l204
  2015  00184E  0A80               	xorlw	128	; case 128
  2016  001850  B4D8               	btfsc	status,2,c
  2017  001852  D7D5               	goto	l206
  2018  001854                     l205:
  2019                           
  2020                           ;doprnt.c: 1524: ((*sp++ = (c)));
  2021  001854  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2022  001858  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2023  00185C  C02E  FFDF         	movff	sprintf@c,indf2
  2024  001860  4A0D               	infsnz	sprintf@sp,f,c
  2025  001862  2A0E               	incf	sprintf@sp+1,f,c
  2026  001864                     l201:
  2027  001864  0628               	decf	sprintf@prec,f,c
  2028  001866  2828               	incf	sprintf@prec,w,c
  2029  001868  A4D8               	btfss	status,2,c
  2030  00186A  D7EC               	goto	l203
  2031  00186C                     u1400:
  2032  00186C  C00F  FFF6         	movff	sprintf@f,tblptrl
  2033  001870  C010  FFF7         	movff	sprintf@f+1,tblptrh
  2034  001874  4A0F               	infsnz	sprintf@f,f,c
  2035  001876  2A10               	incf	sprintf@f+1,f,c
  2036  001878                     	if	0	;tblptru may be non-zero
  2037  001878                     	endif
  2038  001878                     	if	0	;tblptru may be non-zero
  2039  001878                     	endif
  2040  001878  0008               	tblrd		*
  2041  00187A  CFF5 F02E          	movff	tablat,sprintf@c
  2042  00187E  502E               	movf	sprintf@c,w,c
  2043  001880  A4D8               	btfss	status,2,c
  2044  001882  D65F               	goto	l155
  2045  001884                     u1410:
  2046                           
  2047                           ;doprnt.c: 1538: *sp = 0;
  2048                           
  2049                           ;doprnt.c: 1525: }
  2050                           ;doprnt.c: 1533: }
  2051                           ;doprnt.c: 1535: alldone:
  2052  001884  C00D  FFD9         	movff	sprintf@sp,fsr2l
  2053  001888  C00E  FFDA         	movff	sprintf@sp+1,fsr2h
  2054  00188C  0E00               	movlw	0
  2055  00188E  6EDF               	movwf	indf2,c
  2056  001890  0012               	return	
  2057  001892                     __end_of_sprintf:
  2058                           	opt stack 0
  2059                           tblptru	equ	0xFF8
  2060                           tblptrh	equ	0xFF7
  2061                           tblptrl	equ	0xFF6
  2062                           tablat	equ	0xFF5
  2063                           prodh	equ	0xFF4
  2064                           prodl	equ	0xFF3
  2065                           intcon	equ	0xFF2
  2066                           intcon2	equ	0xFF1
  2067                           indf2	equ	0xFDF
  2068                           postinc2	equ	0xFDE
  2069                           postdec2	equ	0xFDD
  2070                           fsr2h	equ	0xFDA
  2071                           fsr2l	equ	0xFD9
  2072                           status	equ	0xFD8
  2073                           
  2074 ;; *************** function _isdigit *****************
  2075 ;; Defined at:
  2076 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\isdigit.c"
  2077 ;; Parameters:    Size  Location     Type
  2078 ;;  c               1    wreg     unsigned char 
  2079 ;; Auto vars:     Size  Location     Type
  2080 ;;  c               1    2[COMRAM] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;		None               void
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2090 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2091 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2092 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2093 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2094 ;;Total ram usage:        3 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; This function calls:
  2097 ;;		Nothing
  2098 ;; This function is called by:
  2099 ;;		_sprintf
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text2
  2104  0019EC                     __ptext2:
  2105                           	opt stack 0
  2106  0019EC                     _isdigit:
  2107                           	opt stack 29
  2108                           
  2109                           ;incstack = 0
  2110                           ;isdigit@c stored from wreg
  2111  0019EC  6E03               	movwf	isdigit@c,c
  2112  0019EE  0E00               	movlw	0
  2113  0019F0  6E02               	movwf	_isdigit$872,c
  2114  0019F2  0E3A               	movlw	58
  2115  0019F4  6003               	cpfslt	isdigit@c,c
  2116  0019F6  D005               	goto	l539
  2117  0019F8  0E2F               	movlw	47
  2118  0019FA  6403               	cpfsgt	isdigit@c,c
  2119  0019FC  D002               	goto	l539
  2120  0019FE  0E01               	movlw	1
  2121  001A00  6E02               	movwf	_isdigit$872,c
  2122  001A02                     l539:
  2123  001A02  C002  F001         	movff	_isdigit$872,??_isdigit
  2124  001A06  3001               	rrcf	??_isdigit,w,c
  2125  001A08  0012               	return	
  2126  001A0A                     __end_of_isdigit:
  2127                           	opt stack 0
  2128                           tblptru	equ	0xFF8
  2129                           tblptrh	equ	0xFF7
  2130                           tblptrl	equ	0xFF6
  2131                           tablat	equ	0xFF5
  2132                           prodh	equ	0xFF4
  2133                           prodl	equ	0xFF3
  2134                           intcon	equ	0xFF2
  2135                           intcon2	equ	0xFF1
  2136                           indf2	equ	0xFDF
  2137                           postinc2	equ	0xFDE
  2138                           postdec2	equ	0xFDD
  2139                           fsr2h	equ	0xFDA
  2140                           fsr2l	equ	0xFD9
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function ___wmul *****************
  2144 ;; Defined at:
  2145 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\Umul16.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  multiplier      2    0[COMRAM] unsigned int 
  2148 ;;  multiplicand    2    2[COMRAM] unsigned int 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;  product         2    4[COMRAM] unsigned int 
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  2    0[COMRAM] unsigned int 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0, prodl, prodh
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2160 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2163 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2164 ;;Total ram usage:        6 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		_sprintf
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text3
  2174  00197C                     __ptext3:
  2175                           	opt stack 0
  2176  00197C                     ___wmul:
  2177                           	opt stack 29
  2178                           
  2179                           ;incstack = 0
  2180  00197C  5001               	movf	___wmul@multiplier,w,c
  2181  00197E  0203               	mulwf	___wmul@multiplicand,c
  2182  001980  CFF3 F005          	movff	prodl,___wmul@product
  2183  001984  CFF4 F006          	movff	prodh,___wmul@product+1
  2184  001988  5001               	movf	___wmul@multiplier,w,c
  2185  00198A  0204               	mulwf	___wmul@multiplicand+1,c
  2186  00198C  50F3               	movf	prodl,w,c
  2187  00198E  2606               	addwf	___wmul@product+1,f,c
  2188  001990  5002               	movf	___wmul@multiplier+1,w,c
  2189  001992  0203               	mulwf	___wmul@multiplicand,c
  2190  001994  50F3               	movf	prodl,w,c
  2191  001996  2606               	addwf	___wmul@product+1,f,c
  2192  001998  C005  F001         	movff	___wmul@product,?___wmul
  2193  00199C  C006  F002         	movff	___wmul@product+1,?___wmul+1
  2194  0019A0  0012               	return	
  2195  0019A2                     __end_of___wmul:
  2196                           	opt stack 0
  2197                           tblptru	equ	0xFF8
  2198                           tblptrh	equ	0xFF7
  2199                           tblptrl	equ	0xFF6
  2200                           tablat	equ	0xFF5
  2201                           prodh	equ	0xFF4
  2202                           prodl	equ	0xFF3
  2203                           intcon	equ	0xFF2
  2204                           intcon2	equ	0xFF1
  2205                           indf2	equ	0xFDF
  2206                           postinc2	equ	0xFDE
  2207                           postdec2	equ	0xFDD
  2208                           fsr2h	equ	0xFDA
  2209                           fsr2l	equ	0xFD9
  2210                           status	equ	0xFD8
  2211                           
  2212 ;; *************** function ___lwmod *****************
  2213 ;; Defined at:
  2214 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;  dividend        2    7[COMRAM] unsigned int 
  2217 ;;  divisor         2    9[COMRAM] unsigned int 
  2218 ;; Auto vars:     Size  Location     Type
  2219 ;;  counter         1   11[COMRAM] unsigned char 
  2220 ;; Return value:  Size  Location     Type
  2221 ;;                  2    7[COMRAM] unsigned int 
  2222 ;; Registers used:
  2223 ;;		wreg, status,2, status,0
  2224 ;; Tracked objects:
  2225 ;;		On entry : 0/0
  2226 ;;		On exit  : 0/0
  2227 ;;		Unchanged: 0/0
  2228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2232 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2233 ;;Total ram usage:        5 bytes
  2234 ;; Hardware stack levels used:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_sprintf
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text4
  2243  00193A                     __ptext4:
  2244                           	opt stack 0
  2245  00193A                     ___lwmod:
  2246                           	opt stack 29
  2247                           
  2248                           ;incstack = 0
  2249  00193A  500A               	movf	___lwmod@divisor,w,c
  2250  00193C  100B               	iorwf	___lwmod@divisor+1,w,c
  2251  00193E  B4D8               	btfsc	status,2,c
  2252  001940  D018               	goto	l633
  2253  001942  0E01               	movlw	1
  2254  001944  6E0C               	movwf	___lwmod@counter,c
  2255  001946  D004               	goto	l628
  2256  001948  90D8               	bcf	status,0,c
  2257  00194A  360A               	rlcf	___lwmod@divisor,f,c
  2258  00194C  360B               	rlcf	___lwmod@divisor+1,f,c
  2259  00194E  2A0C               	incf	___lwmod@counter,f,c
  2260  001950                     l628:
  2261  001950  AE0B               	btfss	___lwmod@divisor+1,7,c
  2262  001952  D7FA               	goto	l629
  2263  001954                     u1100:
  2264  001954  500A               	movf	___lwmod@divisor,w,c
  2265  001956  5C08               	subwf	___lwmod@dividend,w,c
  2266  001958  500B               	movf	___lwmod@divisor+1,w,c
  2267  00195A  5809               	subwfb	___lwmod@dividend+1,w,c
  2268  00195C  A0D8               	btfss	status,0,c
  2269  00195E  D004               	goto	l632
  2270  001960  500A               	movf	___lwmod@divisor,w,c
  2271  001962  5E08               	subwf	___lwmod@dividend,f,c
  2272  001964  500B               	movf	___lwmod@divisor+1,w,c
  2273  001966  5A09               	subwfb	___lwmod@dividend+1,f,c
  2274  001968                     l632:
  2275  001968  90D8               	bcf	status,0,c
  2276  00196A  320B               	rrcf	___lwmod@divisor+1,f,c
  2277  00196C  320A               	rrcf	___lwmod@divisor,f,c
  2278  00196E  2E0C               	decfsz	___lwmod@counter,f,c
  2279  001970  D7F1               	goto	u1100
  2280  001972                     l633:
  2281  001972  C008  F008         	movff	___lwmod@dividend,?___lwmod
  2282  001976  C009  F009         	movff	___lwmod@dividend+1,?___lwmod+1
  2283  00197A  0012               	return		;funcret
  2284  00197C                     __end_of___lwmod:
  2285                           	opt stack 0
  2286                           tblptru	equ	0xFF8
  2287                           tblptrh	equ	0xFF7
  2288                           tblptrl	equ	0xFF6
  2289                           tablat	equ	0xFF5
  2290                           prodh	equ	0xFF4
  2291                           prodl	equ	0xFF3
  2292                           intcon	equ	0xFF2
  2293                           intcon2	equ	0xFF1
  2294                           indf2	equ	0xFDF
  2295                           postinc2	equ	0xFDE
  2296                           postdec2	equ	0xFDD
  2297                           fsr2h	equ	0xFDA
  2298                           fsr2l	equ	0xFD9
  2299                           status	equ	0xFD8
  2300                           
  2301 ;; *************** function ___lwdiv *****************
  2302 ;; Defined at:
  2303 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  dividend        2    0[COMRAM] unsigned int 
  2306 ;;  divisor         2    2[COMRAM] unsigned int 
  2307 ;; Auto vars:     Size  Location     Type
  2308 ;;  quotient        2    4[COMRAM] unsigned int 
  2309 ;;  counter         1    6[COMRAM] unsigned char 
  2310 ;; Return value:  Size  Location     Type
  2311 ;;                  2    0[COMRAM] unsigned int 
  2312 ;; Registers used:
  2313 ;;		wreg, status,2, status,0
  2314 ;; Tracked objects:
  2315 ;;		On entry : 0/0
  2316 ;;		On exit  : 0/0
  2317 ;;		Unchanged: 0/0
  2318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2320 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2322 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2323 ;;Total ram usage:        7 bytes
  2324 ;; Hardware stack levels used:    1
  2325 ;; This function calls:
  2326 ;;		Nothing
  2327 ;; This function is called by:
  2328 ;;		_sprintf
  2329 ;; This function uses a non-reentrant model
  2330 ;;
  2331                           
  2332                           	psect	text5
  2333  0018E8                     __ptext5:
  2334                           	opt stack 0
  2335  0018E8                     ___lwdiv:
  2336                           	opt stack 29
  2337                           
  2338                           ;incstack = 0
  2339  0018E8  0E00               	movlw	0
  2340  0018EA  6E06               	movwf	___lwdiv@quotient+1,c
  2341  0018EC  0E00               	movlw	0
  2342  0018EE  6E05               	movwf	___lwdiv@quotient,c
  2343  0018F0  5003               	movf	___lwdiv@divisor,w,c
  2344  0018F2  1004               	iorwf	___lwdiv@divisor+1,w,c
  2345  0018F4  B4D8               	btfsc	status,2,c
  2346  0018F6  D01C               	goto	l623
  2347  0018F8  0E01               	movlw	1
  2348  0018FA  6E07               	movwf	___lwdiv@counter,c
  2349  0018FC  D004               	goto	l618
  2350  0018FE  90D8               	bcf	status,0,c
  2351  001900  3603               	rlcf	___lwdiv@divisor,f,c
  2352  001902  3604               	rlcf	___lwdiv@divisor+1,f,c
  2353  001904  2A07               	incf	___lwdiv@counter,f,c
  2354  001906                     l618:
  2355  001906  AE04               	btfss	___lwdiv@divisor+1,7,c
  2356  001908  D7FA               	goto	l619
  2357  00190A                     u1070:
  2358  00190A  90D8               	bcf	status,0,c
  2359  00190C  3605               	rlcf	___lwdiv@quotient,f,c
  2360  00190E  3606               	rlcf	___lwdiv@quotient+1,f,c
  2361  001910  5003               	movf	___lwdiv@divisor,w,c
  2362  001912  5C01               	subwf	___lwdiv@dividend,w,c
  2363  001914  5004               	movf	___lwdiv@divisor+1,w,c
  2364  001916  5802               	subwfb	___lwdiv@dividend+1,w,c
  2365  001918  A0D8               	btfss	status,0,c
  2366  00191A  D005               	goto	l622
  2367  00191C  5003               	movf	___lwdiv@divisor,w,c
  2368  00191E  5E01               	subwf	___lwdiv@dividend,f,c
  2369  001920  5004               	movf	___lwdiv@divisor+1,w,c
  2370  001922  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2371  001924  8005               	bsf	___lwdiv@quotient,0,c
  2372  001926                     l622:
  2373  001926  90D8               	bcf	status,0,c
  2374  001928  3204               	rrcf	___lwdiv@divisor+1,f,c
  2375  00192A  3203               	rrcf	___lwdiv@divisor,f,c
  2376  00192C  2E07               	decfsz	___lwdiv@counter,f,c
  2377  00192E  D7ED               	goto	u1070
  2378  001930                     l623:
  2379  001930  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2380  001934  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2381  001938  0012               	return		;funcret
  2382  00193A                     __end_of___lwdiv:
  2383                           	opt stack 0
  2384                           tblptru	equ	0xFF8
  2385                           tblptrh	equ	0xFF7
  2386                           tblptrl	equ	0xFF6
  2387                           tablat	equ	0xFF5
  2388                           prodh	equ	0xFF4
  2389                           prodl	equ	0xFF3
  2390                           intcon	equ	0xFF2
  2391                           intcon2	equ	0xFF1
  2392                           indf2	equ	0xFDF
  2393                           postinc2	equ	0xFDE
  2394                           postdec2	equ	0xFDD
  2395                           fsr2h	equ	0xFDA
  2396                           fsr2l	equ	0xFD9
  2397                           status	equ	0xFD8
  2398                           
  2399 ;; *************** function _setupSerial *****************
  2400 ;; Defined at:
  2401 ;;		line 78 in file "PB_Serial_main.c"
  2402 ;; Parameters:    Size  Location     Type
  2403 ;;		None
  2404 ;; Auto vars:     Size  Location     Type
  2405 ;;  dummy           1    0[COMRAM] unsigned char 
  2406 ;; Return value:  Size  Location     Type
  2407 ;;                  1    wreg      void 
  2408 ;; Registers used:
  2409 ;;		wreg, status,2
  2410 ;; Tracked objects:
  2411 ;;		On entry : 0/0
  2412 ;;		On exit  : 0/0
  2413 ;;		Unchanged: 0/0
  2414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2416 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2418 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2419 ;;Total ram usage:        1 bytes
  2420 ;; Hardware stack levels used:    1
  2421 ;; This function calls:
  2422 ;;		Nothing
  2423 ;; This function is called by:
  2424 ;;		_main
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text6
  2429  0019C8                     __ptext6:
  2430                           	opt stack 0
  2431  0019C8                     _setupSerial:
  2432                           	opt stack 30
  2433                           
  2434                           ;PB_Serial_main.c: 79: unsigned char dummy;
  2435                           ;PB_Serial_main.c: 80: BAUDCONbits.BRG16 = 0;
  2436                           
  2437                           ;incstack = 0
  2438  0019C8  96B8               	bcf	4024,3,c	;volatile
  2439                           
  2440                           ;PB_Serial_main.c: 81: TXSTA = 0;
  2441  0019CA  0E00               	movlw	0
  2442  0019CC  6EAC               	movwf	4012,c	;volatile
  2443                           
  2444                           ;PB_Serial_main.c: 82: SPBRG = 25;
  2445  0019CE  0E19               	movlw	25
  2446  0019D0  6EAF               	movwf	4015,c	;volatile
  2447                           
  2448                           ;PB_Serial_main.c: 83: SPBRGH = 0;
  2449  0019D2  0E00               	movlw	0
  2450  0019D4  6EB0               	movwf	4016,c	;volatile
  2451                           
  2452                           ;PB_Serial_main.c: 84: TXSTAbits.BRGH = 1;
  2453  0019D6  84AC               	bsf	4012,2,c	;volatile
  2454                           
  2455                           ;PB_Serial_main.c: 85: TXSTAbits.TXEN = 1;
  2456  0019D8  8AAC               	bsf	4012,5,c	;volatile
  2457                           
  2458                           ;PB_Serial_main.c: 87: RCSTA = 0;
  2459  0019DA  0E00               	movlw	0
  2460  0019DC  6EAB               	movwf	4011,c	;volatile
  2461                           
  2462                           ;PB_Serial_main.c: 88: RCSTAbits.CREN = 1;
  2463  0019DE  88AB               	bsf	4011,4,c	;volatile
  2464                           
  2465                           ;PB_Serial_main.c: 89: RCSTAbits.SPEN = 1;
  2466  0019E0  8EAB               	bsf	4011,7,c	;volatile
  2467                           
  2468                           ;PB_Serial_main.c: 90: ;
  2469                           ;PB_Serial_main.c: 91: dummy = RCREG;
  2470  0019E2  CFAE F001          	movff	4014,setupSerial@dummy	;volatile
  2471                           
  2472                           ;PB_Serial_main.c: 92: dummy = RCREG;
  2473  0019E6  CFAE F001          	movff	4014,setupSerial@dummy	;volatile
  2474  0019EA  0012               	return	
  2475  0019EC                     __end_of_setupSerial:
  2476                           	opt stack 0
  2477                           tblptru	equ	0xFF8
  2478                           tblptrh	equ	0xFF7
  2479                           tblptrl	equ	0xFF6
  2480                           tablat	equ	0xFF5
  2481                           prodh	equ	0xFF4
  2482                           prodl	equ	0xFF3
  2483                           intcon	equ	0xFF2
  2484                           intcon2	equ	0xFF1
  2485                           indf2	equ	0xFDF
  2486                           postinc2	equ	0xFDE
  2487                           postdec2	equ	0xFDD
  2488                           fsr2h	equ	0xFDA
  2489                           fsr2l	equ	0xFD9
  2490                           status	equ	0xFD8
  2491                           
  2492 ;; *************** function _send_string_no_lib *****************
  2493 ;; Defined at:
  2494 ;;		line 124 in file "PB_Serial_main.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  p               2    1[COMRAM] PTR unsigned char 
  2497 ;;		 -> STR_15(9), STR_14(7), STR_13(6), STR_12(9), 
  2498 ;;		 -> STR_11(7), STR_10(6), STR_9(9), STR_8(7), 
  2499 ;;		 -> STR_7(6), STR_6(9), STR_5(7), STR_4(6), 
  2500 ;;		 -> main@buffer(200), STR_1(43), 
  2501 ;; Auto vars:     Size  Location     Type
  2502 ;;		None
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  1    wreg      void 
  2505 ;; Registers used:
  2506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2512 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2515 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2516 ;;Total ram usage:        2 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; Hardware stack levels required when called:    1
  2519 ;; This function calls:
  2520 ;;		_send_byte_no_lib
  2521 ;; This function is called by:
  2522 ;;		_main
  2523 ;; This function uses a non-reentrant model
  2524 ;;
  2525                           
  2526                           	psect	text7
  2527  001892                     __ptext7:
  2528                           	opt stack 0
  2529  001892                     _send_string_no_lib:
  2530                           	opt stack 29
  2531                           
  2532                           ;PB_Serial_main.c: 125: while (*p) {
  2533                           
  2534                           ;incstack = 0
  2535  001892  D015               	goto	l93
  2536  001894                     
  2537                           ;PB_Serial_main.c: 126: send_byte_no_lib(*p);
  2538  001894  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
  2539  001898  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  2540  00189C  0E00               	movlw	low (__smallconst shr (0+16))
  2541  00189E  6EF8               	movwf	tblptru,c
  2542  0018A0  0E0F               	movlw	(high __ramtop+-1)
  2543  0018A2  64F7               	cpfsgt	tblptrh,c
  2544  0018A4  D003               	bra	u1167
  2545  0018A6  0008               	tblrd		*
  2546  0018A8  50F5               	movf	tablat,w,c
  2547  0018AA  D005               	bra	u1160
  2548  0018AC                     u1167:
  2549  0018AC  CFF6 FFE9          	movff	tblptrl,fsr0l
  2550  0018B0  CFF7 FFEA          	movff	tblptrh,fsr0h
  2551  0018B4  50EF               	movf	indf0,w,c
  2552  0018B6                     u1160:
  2553  0018B6  EC11  F00D         	call	_send_byte_no_lib
  2554                           
  2555                           ;PB_Serial_main.c: 127: p++;
  2556  0018BA  4A02               	infsnz	send_string_no_lib@p,f,c
  2557  0018BC  2A03               	incf	send_string_no_lib@p+1,f,c
  2558  0018BE                     l93:
  2559  0018BE  C002  FFF6         	movff	send_string_no_lib@p,tblptrl
  2560  0018C2  C003  FFF7         	movff	send_string_no_lib@p+1,tblptrh
  2561  0018C6  0E00               	movlw	low (__smallconst shr (0+16))
  2562  0018C8  6EF8               	movwf	tblptru,c
  2563  0018CA  0E0F               	movlw	(high __ramtop+-1)
  2564  0018CC  64F7               	cpfsgt	tblptrh,c
  2565  0018CE  D003               	bra	u1177
  2566  0018D0  0008               	tblrd		*
  2567  0018D2  50F5               	movf	tablat,w,c
  2568  0018D4  D005               	bra	u1170
  2569  0018D6                     u1177:
  2570  0018D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2571  0018DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2572  0018DE  50EF               	movf	indf0,w,c
  2573  0018E0                     u1170:
  2574  0018E0  0900               	iorlw	0
  2575  0018E2  B4D8               	btfsc	status,2,c
  2576  0018E4  0012               	return	
  2577  0018E6  D7D6               	goto	l94
  2578  0018E8                     __end_of_send_string_no_lib:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           prodh	equ	0xFF4
  2585                           prodl	equ	0xFF3
  2586                           intcon	equ	0xFF2
  2587                           intcon2	equ	0xFF1
  2588                           indf0	equ	0xFEF
  2589                           fsr0h	equ	0xFEA
  2590                           fsr0l	equ	0xFE9
  2591                           indf2	equ	0xFDF
  2592                           postinc2	equ	0xFDE
  2593                           postdec2	equ	0xFDD
  2594                           fsr2h	equ	0xFDA
  2595                           fsr2l	equ	0xFD9
  2596                           status	equ	0xFD8
  2597                           
  2598 ;; *************** function _send_byte_no_lib *****************
  2599 ;; Defined at:
  2600 ;;		line 116 in file "PB_Serial_main.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;  c               1    wreg     unsigned char 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  c               1    0[COMRAM] unsigned char 
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      void 
  2607 ;; Registers used:
  2608 ;;		wreg
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2615 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2617 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;Total ram usage:        1 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; This function calls:
  2621 ;;		Nothing
  2622 ;; This function is called by:
  2623 ;;		_send_string_no_lib
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text8
  2628  001A22                     __ptext8:
  2629                           	opt stack 0
  2630  001A22                     _send_byte_no_lib:
  2631                           	opt stack 29
  2632                           
  2633                           ;incstack = 0
  2634                           ;send_byte_no_lib@c stored from wreg
  2635  001A22  6E01               	movwf	send_byte_no_lib@c,c
  2636                           
  2637                           ;PB_Serial_main.c: 117: while (!TXSTAbits.TRMT)
  2638  001A24  D001               	goto	l87
  2639  001A26                     l88:
  2640  001A26  0004               	clrwdt		;# 
  2641  001A28                     l87:
  2642  001A28  A2AC               	btfss	4012,1,c	;volatile
  2643  001A2A  D7FD               	goto	l88
  2644                           
  2645                           ;PB_Serial_main.c: 120: }
  2646                           ;PB_Serial_main.c: 121: TXREG = c;
  2647  001A2C  C001  FFAD         	movff	send_byte_no_lib@c,4013	;volatile
  2648  001A30  0012               	return		;funcret
  2649  001A32                     __end_of_send_byte_no_lib:
  2650                           	opt stack 0
  2651                           tblptru	equ	0xFF8
  2652                           tblptrh	equ	0xFF7
  2653                           tblptrl	equ	0xFF6
  2654                           tablat	equ	0xFF5
  2655                           prodh	equ	0xFF4
  2656                           prodl	equ	0xFF3
  2657                           intcon	equ	0xFF2
  2658                           intcon2	equ	0xFF1
  2659                           indf0	equ	0xFEF
  2660                           fsr0h	equ	0xFEA
  2661                           fsr0l	equ	0xFE9
  2662                           indf2	equ	0xFDF
  2663                           postinc2	equ	0xFDE
  2664                           postdec2	equ	0xFDD
  2665                           fsr2h	equ	0xFDA
  2666                           fsr2l	equ	0xFD9
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _read_byte_no_lib *****************
  2670 ;; Defined at:
  2671 ;;		line 110 in file "PB_Serial_main.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;		None
  2674 ;; Auto vars:     Size  Location     Type
  2675 ;;  c               1    0[COMRAM] unsigned char 
  2676 ;; Return value:  Size  Location     Type
  2677 ;;                  1    wreg      unsigned char 
  2678 ;; Registers used:
  2679 ;;		wreg, status,2
  2680 ;; Tracked objects:
  2681 ;;		On entry : 0/0
  2682 ;;		On exit  : 0/0
  2683 ;;		Unchanged: 0/0
  2684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2685 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2687 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2688 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2689 ;;Total ram usage:        1 bytes
  2690 ;; Hardware stack levels used:    1
  2691 ;; This function calls:
  2692 ;;		Nothing
  2693 ;; This function is called by:
  2694 ;;		_main
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text9
  2699  001A3C                     __ptext9:
  2700                           	opt stack 0
  2701  001A3C                     _read_byte_no_lib:
  2702                           	opt stack 30
  2703                           
  2704                           ;PB_Serial_main.c: 111: unsigned char c;
  2705                           ;PB_Serial_main.c: 112: c = RCREG;
  2706                           
  2707                           ;incstack = 0
  2708  001A3C  CFAE F001          	movff	4014,read_byte_no_lib@c	;volatile
  2709                           
  2710                           ;PB_Serial_main.c: 113: return c;
  2711  001A40  5001               	movf	read_byte_no_lib@c,w,c
  2712  001A42  0012               	return	
  2713  001A44                     __end_of_read_byte_no_lib:
  2714                           	opt stack 0
  2715                           tblptru	equ	0xFF8
  2716                           tblptrh	equ	0xFF7
  2717                           tblptrl	equ	0xFF6
  2718                           tablat	equ	0xFF5
  2719                           prodh	equ	0xFF4
  2720                           prodl	equ	0xFF3
  2721                           intcon	equ	0xFF2
  2722                           intcon2	equ	0xFF1
  2723                           indf0	equ	0xFEF
  2724                           fsr0h	equ	0xFEA
  2725                           fsr0l	equ	0xFE9
  2726                           indf2	equ	0xFDF
  2727                           postinc2	equ	0xFDE
  2728                           postdec2	equ	0xFDD
  2729                           fsr2h	equ	0xFDA
  2730                           fsr2l	equ	0xFD9
  2731                           status	equ	0xFD8
  2732                           
  2733 ;; *************** function _is_byte_available *****************
  2734 ;; Defined at:
  2735 ;;		line 97 in file "PB_Serial_main.c"
  2736 ;; Parameters:    Size  Location     Type
  2737 ;;		None
  2738 ;; Auto vars:     Size  Location     Type
  2739 ;;		None
  2740 ;; Return value:  Size  Location     Type
  2741 ;;                  1    wreg      unsigned char 
  2742 ;; Registers used:
  2743 ;;		wreg
  2744 ;; Tracked objects:
  2745 ;;		On entry : 0/0
  2746 ;;		On exit  : 0/0
  2747 ;;		Unchanged: 0/0
  2748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2749 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2751 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2752 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2753 ;;Total ram usage:        0 bytes
  2754 ;; Hardware stack levels used:    1
  2755 ;; This function calls:
  2756 ;;		Nothing
  2757 ;; This function is called by:
  2758 ;;		_main
  2759 ;; This function uses a non-reentrant model
  2760 ;;
  2761                           
  2762                           	psect	text10
  2763  001A0A                     __ptext10:
  2764                           	opt stack 0
  2765  001A0A                     _is_byte_available:
  2766                           	opt stack 30
  2767                           
  2768                           ;PB_Serial_main.c: 99: if (RCSTAbits.FERR || RCSTAbits.OERR)
  2769                           
  2770                           ;incstack = 0
  2771  001A0A  B4AB               	btfsc	4011,2,c	;volatile
  2772  001A0C  D002               	goto	u1140
  2773  001A0E  A2AB               	btfss	4011,1,c	;volatile
  2774  001A10  D002               	goto	l76
  2775  001A12                     u1140:
  2776                           
  2777                           ;PB_Serial_main.c: 100: {
  2778                           ;PB_Serial_main.c: 101: RCSTAbits.CREN = 0;
  2779  001A12  98AB               	bcf	4011,4,c	;volatile
  2780                           
  2781                           ;PB_Serial_main.c: 102: RCSTAbits.CREN = 1;
  2782  001A14  88AB               	bsf	4011,4,c	;volatile
  2783  001A16                     l76:
  2784                           
  2785                           ;PB_Serial_main.c: 103: }
  2786                           ;PB_Serial_main.c: 105: if (PIR1bits.RCIF) return 1;
  2787  001A16  AA9E               	btfss	3998,5,c	;volatile
  2788  001A18  D002               	goto	l79
  2789  001A1A  0E01               	movlw	1
  2790  001A1C  0012               	return	
  2791  001A1E                     l79:
  2792                           
  2793                           ;PB_Serial_main.c: 106: else return 0;
  2794  001A1E  0E00               	movlw	0
  2795  001A20  0012               	return	
  2796  001A22                     __end_of_is_byte_available:
  2797                           	opt stack 0
  2798                           tblptru	equ	0xFF8
  2799                           tblptrh	equ	0xFF7
  2800                           tblptrl	equ	0xFF6
  2801                           tablat	equ	0xFF5
  2802                           prodh	equ	0xFF4
  2803                           prodl	equ	0xFF3
  2804                           intcon	equ	0xFF2
  2805                           intcon2	equ	0xFF1
  2806                           indf0	equ	0xFEF
  2807                           fsr0h	equ	0xFEA
  2808                           fsr0l	equ	0xFE9
  2809                           indf2	equ	0xFDF
  2810                           postinc2	equ	0xFDE
  2811                           postdec2	equ	0xFDD
  2812                           fsr2h	equ	0xFDA
  2813                           fsr2l	equ	0xFD9
  2814                           status	equ	0xFD8
  2815                           
  2816 ;; *************** function _delay_ms *****************
  2817 ;; Defined at:
  2818 ;;		line 70 in file "PB_Serial_main.c"
  2819 ;; Parameters:    Size  Location     Type
  2820 ;;  n               2    0[COMRAM] unsigned int 
  2821 ;; Auto vars:     Size  Location     Type
  2822 ;;  i               2    2[COMRAM] int 
  2823 ;; Return value:  Size  Location     Type
  2824 ;;                  1    wreg      void 
  2825 ;; Registers used:
  2826 ;;		wreg, status,2, status,0
  2827 ;; Tracked objects:
  2828 ;;		On entry : 0/0
  2829 ;;		On exit  : 0/0
  2830 ;;		Unchanged: 0/0
  2831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2832 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2835 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2836 ;;Total ram usage:        4 bytes
  2837 ;; Hardware stack levels used:    1
  2838 ;; This function calls:
  2839 ;;		Nothing
  2840 ;; This function is called by:
  2841 ;;		_main
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text11
  2846  0019A2                     __ptext11:
  2847                           	opt stack 0
  2848  0019A2                     _delay_ms:
  2849                           	opt stack 30
  2850                           
  2851                           ;PB_Serial_main.c: 72: int i;
  2852                           ;PB_Serial_main.c: 73: for (i=0; i < n; i++){
  2853                           
  2854                           ;incstack = 0
  2855  0019A2  0E00               	movlw	0
  2856  0019A4  6E04               	movwf	delay_ms@i+1,c
  2857  0019A6  0E00               	movlw	0
  2858  0019A8  6E03               	movwf	delay_ms@i,c
  2859  0019AA  D007               	goto	l67
  2860  0019AC                     
  2861                           ;PB_Serial_main.c: 74: _delaywdt((unsigned long)((1)*(4000000UL/4000.0))) ;
  2862  0019AC  0EC8               	movlw	200
  2863  0019AE                     u2057:
  2864  0019AE  0004               	clrwdt	
  2865  0019B0  0004               	clrwdt	
  2866  0019B2  2EE8               	decfsz	wreg,f,c
  2867  0019B4  D7FC               	bra	u2057
  2868  0019B6  4A03               	infsnz	delay_ms@i,f,c
  2869  0019B8  2A04               	incf	delay_ms@i+1,f,c
  2870  0019BA                     l67:
  2871  0019BA  5001               	movf	delay_ms@n,w,c
  2872  0019BC  5C03               	subwf	delay_ms@i,w,c
  2873  0019BE  5002               	movf	delay_ms@n+1,w,c
  2874  0019C0  5804               	subwfb	delay_ms@i+1,w,c
  2875  0019C2  B0D8               	btfsc	status,0,c
  2876  0019C4  0012               	return	
  2877  0019C6  D7F2               	goto	l68
  2878  0019C8                     __end_of_delay_ms:
  2879                           	opt stack 0
  2880                           tblptru	equ	0xFF8
  2881                           tblptrh	equ	0xFF7
  2882                           tblptrl	equ	0xFF6
  2883                           tablat	equ	0xFF5
  2884                           prodh	equ	0xFF4
  2885                           prodl	equ	0xFF3
  2886                           intcon	equ	0xFF2
  2887                           intcon2	equ	0xFF1
  2888                           indf0	equ	0xFEF
  2889                           fsr0h	equ	0xFEA
  2890                           fsr0l	equ	0xFE9
  2891                           wreg	equ	0xFE8
  2892                           indf2	equ	0xFDF
  2893                           postinc2	equ	0xFDE
  2894                           postdec2	equ	0xFDD
  2895                           fsr2h	equ	0xFDA
  2896                           fsr2l	equ	0xFD9
  2897                           status	equ	0xFD8
  2898                           tblptru	equ	0xFF8
  2899                           tblptrh	equ	0xFF7
  2900                           tblptrl	equ	0xFF6
  2901                           tablat	equ	0xFF5
  2902                           prodh	equ	0xFF4
  2903                           prodl	equ	0xFF3
  2904                           intcon	equ	0xFF2
  2905                           intcon2	equ	0xFF1
  2906                           indf0	equ	0xFEF
  2907                           fsr0h	equ	0xFEA
  2908                           fsr0l	equ	0xFE9
  2909                           wreg	equ	0xFE8
  2910                           indf2	equ	0xFDF
  2911                           postinc2	equ	0xFDE
  2912                           postdec2	equ	0xFDD
  2913                           fsr2h	equ	0xFDA
  2914                           fsr2l	equ	0xFD9
  2915                           status	equ	0xFD8
  2916                           
  2917                           	psect	rparam
  2918  0000                     tblptru	equ	0xFF8
  2919                           tblptrh	equ	0xFF7
  2920                           tblptrl	equ	0xFF6
  2921                           tablat	equ	0xFF5
  2922                           prodh	equ	0xFF4
  2923                           prodl	equ	0xFF3
  2924                           intcon	equ	0xFF2
  2925                           intcon2	equ	0xFF1
  2926                           indf0	equ	0xFEF
  2927                           fsr0h	equ	0xFEA
  2928                           fsr0l	equ	0xFE9
  2929                           wreg	equ	0xFE8
  2930                           indf2	equ	0xFDF
  2931                           postinc2	equ	0xFDE
  2932                           postdec2	equ	0xFDD
  2933                           fsr2h	equ	0xFDA
  2934                           fsr2l	equ	0xFD9
  2935                           status	equ	0xFD8


Data Sizes:
    Strings     157
    Constant    18
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     47      47
    BANK0           128      0       0
    BANK1           256    203     203
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 29
		 -> STR_3(CODE[29]), STR_2(CODE[19]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 200
		 -> main@buffer(BANK1[200]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    main@Status	PTR unsigned char  size(2) Largest target is 7
		 -> STR_14(CODE[7]), STR_13(CODE[6]), STR_11(CODE[7]), STR_10(CODE[6]), 
		 -> STR_8(CODE[7]), STR_7(CODE[6]), STR_5(CODE[7]), STR_4(CODE[6]), 

    send_string_no_lib@p	PTR unsigned char  size(2) Largest target is 200
		 -> STR_15(CODE[9]), STR_14(CODE[7]), STR_13(CODE[6]), STR_12(CODE[9]), 
		 -> STR_11(CODE[7]), STR_10(CODE[6]), STR_9(CODE[9]), STR_8(CODE[7]), 
		 -> STR_7(CODE[6]), STR_6(CODE[9]), STR_5(CODE[7]), STR_4(CODE[6]), 
		 -> main@buffer(BANK1[200]), STR_1(CODE[43]), 


Critical Paths under _main in COMRAM

    _main->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _send_string_no_lib->_send_byte_no_lib

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                               206   206      0    4270
                                             46 COMRAM     1     1      0
                                              0 BANK1    203   203      0
                           _delay_ms
                  _is_byte_available
                   _read_byte_no_lib
                 _send_string_no_lib
                        _setupSerial
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    23     20    2617
                                             12 COMRAM    34    14     20
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              3     3      0      68
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     311
                                              7 COMRAM     5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _setupSerial                                          1     1      0       2
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _send_string_no_lib                                   2     0      2     903
                                              1 COMRAM     2     0      2
                   _send_byte_no_lib
 ---------------------------------------------------------------------------------
 (2) _send_byte_no_lib                                     1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _read_byte_no_lib                                     1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _is_byte_available                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             4     2      2     502
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _delay_ms
   _is_byte_available
   _read_byte_no_lib
   _send_string_no_lib
     _send_byte_no_lib
   _setupSerial
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     ___wmul
     _isdigit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             400      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F     2F      2F       1       37.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     CB      CB       7       79.3%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
ABS                  0      0       0      34        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BIGRAM             F7F      0       0      37        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Aug 19 16:24:12 2024

                         l67 19BA                           l68 19AC                           l76 1A16  
                         l93 18BE                           l94 1894                           l79 1A1E  
                         l87 1A28                           l88 1A26          ___wmul@multiplicand 0003  
                __CFG_BORV$3 000000                 __CFG_CP0$OFF 000000                 __CFG_CP1$OFF 000000  
               __CFG_CP2$OFF 000000                 __CFG_CP3$OFF 000000                  __CFG_OSC$XT 000000  
                __CFG_LVP$ON 000000                  __CFG_WDT$ON 000000                          l110 11CC  
                        l200 17B4                          l120 128A                          l112 11FA  
                        l104 10F2                          l201 1864                          l121 128E  
                        l130 13F4                          l106 137C                          l114 122A  
                        l203 1844                          l123 1292                          l107 1108  
                        l204 17BA                          l132 140A                          l108 13C0  
                        l124 1296                          l116 125A                          l205 1854  
                        l125 12F8                          l109 11C0                          l206 17FE  
                        l134 1480                          l126 1362                          l118 127E  
                        l119 1284                          l136 14FA                          l128 13DE  
                        l171 1634                          l155 1542                          l172 15FC  
                        l164 159E                          l156 155C                          l190 1732  
                        l166 1600                          l158 1570                          l191 1772  
                        l183 16EC                          l175 1662                          l159 156A  
                        l192 1752                          l184 16AC                          l178 16DC  
                        l179 167C                          l188 1706                          l189 172A  
                        l622 1926                          l623 1930                          l632 1968  
                        l633 1972                          l618 1906                          l619 18FE  
                        l539 1A02                          l628 1950                          l629 1948  
               __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000                          wreg 000FE8  
                       l1352 1680                         l1366 16B0                         STR_1 1013  
                       STR_2 105B                         STR_3 103E                         STR_4 10AA  
                       STR_5 10A3                         STR_6 109A                         STR_7 10AA  
                       STR_8 10A3                         STR_9 1091                         u1100 1954  
                       u2010 1508                         u1140 1A12                         u1070 190A  
                       u2030 151E                         u1160 18B6                         u1400 186C  
                       u1170 18E0                         u1410 1884                         u2028 150A  
                       u1500 1172                         _LATA 000F89                         u1510 117E  
                       u1430 1146                         _LATB 000F8A                         u1167 18AC  
                       _LATC 000F8B                         u2048 1520                         u1520 1180  
                       u1440 1148                         _LATD 000F8C                         u2057 19AE  
                       u1177 18D6                         _LATE 000F8D                         u1370 177A  
                       u1530 118C                         u1450 1154                         u1380 1798  
                       u1540 118E                         u1460 1156                         u1710 1302  
                       u1630 12A0                         u1550 119A                         u1470 1162  
                       u1560 119C                         u1480 1164                         u1730 131C  
                       u1650 12B6                         u1570 11A8                         u1490 1170  
                       u1708 12EC                         u1580 11AA                         u1830 1418  
                       u1750 1338                         u1670 12CE                         u1920 148E  
                       u1728 1304                         u1648 12A2                         u1850 142E  
                       u1770 1350                         u1690 12EA                         u1940 14A8  
                       u1908 1464                         u1748 131E                         u1668 12B8  
                       u1870 1446                         u1960 14C4                         u1848 141A  
                       u1768 133A                         u1688 12D0                         u1938 1490  
                       u1890 1462                         u1980 14DC                         u1868 1430  
                       u1788 1352                         u1958 14AA                         u1888 1448  
                       u1978 14C6                         u1998 14DE                         _main 10B2  
           _send_byte_no_lib 1A22                         fsr0h 000FEA                         indf0 000FEF  
                       fsr2h 000FDA                         fsr0l 000FE9                         indf2 000FDF  
                       fsr2l 000FD9                         prodh 000FF4                         prodl 000FF3  
                       start 0000                __CFG_IESO$OFF 000000                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ?_main 0001                        STR_10 10AA  
                      STR_11 10A3                        STR_12 107F                        STR_13 10AA  
                      STR_14 10A3                        STR_15 1088                        STR_16 106E  
            __end_of___lwdiv 193A              __end_of___lwmod 197C                        _RCREG 000FAE  
                      _RCSTA 000FAB                        _SPBRG 000FAF                        _PORTA 000F80  
                      _PORTC 000F82                        _PORTD 000F83                        _TRISA 000F92  
                      _TRISB 000F93                        _TRISC 000F94                        _TRISD 000F95  
                      _TRISE 000F96                        _TXREG 000FAD                        _TXSTA 000FAC  
              __CFG_PWRT$OFF 000000                __CFG_WRT0$OFF 000000                __CFG_WRT1$OFF 000000  
              __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000               __CFG_EBTR0$OFF 000000  
             __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000               __CFG_EBTR2$OFF 000000  
             __CFG_EBTR3$OFF 000000                __CFG_WRTB$OFF 000000                __CFG_WRTC$OFF 000000  
              __CFG_WRTD$OFF 000000               __CFG_EBTRB$OFF 000000              __end_of_dpowers 100B  
            __end_of_isdigit 1A0A                        main@x 01C8                        tablat 000FF5  
                      status 000FD8              __end_of_sprintf 1892               __CFG_PBADEN$ON 000000  
            __initialization 1A32                 __end_of_main 1538                       ??_main 002F  
              __activetblptr 000002                       _ADCON1 000FC1                       _INTCON 000FF2  
                     _SPBRGH 000FB0             __end_of_delay_ms 19C8               __CFG_XINST$OFF 000000  
                     ___wmul 197C               __CFG_STVREN$ON 000000                    ??___lwdiv 0005  
                  ??___lwmod 000C                    ??_isdigit 0001                 __mediumconst 0000  
        send_string_no_lib@p 0002                       tblptrh 000FF7                       tblptrl 000FF6  
                     tblptru 000FF8           _send_string_no_lib 1892                 ?_setupSerial 0001  
                  ??_sprintf 0021                   __accesstop 0080      __end_of__initialization 1A32  
        ?_send_string_no_lib 0002            ?_read_byte_no_lib 0001                ___rparam_used 000001  
         ??_read_byte_no_lib 0001               __pcstackCOMRAM 0001         ??_send_string_no_lib 0004  
   __end_of_send_byte_no_lib 1A32                 sprintf@width 002C            read_byte_no_lib@c 0001  
                    ?___wmul 0001                      _INTCON2 000FF1                    ?_delay_ms 0001  
          _is_byte_available 1A0A                      __Hparam 0000                      __Lparam 0000  
         ?_is_byte_available 0001              __size_of___wmul 0026                      ___lwdiv 18E8  
                    ___lwmod 193A                 __psmallconst 1000                      __pcinit 1A32  
                    __ramtop 1000          ??_is_byte_available 0001                      __ptext0 10B2  
                    __ptext1 1538                      __ptext2 19EC                      __ptext3 197C  
                    __ptext4 193A                      __ptext5 18E8                      __ptext6 19C8  
                    __ptext7 1892                      __ptext8 1A22                      __ptext9 1A3C  
          __end_of_hexpowers 1013                      _dpowers 1001                      _isdigit 19EC  
                 ??_delay_ms 0003                      _sprintf 1538         end_of_initialization 1A32  
       __size_of_setupSerial 0024                __Lmediumconst 0000    __end_of_is_byte_available 1A22  
                  _RCSTAbits 000FAB                      postdec2 000FDD                      postinc2 000FDE  
           setupSerial@dummy 0001                    _PORTBbits 000F81                    _PORTCbits 000F82  
                  _PORTDbits 000F83                    _PORTEbits 000F84                   main@Status 01C9  
                 main@buffer 0100                    _TXSTAbits 000FAC            send_byte_no_lib@c 0001  
             __end_of___wmul 19A2                  _BAUDCONbits 000FB8    __size_of_read_byte_no_lib 0008  
          ?_send_byte_no_lib 0001          start_initialization 1A32           ??_send_byte_no_lib 0001  
 __size_of_is_byte_available 0018                     ??___wmul 0005             __CFG_LPT1OSC$OFF 000000  
__size_of_send_string_no_lib 0056                __pcstackBANK1 0100            __size_of_delay_ms 0026  
                sprintf@flag 002B                  sprintf@prec 0028             ___lwdiv@dividend 0001  
          __CFG_CCP2MX$PORTC 000000                     ?___lwdiv 0001                     ?___lwmod 0008  
                __smallconst 1000                     ?_isdigit 0001                    _hexpowers 100B  
           ___lwdiv@quotient 0005                     ?_sprintf 000D               ___wmul@product 0005  
                  delay_ms@i 0003                    delay_ms@n 0001                     _PIR1bits 000F9E  
           __CFG_WDTPS$32768 000000             _read_byte_no_lib 1A3C            ___wmul@multiplier 0001  
              ??_setupSerial 0001                     __Hrparam 0000                     __Lrparam 0000  
         __CFG_BOREN$SBORDIS 000000             __size_of___lwdiv 0052             __size_of___lwmod 0042  
                _isdigit$872 0002                   sprintf@idx 0025                   sprintf@val 0029  
           __size_of_isdigit 001E                     _delay_ms 19A2              ___lwdiv@divisor 0003  
            ___lwdiv@counter 0007                     __ptext10 1A0A                     __ptext11 19A2  
           __size_of_sprintf 035A                __size_of_main 0486    __size_of_send_byte_no_lib 0010  
        __end_of_setupSerial 19EC                     isdigit@c 0003                    sprintf@ap 0026  
                  sprintf@sp 000D             ___lwmod@dividend 0008   __end_of_send_string_no_lib 18E8  
                   sprintf@c 002E                     sprintf@f 000F              ___lwmod@divisor 000A  
            ___lwmod@counter 000C                  _setupSerial 19C8     __end_of_read_byte_no_lib 1A44  
